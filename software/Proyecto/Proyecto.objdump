
Proyecto.elf:     file format elf32-littlenios2
Proyecto.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00012578 memsz 0x00012578 flags r-x
    LOAD off    0x00013598 vaddr 0x00032598 paddr 0x000340b4 align 2**12
         filesz 0x00001b1c memsz 0x00001b1c flags rw-
    LOAD off    0x00015bd0 vaddr 0x00035bd0 paddr 0x00035bd0 align 2**12
         filesz 0x00000000 memsz 0x000001a4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011f1c  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000438  00032160  00032160  00013160  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b1c  00032598  000340b4  00013598  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000001a4  00035bd0  00035bd0  00015bd0  2**2
                  ALLOC, SMALL_DATA
  6 .SRAM1        00000000  00035d74  00035d74  000150b4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000150b4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001088  00000000  00000000  000150d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000253c4  00000000  00000000  00016160  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009da0  00000000  00000000  0003b524  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c614  00000000  00000000  000452c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000248c  00000000  00000000  000518d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003ed4  00000000  00000000  00053d64  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a951  00000000  00000000  00057c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0007258c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001da8  00000000  00000000  000725f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00077846  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000b  00000000  00000000  00077849  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00077854  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00077855  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  00077856  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0007785f  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  00077868  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000007  00000000  00000000  00077871  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000033  00000000  00000000  00077878  2**0
                  CONTENTS, READONLY
 26 .jdi          00003e7c  00000000  00000000  000778ab  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00038a89  00000000  00000000  0007b727  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
00032160 l    d  .rodata	00000000 .rodata
00032598 l    d  .rwdata	00000000 .rwdata
00035bd0 l    d  .bss	00000000 .bss
00035d74 l    d  .SRAM1	00000000 .SRAM1
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Proyecto_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00035c10 l     O .bss	00000014 output.3492
00035c24 l     O .bss	00000028 output.3512
00035bd0 l     O .bss	00000004 output.3539
00035bd4 l     O .bss	00000004 output1.3543
00000000 l    df *ABS*	00000000 w_exp.c
00000000 l    df *ABS*	00000000 e_exp.c
00032288 l     O .rodata	00000010 halF
00032278 l     O .rodata	00000010 ln2HI
00032268 l     O .rodata	00000010 ln2LO
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00032598 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000323de l     O .rodata	00000010 zeroes.4404
00027940 l     F .text	000000bc __sbprintf
000323ee l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00027b50 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00029680 l     F .text	00000008 __fp_unlock
00029694 l     F .text	0000019c __sinit.part.1
00029830 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
000329dc l     O .rwdata	00000020 lc_ctype_charset
000329bc l     O .rwdata	00000020 lc_message_charset
000329fc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0003241c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002c148 l     F .text	000000fc __sprint_r.part.0
00032550 l     O .rodata	00000010 blanks.4348
00032540 l     O .rodata	00000010 zeroes.4349
0002d6d4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0002f820 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002f92c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002f958 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002fa44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002fb24 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002fc10 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002fde4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000340a4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00030060 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00030194 l     F .text	00000034 alt_dev_reg
00032fe4 l     O .rwdata	00001060 JTAG_UART
00034044 l     O .rwdata	0000002c LDR
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00030490 l     F .text	0000020c altera_avalon_jtag_uart_irq
0003069c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00030cd4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00031094 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00031508 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00031648 l     F .text	0000003c alt_get_errno
00031684 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00035c0c g     O .bss	00000004 alt_instruction_exception_handler
0002bc58 g     F .text	00000074 _mprec_log10
0002bd44 g     F .text	0000008c __any_on
0002e12c g     F .text	00000054 _isatty_r
00032428 g     O .rodata	00000028 __mprec_tinytens
0002fd20 g     F .text	0000007c alt_main
00035c74 g     O .bss	00000100 alt_irq
0002e180 g     F .text	00000060 _lseek_r
000340b4 g       *ABS*	00000000 __flash_rwdata_start
0002f6f0 g     F .text	00000088 .hidden __eqdf2
00035d74 g       *ABS*	00000000 __alt_heap_start
000256f0 g     F .text	0000003c printf
0002ea58 g     F .text	0000009c _wcrtomb_r
0002bf70 g     F .text	0000005c __sseek
000299d0 g     F .text	00000010 __sinit
0002e900 g     F .text	00000140 __swbuf_r
00029fdc g     F .text	0000007c _setlocale_r
00029838 g     F .text	00000068 __sfmoreglue
0002fdc0 g     F .text	00000024 __malloc_unlock
00022040 g     F .text	00000440 .hidden __divsf3
0002e1e0 g     F .text	0000015c memmove
000299b8 g     F .text	00000018 _cleanup
0002add4 g     F .text	000000a8 _Balloc
00022d60 g     F .text	00000070 .hidden __fixsfsi
00024054 g     F .text	000000dc .hidden __gtdf2
00031a40 g     F .text	00000024 altera_nios2_gen2_irq_init
000256b0 g     F .text	00000010 __errno
00020510 g     F .text	000000ec tansig
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
000205fc g     F .text	00000734 layer1
0002dc14 g     F .text	0000005c _fstat_r
00035bf0 g     O .bss	00000004 errno
0002beec g     F .text	00000008 __seofread
00035bf8 g     O .bss	00000004 alt_argv
0003c070 g       *ABS*	00000000 _gp
00030030 g     F .text	00000030 usleep
0002287c g     F .text	000004e4 .hidden __subsf3
00032e64 g     O .rwdata	00000180 alt_fd_list
00031a64 g     F .text	00000090 alt_find_dev
0002ab64 g     F .text	00000148 memcpy
00029688 g     F .text	0000000c _cleanup_r
000252b8 g     F .text	000000dc .hidden __floatsidf
000315cc g     F .text	0000007c alt_io_redirect
00024130 g     F .text	000000f4 .hidden __ltdf2
00032160 g       *ABS*	00000000 __DTOR_END__
00031d30 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0002bdd0 g     F .text	00000074 __fpclassifyd
0002bbb4 g     F .text	000000a4 __ratio
0002d6b8 g     F .text	0000001c __vfiprintf_internal
00030894 g     F .text	0000021c altera_avalon_jtag_uart_read
000256c0 g     F .text	00000030 _printf_r
00021abc g     F .text	00000064 .hidden __udivsi3
0002fa80 g     F .text	000000a4 isatty
00032478 g     O .rodata	000000c8 __mprec_tens
0002a058 g     F .text	0000000c __locale_charset
00031ca0 g     F .text	00000090 alt_icache_flush
00035bec g     O .bss	00000004 __malloc_top_pad
0003407c g     O .rwdata	00000004 __mb_cur_max
0002a088 g     F .text	0000000c _localeconv_r
0002dc70 g     F .text	000004bc __sfvwrite_r
0002b1e0 g     F .text	0000003c __i2b
0002be44 g     F .text	00000054 _sbrk_r
0002e33c g     F .text	00000060 _read_r
0003409c g     O .rwdata	00000004 alt_max_fd
0002d908 g     F .text	000000f0 _fclose_r
00029650 g     F .text	00000030 fflush
00035be8 g     O .bss	00000004 __malloc_max_sbrked_mem
00025394 g     F .text	00000110 .hidden __extendsfdf2
00022ec0 g     F .text	000008ac .hidden __adddf3
0002b95c g     F .text	0000010c __b2d
0002f1b8 g     F .text	00000538 .hidden __umoddi3
0002fc4c g     F .text	000000d4 lseek
00034070 g     O .rwdata	00000004 __fdlib_version
00034074 g     O .rwdata	00000004 _global_impure_ptr
0002e39c g     F .text	00000564 _realloc_r
00035d74 g       *ABS*	00000000 __bss_end
00031418 g     F .text	000000f0 alt_iic_isr_register
000214b8 g     F .text	000004e8 __ieee754_exp
00031938 g     F .text	00000108 alt_tick
0002ec40 g     F .text	00000578 .hidden __udivdi3
0002db70 g     F .text	00000024 _fputwc_r
00032450 g     O .rodata	00000028 __mprec_bigtens
0002afc4 g     F .text	00000104 __s2b
0002f778 g     F .text	000000a8 .hidden __floatunsidf
0002b69c g     F .text	00000060 __mcmp
000299f0 g     F .text	00000018 __fp_lock_all
000313cc g     F .text	0000004c alt_ic_irq_enabled
0003189c g     F .text	0000009c alt_alarm_stop
00035c00 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
00032e3c g     O .rwdata	00000028 alt_dev_null
0003104c g     F .text	00000048 alt_dcache_flush_all
0002b0c8 g     F .text	00000068 __hi0bits
00025238 g     F .text	00000080 .hidden __fixdfsi
00020d30 g     F .text	000000c0 DotProduct1
000340b4 g       *ABS*	00000000 __ram_rwdata_end
00034094 g     O .rwdata	00000008 alt_dev_list
0003009c g     F .text	000000f8 write
00032598 g       *ABS*	00000000 __ram_rodata_end
0002f994 g     F .text	000000b0 fstat
00024130 g     F .text	000000f4 .hidden __ledf2
0002b414 g     F .text	00000140 __pow5mult
0002c25c g     F .text	0000145c ___vfiprintf_internal_r
00035be0 g     O .bss	00000004 __nlocale_changed
00021b20 g     F .text	00000058 .hidden __umodsi3
00035d74 g       *ABS*	00000000 end
000303d0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00032160 g       *ABS*	00000000 __CTOR_LIST__
0003f400 g       *ABS*	00000000 __alt_stack_pointer
00030d4c g     F .text	0000007c alt_avalon_timer_sc_init
0002564c g     F .text	00000064 .hidden __clzsi2
00030ab0 g     F .text	00000224 altera_avalon_jtag_uart_write
000299e0 g     F .text	00000004 __sfp_lock_acquire
0002aa80 g     F .text	000000e4 memchr
0002572c g     F .text	000021f8 ___vfprintf_internal_r
00029b44 g     F .text	00000310 _free_r
0002a064 g     F .text	00000010 __locale_mb_cur_max
00031fac g     F .text	00000180 __call_exitprocs
00035bdc g     O .bss	00000004 __mlocale_changed
00034080 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00035c04 g     O .bss	00000004 _alt_tick_rate
0002b554 g     F .text	00000148 __lshift
00035c08 g     O .bss	00000004 _alt_nticks
0002fe20 g     F .text	000000fc read
00030200 g     F .text	0000006c alt_sys_init
00031e94 g     F .text	00000118 __register_exitproc
0002b21c g     F .text	000001f8 __multiply
0003073c g     F .text	00000068 altera_avalon_jtag_uart_close
00020000 g       *ABS*	00000000 __alt_mem_SRAM1
00032598 g       *ABS*	00000000 __ram_rwdata_start
00032160 g       *ABS*	00000000 __ram_rodata_start
00035c4c g     O .bss	00000028 __malloc_current_mallinfo
0002ba68 g     F .text	0000014c __d2b
0003026c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00031bfc g     F .text	000000a4 alt_get_fd
00030ef4 g     F .text	00000158 alt_busy_sleep
0002d7f0 g     F .text	00000054 _close_r
00031e18 g     F .text	0000007c memcmp
0003032c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00035d74 g       *ABS*	00000000 __alt_stack_base
0003037c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000279fc g     F .text	00000154 __swsetup_r
0002376c g     F .text	000008e8 .hidden __divdf3
000298a0 g     F .text	00000118 __sfp
0002bccc g     F .text	00000078 __copybits
00032a34 g     O .rwdata	00000408 __malloc_av_
000299ec g     F .text	00000004 __sinit_lock_release
00024224 g     F .text	00000718 .hidden __muldf3
0002be98 g     F .text	00000054 __sread
00031af4 g     F .text	00000108 alt_find_file
000310d0 g     F .text	000000a4 alt_dev_llist_insert
0002fd9c g     F .text	00000024 __malloc_lock
0002ff80 g     F .text	000000b0 sbrk
000295f4 g     F .text	0000005c _fflush_r
0002d844 g     F .text	000000c4 _calloc_r
00035bd0 g       *ABS*	00000000 __bss_start
0002acac g     F .text	00000128 memset
00020fdc g     F .text	0000034c main
00035bfc g     O .bss	00000004 alt_envp
00035be4 g     O .bss	00000004 __malloc_max_total_mem
000302cc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002ea40 g     F .text	00000018 __swbuf
0002bfcc g     F .text	00000008 __sclose
000219bc g     F .text	00000008 matherr
0003f400 g       *ABS*	00000000 __alt_heap_limit
0002d9f8 g     F .text	00000014 fclose
000254a4 g     F .text	000001a8 .hidden __truncdfsf2
00027d50 g     F .text	00001688 _dtoa_r
0002a274 g     F .text	0000080c _malloc_r
0002ebb4 g     F .text	00000030 __ascii_wctomb
000340a0 g     O .rwdata	00000004 alt_errno
00029e54 g     F .text	000000c4 _fwalk
00021328 g     F .text	00000190 exp
000219c4 g     F .text	00000084 .hidden __divsi3
00029a20 g     F .text	00000124 _malloc_trim_r
00032160 g       *ABS*	00000000 __CTOR_END__
00022480 g     F .text	000003fc .hidden __mulsf3
000219a0 g     F .text	0000001c finite
0002bfd4 g     F .text	000000dc strcmp
00032160 g       *ABS*	00000000 __flash_rodata_start
00020450 g     F .text	000000c0 DotProduct
00032160 g       *ABS*	00000000 __DTOR_LIST__
0002f6f0 g     F .text	00000088 .hidden __nedf2
000301c8 g     F .text	00000038 alt_irq_init
0002ff1c g     F .text	00000064 alt_release_fd
00032298 g     O .rodata	00000100 .hidden __clz_tab
00035bd8 g     O .bss	00000004 _PathLocale
00031dcc g     F .text	00000014 atexit
0002d790 g     F .text	00000060 _write_r
0002a094 g     F .text	00000018 setlocale
00034078 g     O .rwdata	00000004 _impure_ptr
00035bf4 g     O .bss	00000004 alt_argc
000293d8 g     F .text	0000021c __sflush_r
000311d4 g     F .text	00000060 _do_dtors
0002a080 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
0002b8f8 g     F .text	00000064 __ulp
00029a08 g     F .text	00000018 __fp_unlock_all
0003408c g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002a0ac g     F .text	0000000c localeconv
00031268 g     F .text	00000050 alt_ic_isr_register
000340b4 g       *ABS*	00000000 _edata
00020ec8 g     F .text	00000114 layer2
00035d74 g       *ABS*	00000000 _end
0002da0c g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
000307a4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00031340 g     F .text	0000008c alt_ic_irq_disable
0002bef4 g     F .text	0000007c __swrite
00034084 g     O .rwdata	00000004 __malloc_trim_threshold
0002a074 g     F .text	0000000c __locale_msgcharset
00031de0 g     F .text	00000038 exit
00029f18 g     F .text	000000c4 _fwalk_reent
00022dd0 g     F .text	000000f0 .hidden __floatunsisf
0002b6fc g     F .text	000001fc __mdiff
00021a48 g     F .text	00000074 .hidden __modsi3
0003f400 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
000299e4 g     F .text	00000004 __sfp_lock_release
0003212c g     F .text	00000034 _exit
00030dc8 g     F .text	0000012c alt_alarm_start
0002a0b8 g     F .text	000001bc __smakebuf_r
0002c0b0 g     F .text	00000098 strlen
00031748 g     F .text	00000154 open
00024054 g     F .text	000000dc .hidden __gedf2
00034088 g     O .rwdata	00000004 __wctomb
0002c244 g     F .text	00000018 __sprint_r
00031234 g     F .text	00000034 alt_icache_flush_all
00020290 g     F .text	000001c0 mapminmax
000340a8 g     O .rwdata	00000004 alt_priority_mask
000312b8 g     F .text	00000088 alt_ic_irq_enable
00027924 g     F .text	0000001c __vfprintf_internal
0002ebe4 g     F .text	0000005c _wctomb_r
0002493c g     F .text	000008fc .hidden __subdf3
0002b130 g     F .text	000000b0 __lo0bits
00020df0 g     F .text	000000d8 mapminreverse
000340ac g     O .rwdata	00000008 alt_alarm_list
00031174 g     F .text	00000060 _do_ctors
0002eaf4 g     F .text	000000c0 wcrtomb
0002f85c g     F .text	000000d0 close
00021b78 g     F .text	000004c8 .hidden __addsf3
0002fb8c g     F .text	00000084 alt_load
0002db94 g     F .text	00000080 fputwc
000299e8 g     F .text	00000004 __sinit_lock_acquire
0002aea4 g     F .text	00000120 __multadd
0002ae7c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0c04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_SRAM1-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	10971d04 	addi	r2,r2,23668
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	10971d04 	addi	r2,r2,23668
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe0d2c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0d20>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6e717 	ldw	r2,-25700(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6e717 	ldw	r2,-25700(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0e48>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6b01c14 	ori	gp,gp,49264
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	1096f414 	ori	r2,r2,23504

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18d75d14 	ori	r3,r3,23924

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0e78>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002fb8c0 	call	2fb8c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002fd200 	call	2fd20 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe0e8c>

00020290 <mapminmax>:

/*=======  niNN vector de entrada =========*/
//float niNN[]={0.1,79,19,24,44}; //'Tiempo','Luz','Humedad Aire','Temperatura','Humedad Suelo'
/*=======  funcion mapminmax =========*/
float *mapminmax(float input[])
{
   20290:	deffef04 	addi	sp,sp,-68
   20294:	dfc01015 	stw	ra,64(sp)
   20298:	df000f15 	stw	fp,60(sp)
   2029c:	dc000e15 	stw	r16,56(sp)
   202a0:	df000f04 	addi	fp,sp,60
   202a4:	e13ffe15 	stw	r4,-8(fp)
    int i;
    float ymax=1,ymin=-1;
   202a8:	008fe034 	movhi	r2,16256
   202ac:	e0bff215 	stw	r2,-56(fp)
   202b0:	00afe034 	movhi	r2,49024
   202b4:	e0bff315 	stw	r2,-52(fp)
    float xmin[]={0.1,51,13,24,32};
   202b8:	008f7374 	movhi	r2,15821
   202bc:	10b33344 	addi	r2,r2,-13107
   202c0:	e0bff415 	stw	r2,-48(fp)
   202c4:	00909334 	movhi	r2,16972
   202c8:	e0bff515 	stw	r2,-44(fp)
   202cc:	00905434 	movhi	r2,16720
   202d0:	e0bff615 	stw	r2,-40(fp)
   202d4:	00907034 	movhi	r2,16832
   202d8:	e0bff715 	stw	r2,-36(fp)
   202dc:	00908034 	movhi	r2,16896
   202e0:	e0bff815 	stw	r2,-32(fp)
    float xmax[]={37.25,83,19,30,52};
   202e4:	00908574 	movhi	r2,16917
   202e8:	e0bff915 	stw	r2,-28(fp)
   202ec:	0090a9b4 	movhi	r2,17062
   202f0:	e0bffa15 	stw	r2,-24(fp)
   202f4:	00906634 	movhi	r2,16792
   202f8:	e0bffb15 	stw	r2,-20(fp)
   202fc:	00907c34 	movhi	r2,16880
   20300:	e0bffc15 	stw	r2,-16(fp)
   20304:	00909434 	movhi	r2,16976
   20308:	e0bffd15 	stw	r2,-12(fp)
    static float output[5];				//<--------------segun el numero de entradas
    for(i=0;i<5;i++)					//<--------------segun el numero de entradas
   2030c:	e03ff115 	stw	zero,-60(fp)
   20310:	00004406 	br	20424 <mapminmax+0x194>
    {
        output[i]=((ymax-ymin)/(xmax[i]-xmin[i]))*(input[i]-xmin[i])+ymin;
   20314:	e17ff317 	ldw	r5,-52(fp)
   20318:	e13ff217 	ldw	r4,-56(fp)
   2031c:	002287c0 	call	2287c <__subsf3>
   20320:	1007883a 	mov	r3,r2
   20324:	1821883a 	mov	r16,r3
   20328:	e0bff117 	ldw	r2,-60(fp)
   2032c:	1085883a 	add	r2,r2,r2
   20330:	1085883a 	add	r2,r2,r2
   20334:	e0fff104 	addi	r3,fp,-60
   20338:	1885883a 	add	r2,r3,r2
   2033c:	10800804 	addi	r2,r2,32
   20340:	10c00017 	ldw	r3,0(r2)
   20344:	e0bff117 	ldw	r2,-60(fp)
   20348:	1085883a 	add	r2,r2,r2
   2034c:	1085883a 	add	r2,r2,r2
   20350:	e13ff104 	addi	r4,fp,-60
   20354:	2085883a 	add	r2,r4,r2
   20358:	10800304 	addi	r2,r2,12
   2035c:	11000017 	ldw	r4,0(r2)
   20360:	200b883a 	mov	r5,r4
   20364:	1809883a 	mov	r4,r3
   20368:	002287c0 	call	2287c <__subsf3>
   2036c:	1007883a 	mov	r3,r2
   20370:	1805883a 	mov	r2,r3
   20374:	100b883a 	mov	r5,r2
   20378:	8009883a 	mov	r4,r16
   2037c:	00220400 	call	22040 <__divsf3>
   20380:	1007883a 	mov	r3,r2
   20384:	1821883a 	mov	r16,r3
   20388:	e0bff117 	ldw	r2,-60(fp)
   2038c:	1085883a 	add	r2,r2,r2
   20390:	1085883a 	add	r2,r2,r2
   20394:	1007883a 	mov	r3,r2
   20398:	e0bffe17 	ldw	r2,-8(fp)
   2039c:	10c5883a 	add	r2,r2,r3
   203a0:	10c00017 	ldw	r3,0(r2)
   203a4:	e0bff117 	ldw	r2,-60(fp)
   203a8:	1085883a 	add	r2,r2,r2
   203ac:	1085883a 	add	r2,r2,r2
   203b0:	e13ff104 	addi	r4,fp,-60
   203b4:	2085883a 	add	r2,r4,r2
   203b8:	10800304 	addi	r2,r2,12
   203bc:	11000017 	ldw	r4,0(r2)
   203c0:	200b883a 	mov	r5,r4
   203c4:	1809883a 	mov	r4,r3
   203c8:	002287c0 	call	2287c <__subsf3>
   203cc:	1007883a 	mov	r3,r2
   203d0:	1805883a 	mov	r2,r3
   203d4:	100b883a 	mov	r5,r2
   203d8:	8009883a 	mov	r4,r16
   203dc:	00224800 	call	22480 <__mulsf3>
   203e0:	1007883a 	mov	r3,r2
   203e4:	1805883a 	mov	r2,r3
   203e8:	e17ff317 	ldw	r5,-52(fp)
   203ec:	1009883a 	mov	r4,r2
   203f0:	0021b780 	call	21b78 <__addsf3>
   203f4:	1007883a 	mov	r3,r2
   203f8:	1809883a 	mov	r4,r3
   203fc:	008000f4 	movhi	r2,3
   20400:	10970404 	addi	r2,r2,23568
   20404:	e0fff117 	ldw	r3,-60(fp)
   20408:	18c7883a 	add	r3,r3,r3
   2040c:	18c7883a 	add	r3,r3,r3
   20410:	10c5883a 	add	r2,r2,r3
   20414:	11000015 	stw	r4,0(r2)
    int i;
    float ymax=1,ymin=-1;
    float xmin[]={0.1,51,13,24,32};
    float xmax[]={37.25,83,19,30,52};
    static float output[5];				//<--------------segun el numero de entradas
    for(i=0;i<5;i++)					//<--------------segun el numero de entradas
   20418:	e0bff117 	ldw	r2,-60(fp)
   2041c:	10800044 	addi	r2,r2,1
   20420:	e0bff115 	stw	r2,-60(fp)
   20424:	e0bff117 	ldw	r2,-60(fp)
   20428:	10800150 	cmplti	r2,r2,5
   2042c:	103fb91e 	bne	r2,zero,20314 <__alt_data_end+0xfffe0f14>
    {
        output[i]=((ymax-ymin)/(xmax[i]-xmin[i]))*(input[i]-xmin[i])+ymin;
    }
    return output;
   20430:	008000f4 	movhi	r2,3
   20434:	10970404 	addi	r2,r2,23568
}
   20438:	e6ffff04 	addi	sp,fp,-4
   2043c:	dfc00217 	ldw	ra,8(sp)
   20440:	df000117 	ldw	fp,4(sp)
   20444:	dc000017 	ldw	r16,0(sp)
   20448:	dec00304 	addi	sp,sp,12
   2044c:	f800283a 	ret

00020450 <DotProduct>:
/*=======  producto punto =========*/
float DotProduct(float input1[], float input2[])
{
   20450:	defffa04 	addi	sp,sp,-24
   20454:	dfc00515 	stw	ra,20(sp)
   20458:	df000415 	stw	fp,16(sp)
   2045c:	df000404 	addi	fp,sp,16
   20460:	e13ffe15 	stw	r4,-8(fp)
   20464:	e17fff15 	stw	r5,-4(fp)
    int i=0;
   20468:	e03ffc15 	stw	zero,-16(fp)
    float acumulador=0;
   2046c:	e03ffd15 	stw	zero,-12(fp)
    for (i=0;i!=5;i++)					//<--------------segun el numero de entradas
   20470:	e03ffc15 	stw	zero,-16(fp)
   20474:	00001b06 	br	204e4 <DotProduct+0x94>
    {
        acumulador=input1[i]*input2[i]+acumulador;
   20478:	e0bffc17 	ldw	r2,-16(fp)
   2047c:	1085883a 	add	r2,r2,r2
   20480:	1085883a 	add	r2,r2,r2
   20484:	1007883a 	mov	r3,r2
   20488:	e0bffe17 	ldw	r2,-8(fp)
   2048c:	10c5883a 	add	r2,r2,r3
   20490:	10c00017 	ldw	r3,0(r2)
   20494:	e0bffc17 	ldw	r2,-16(fp)
   20498:	1085883a 	add	r2,r2,r2
   2049c:	1085883a 	add	r2,r2,r2
   204a0:	1009883a 	mov	r4,r2
   204a4:	e0bfff17 	ldw	r2,-4(fp)
   204a8:	1105883a 	add	r2,r2,r4
   204ac:	11000017 	ldw	r4,0(r2)
   204b0:	200b883a 	mov	r5,r4
   204b4:	1809883a 	mov	r4,r3
   204b8:	00224800 	call	22480 <__mulsf3>
   204bc:	1007883a 	mov	r3,r2
   204c0:	1805883a 	mov	r2,r3
   204c4:	100b883a 	mov	r5,r2
   204c8:	e13ffd17 	ldw	r4,-12(fp)
   204cc:	0021b780 	call	21b78 <__addsf3>
   204d0:	1007883a 	mov	r3,r2
   204d4:	e0fffd15 	stw	r3,-12(fp)
/*=======  producto punto =========*/
float DotProduct(float input1[], float input2[])
{
    int i=0;
    float acumulador=0;
    for (i=0;i!=5;i++)					//<--------------segun el numero de entradas
   204d8:	e0bffc17 	ldw	r2,-16(fp)
   204dc:	10800044 	addi	r2,r2,1
   204e0:	e0bffc15 	stw	r2,-16(fp)
   204e4:	e0bffc17 	ldw	r2,-16(fp)
   204e8:	10800158 	cmpnei	r2,r2,5
   204ec:	103fe21e 	bne	r2,zero,20478 <__alt_data_end+0xfffe1078>
    {
        acumulador=input1[i]*input2[i]+acumulador;
    }
    return acumulador;
   204f0:	e0bffd17 	ldw	r2,-12(fp)
   204f4:	1007883a 	mov	r3,r2
}
   204f8:	1805883a 	mov	r2,r3
   204fc:	e037883a 	mov	sp,fp
   20500:	dfc00117 	ldw	ra,4(sp)
   20504:	df000017 	ldw	fp,0(sp)
   20508:	dec00204 	addi	sp,sp,8
   2050c:	f800283a 	ret

00020510 <tansig>:
/*=======  tangente sigmoidal =========*/
float tansig(float input1)
{
   20510:	defffc04 	addi	sp,sp,-16
   20514:	dfc00315 	stw	ra,12(sp)
   20518:	df000215 	stw	fp,8(sp)
   2051c:	df000204 	addi	fp,sp,8
   20520:	e13fff15 	stw	r4,-4(fp)
    float tansigout=(2/(1+exp(-2*input1))-1);
   20524:	01700034 	movhi	r5,49152
   20528:	e13fff17 	ldw	r4,-4(fp)
   2052c:	00224800 	call	22480 <__mulsf3>
   20530:	1007883a 	mov	r3,r2
   20534:	1805883a 	mov	r2,r3
   20538:	1009883a 	mov	r4,r2
   2053c:	00253940 	call	25394 <__extendsfdf2>
   20540:	100b883a 	mov	r5,r2
   20544:	180d883a 	mov	r6,r3
   20548:	2809883a 	mov	r4,r5
   2054c:	300b883a 	mov	r5,r6
   20550:	00213280 	call	21328 <exp>
   20554:	1011883a 	mov	r8,r2
   20558:	1813883a 	mov	r9,r3
   2055c:	000d883a 	mov	r6,zero
   20560:	01cffc34 	movhi	r7,16368
   20564:	4009883a 	mov	r4,r8
   20568:	480b883a 	mov	r5,r9
   2056c:	0022ec00 	call	22ec0 <__adddf3>
   20570:	1009883a 	mov	r4,r2
   20574:	180b883a 	mov	r5,r3
   20578:	2005883a 	mov	r2,r4
   2057c:	2807883a 	mov	r3,r5
   20580:	100d883a 	mov	r6,r2
   20584:	180f883a 	mov	r7,r3
   20588:	0009883a 	mov	r4,zero
   2058c:	01500034 	movhi	r5,16384
   20590:	002376c0 	call	2376c <__divdf3>
   20594:	1009883a 	mov	r4,r2
   20598:	180b883a 	mov	r5,r3
   2059c:	2005883a 	mov	r2,r4
   205a0:	2807883a 	mov	r3,r5
   205a4:	000d883a 	mov	r6,zero
   205a8:	01cffc34 	movhi	r7,16368
   205ac:	1009883a 	mov	r4,r2
   205b0:	180b883a 	mov	r5,r3
   205b4:	002493c0 	call	2493c <__subdf3>
   205b8:	1009883a 	mov	r4,r2
   205bc:	180b883a 	mov	r5,r3
   205c0:	2005883a 	mov	r2,r4
   205c4:	2807883a 	mov	r3,r5
   205c8:	1009883a 	mov	r4,r2
   205cc:	180b883a 	mov	r5,r3
   205d0:	00254a40 	call	254a4 <__truncdfsf2>
   205d4:	1007883a 	mov	r3,r2
   205d8:	e0fffe15 	stw	r3,-8(fp)
    return tansigout;
   205dc:	e0bffe17 	ldw	r2,-8(fp)
   205e0:	1007883a 	mov	r3,r2
}
   205e4:	1805883a 	mov	r2,r3
   205e8:	e037883a 	mov	sp,fp
   205ec:	dfc00117 	ldw	ra,4(sp)
   205f0:	df000017 	ldw	fp,0(sp)
   205f4:	dec00204 	addi	sp,sp,8
   205f8:	f800283a 	ret

000205fc <layer1>:
/*=======  hidden layer =========*/
float *layer1(float *input1)
{
   205fc:	deffcb04 	addi	sp,sp,-212
   20600:	dfc03415 	stw	ra,208(sp)
   20604:	df003315 	stw	fp,204(sp)
   20608:	df003304 	addi	fp,sp,204
   2060c:	e13fff15 	stw	r4,-4(fp)
    float static output[10];
    float w0[]={1.3429602595496334949,2.4640878938717167834,0.39495514316749774641,-0.90117191988743661213,0.35359643307197702322};
   20610:	008feb34 	movhi	r2,16300
   20614:	10b987c4 	addi	r2,r2,-6625
   20618:	e0bfcd15 	stw	r2,-204(fp)
   2061c:	009007b4 	movhi	r2,16414
   20620:	10ace784 	addi	r2,r2,-19554
   20624:	e0bfce15 	stw	r2,-200(fp)
   20628:	008fb2b4 	movhi	r2,16074
   2062c:	108de3c4 	addi	r2,r2,14223
   20630:	e0bfcf15 	stw	r2,-196(fp)
   20634:	00afd9f4 	movhi	r2,48999
   20638:	10accd04 	addi	r2,r2,-19660
   2063c:	e0bfd015 	stw	r2,-192(fp)
   20640:	008fad74 	movhi	r2,16053
   20644:	1082a5c4 	addi	r2,r2,2711
   20648:	e0bfd115 	stw	r2,-188(fp)
    float w1[]={-0.14279906762815919308,0.0192623757156580519,1.3314326924030628341,-0.36561632290867240869,2.0084035978000920331};
   2064c:	00af84b4 	movhi	r2,48658
   20650:	108e7ac4 	addi	r2,r2,14827
   20654:	e0bfd215 	stw	r2,-184(fp)
   20658:	008f27b4 	movhi	r2,15518
   2065c:	10b30844 	addi	r2,r2,-13279
   20660:	e0bfd315 	stw	r2,-180(fp)
   20664:	008feab4 	movhi	r2,16298
   20668:	109b18c4 	addi	r2,r2,27747
   2066c:	e0bfd415 	stw	r2,-176(fp)
   20670:	00afaef4 	movhi	r2,48827
   20674:	108c8404 	addi	r2,r2,12816
   20678:	e0bfd515 	stw	r2,-172(fp)
   2067c:	00900074 	movhi	r2,16385
   20680:	10a26bc4 	addi	r2,r2,-30289
   20684:	e0bfd615 	stw	r2,-168(fp)
    float w2[]={0.18357336175625121877,0.060428929650758966829,0.22068017973731751669,3.0804514569410166303,9.466910330002907159};
   20688:	008f8f34 	movhi	r2,15932
   2068c:	10beaa04 	addi	r2,r2,-1368
   20690:	e0bfd715 	stw	r2,-164(fp)
   20694:	008f5e34 	movhi	r2,15736
   20698:	10a114c4 	addi	r2,r2,-31661
   2069c:	e0bfd815 	stw	r2,-160(fp)
   206a0:	008f98b4 	movhi	r2,15970
   206a4:	10be7f04 	addi	r2,r2,-1540
   206a8:	e0bfd915 	stw	r2,-156(fp)
   206ac:	00901174 	movhi	r2,16453
   206b0:	10898784 	addi	r2,r2,9758
   206b4:	e0bfda15 	stw	r2,-152(fp)
   206b8:	009045f4 	movhi	r2,16663
   206bc:	109e1dc4 	addi	r2,r2,30839
   206c0:	e0bfdb15 	stw	r2,-148(fp)
    float w3[]={-0.015179223569523961346,0.28388684242725181761,-0.21895403123318288308,-0.69117690190900471503,-1.1698240004933713188};
   206c4:	00af1e74 	movhi	r2,48249
   206c8:	10ac91c4 	addi	r2,r2,-19897
   206cc:	e0bfdc15 	stw	r2,-144(fp)
   206d0:	008fa474 	movhi	r2,16017
   206d4:	10966784 	addi	r2,r2,22942
   206d8:	e0bfdd15 	stw	r2,-140(fp)
   206dc:	00af9834 	movhi	r2,48736
   206e0:	108d5f04 	addi	r2,r2,13692
   206e4:	e0bfde15 	stw	r2,-136(fp)
   206e8:	00afcc74 	movhi	r2,48945
   206ec:	10bc3e04 	addi	r2,r2,-3848
   206f0:	e0bfdf15 	stw	r2,-132(fp)
   206f4:	00afe5b4 	movhi	r2,49046
   206f8:	10af32c4 	addi	r2,r2,-17205
   206fc:	e0bfe015 	stw	r2,-128(fp)
    float w4[]={0.0010264224613505262829,0.54440001105331703446,0.073648048501351981443,-0.63879691824025319757,0.92666886806160542189};
   20700:	008ea1f4 	movhi	r2,14983
   20704:	10a24184 	addi	r2,r2,-30458
   20708:	e0bfe115 	stw	r2,-124(fp)
   2070c:	008fc2f4 	movhi	r2,16139
   20710:	10977344 	addi	r2,r2,24013
   20714:	e0bfe215 	stw	r2,-120(fp)
   20718:	008f65f4 	movhi	r2,15767
   2071c:	10b53284 	addi	r2,r2,-11062
   20720:	e0bfe315 	stw	r2,-116(fp)
   20724:	00afc934 	movhi	r2,48932
   20728:	10a20c84 	addi	r2,r2,-30670
   2072c:	e0bfe415 	stw	r2,-112(fp)
   20730:	008fdb74 	movhi	r2,16237
   20734:	108e8b04 	addi	r2,r2,14892
   20738:	e0bfe515 	stw	r2,-108(fp)
    float w5[]={-0.19528955493481076067,1.087167432537815337,-0.0099078673019529807375,-0.81601545827073229677,0.76974069223677410445};
   2073c:	00af9234 	movhi	r2,48712
   20740:	10be7f04 	addi	r2,r2,-1540
   20744:	e0bfe615 	stw	r2,-104(fp)
   20748:	008fe2f4 	movhi	r2,16267
   2074c:	108a1344 	addi	r2,r2,10317
   20750:	e0bfe715 	stw	r2,-100(fp)
   20754:	00af08b4 	movhi	r2,48162
   20758:	10952704 	addi	r2,r2,21660
   2075c:	e0bfe815 	stw	r2,-96(fp)
   20760:	00afd474 	movhi	r2,48977
   20764:	10b99904 	addi	r2,r2,-6556
   20768:	e0bfe915 	stw	r2,-92(fp)
   2076c:	008fd174 	movhi	r2,16197
   20770:	10836e84 	addi	r2,r2,3514
   20774:	e0bfea15 	stw	r2,-88(fp)
    float w6[]={-0.46424358683263189373,1.5828121341636918196,-0.23770329343757606866,-0.59499557786972323559,0.34097346878666395797};
   20778:	00afbbb4 	movhi	r2,48878
   2077c:	10ac5584 	addi	r2,r2,-20138
   20780:	e0bfeb15 	stw	r2,-84(fp)
   20784:	008ff2f4 	movhi	r2,16331
   20788:	10a665c4 	addi	r2,r2,-26217
   2078c:	e0bfec15 	stw	r2,-80(fp)
   20790:	00af9cf4 	movhi	r2,48755
   20794:	109a1f84 	addi	r2,r2,26750
   20798:	e0bfed15 	stw	r2,-76(fp)
   2079c:	00afc634 	movhi	r2,48920
   207a0:	10946844 	addi	r2,r2,20897
   207a4:	e0bfee15 	stw	r2,-72(fp)
   207a8:	008fabf4 	movhi	r2,16047
   207ac:	10a504c4 	addi	r2,r2,-27629
   207b0:	e0bfef15 	stw	r2,-68(fp)
    float w7[]={-0.25392183768338449923,1.8622536681654058288,0.36391691036848561325,-0.55107714806946928032,-1.2116971352295800024};
   207b4:	00afa0b4 	movhi	r2,48770
   207b8:	108082c4 	addi	r2,r2,523
   207bc:	e0bff015 	stw	r2,-64(fp)
   207c0:	008ffbb4 	movhi	r2,16366
   207c4:	10979504 	addi	r2,r2,24148
   207c8:	e0bff115 	stw	r2,-60(fp)
   207cc:	008faeb4 	movhi	r2,16058
   207d0:	1094d444 	addi	r2,r2,21329
   207d4:	e0bff215 	stw	r2,-56(fp)
   207d8:	00afc374 	movhi	r2,48909
   207dc:	1084d904 	addi	r2,r2,4964
   207e0:	e0bff315 	stw	r2,-52(fp)
   207e4:	00afe6f4 	movhi	r2,49051
   207e8:	10863904 	addi	r2,r2,6372
   207ec:	e0bff415 	stw	r2,-48(fp)
	float w8[]={0.38480075839248978342,0.04249926003823468329,0.8606378419757417797,0.12528405874563552924,-1.4101827894193001978};
   207f0:	008fb174 	movhi	r2,16069
   207f4:	108126c4 	addi	r2,r2,1179
   207f8:	e0bff515 	stw	r2,-44(fp)
   207fc:	008f4bb4 	movhi	r2,15662
   20800:	1084ed04 	addi	r2,r2,5044
   20804:	e0bff615 	stw	r2,-40(fp)
   20808:	008fd734 	movhi	r2,16220
   2080c:	1094b0c4 	addi	r2,r2,21187
   20810:	e0bff715 	stw	r2,-36(fp)
   20814:	008f8034 	movhi	r2,15872
   20818:	10929dc4 	addi	r2,r2,19063
   2081c:	e0bff815 	stw	r2,-32(fp)
   20820:	00afed74 	movhi	r2,49077
   20824:	10a037c4 	addi	r2,r2,-32545
   20828:	e0bff915 	stw	r2,-28(fp)
	float w9[]={1.4815409326756612263,-0.52300813580124350111,-1.0147384325846877662,1.1236057819930480584,-1.4055470392359856735};
   2082c:	008fefb4 	movhi	r2,16318
   20830:	10a8c884 	addi	r2,r2,-23774
   20834:	e0bffa15 	stw	r2,-24(fp)
   20838:	00afc1b4 	movhi	r2,48902
   2083c:	10b8f704 	addi	r2,r2,-7204
   20840:	e0bffb15 	stw	r2,-20(fp)
   20844:	00afe0b4 	movhi	r2,49026
   20848:	10b8bcc4 	addi	r2,r2,-7437
   2084c:	e0bffc15 	stw	r2,-16(fp)
   20850:	008fe434 	movhi	r2,16272
   20854:	10b49404 	addi	r2,r2,-11696
   20858:	e0bffd15 	stw	r2,-12(fp)
   2085c:	00afed34 	movhi	r2,49076
   20860:	10ba3dc4 	addi	r2,r2,-5897
   20864:	e0bffe15 	stw	r2,-8(fp)
	output[0]=tansig(DotProduct(input1,w0)+(-3.2902816603893763059));
   20868:	e17fcd04 	addi	r5,fp,-204
   2086c:	e13fff17 	ldw	r4,-4(fp)
   20870:	00204500 	call	20450 <DotProduct>
   20874:	1007883a 	mov	r3,r2
   20878:	1809883a 	mov	r4,r3
   2087c:	00253940 	call	25394 <__extendsfdf2>
   20880:	1011883a 	mov	r8,r2
   20884:	1813883a 	mov	r9,r3
   20888:	018c3c34 	movhi	r6,12528
   2088c:	31807c84 	addi	r6,r6,498
   20890:	01d002b4 	movhi	r7,16394
   20894:	39d49fc4 	addi	r7,r7,21119
   20898:	4009883a 	mov	r4,r8
   2089c:	480b883a 	mov	r5,r9
   208a0:	002493c0 	call	2493c <__subdf3>
   208a4:	1009883a 	mov	r4,r2
   208a8:	180b883a 	mov	r5,r3
   208ac:	2005883a 	mov	r2,r4
   208b0:	2807883a 	mov	r3,r5
   208b4:	1009883a 	mov	r4,r2
   208b8:	180b883a 	mov	r5,r3
   208bc:	00254a40 	call	254a4 <__truncdfsf2>
   208c0:	1007883a 	mov	r3,r2
   208c4:	1809883a 	mov	r4,r3
   208c8:	00205100 	call	20510 <tansig>
   208cc:	1007883a 	mov	r3,r2
   208d0:	008000f4 	movhi	r2,3
   208d4:	10970904 	addi	r2,r2,23588
   208d8:	10c00015 	stw	r3,0(r2)
    output[1]=tansig(DotProduct(input1,w1)+(-1.0774370403746600378));
   208dc:	e0bfd204 	addi	r2,fp,-184
   208e0:	100b883a 	mov	r5,r2
   208e4:	e13fff17 	ldw	r4,-4(fp)
   208e8:	00204500 	call	20450 <DotProduct>
   208ec:	1007883a 	mov	r3,r2
   208f0:	1809883a 	mov	r4,r3
   208f4:	00253940 	call	25394 <__extendsfdf2>
   208f8:	1011883a 	mov	r8,r2
   208fc:	1813883a 	mov	r9,r3
   20900:	01a7cff4 	movhi	r6,40767
   20904:	31a1fe44 	addi	r6,r6,-30727
   20908:	01cffc74 	movhi	r7,16369
   2090c:	39cf4b84 	addi	r7,r7,15662
   20910:	4009883a 	mov	r4,r8
   20914:	480b883a 	mov	r5,r9
   20918:	002493c0 	call	2493c <__subdf3>
   2091c:	1009883a 	mov	r4,r2
   20920:	180b883a 	mov	r5,r3
   20924:	2005883a 	mov	r2,r4
   20928:	2807883a 	mov	r3,r5
   2092c:	1009883a 	mov	r4,r2
   20930:	180b883a 	mov	r5,r3
   20934:	00254a40 	call	254a4 <__truncdfsf2>
   20938:	1007883a 	mov	r3,r2
   2093c:	1809883a 	mov	r4,r3
   20940:	00205100 	call	20510 <tansig>
   20944:	1007883a 	mov	r3,r2
   20948:	008000f4 	movhi	r2,3
   2094c:	10970904 	addi	r2,r2,23588
   20950:	10c00115 	stw	r3,4(r2)
    output[2]=tansig(DotProduct(input1,w2)+(9.2813908302064689337));
   20954:	e0bfd704 	addi	r2,fp,-164
   20958:	100b883a 	mov	r5,r2
   2095c:	e13fff17 	ldw	r4,-4(fp)
   20960:	00204500 	call	20450 <DotProduct>
   20964:	1007883a 	mov	r3,r2
   20968:	1809883a 	mov	r4,r3
   2096c:	00253940 	call	25394 <__extendsfdf2>
   20970:	1011883a 	mov	r8,r2
   20974:	1813883a 	mov	r9,r3
   20978:	019d5eb4 	movhi	r6,30074
   2097c:	3190c704 	addi	r6,r6,17180
   20980:	01d008f4 	movhi	r7,16419
   20984:	39e40484 	addi	r7,r7,-28654
   20988:	4009883a 	mov	r4,r8
   2098c:	480b883a 	mov	r5,r9
   20990:	0022ec00 	call	22ec0 <__adddf3>
   20994:	1009883a 	mov	r4,r2
   20998:	180b883a 	mov	r5,r3
   2099c:	2005883a 	mov	r2,r4
   209a0:	2807883a 	mov	r3,r5
   209a4:	1009883a 	mov	r4,r2
   209a8:	180b883a 	mov	r5,r3
   209ac:	00254a40 	call	254a4 <__truncdfsf2>
   209b0:	1007883a 	mov	r3,r2
   209b4:	1809883a 	mov	r4,r3
   209b8:	00205100 	call	20510 <tansig>
   209bc:	1007883a 	mov	r3,r2
   209c0:	008000f4 	movhi	r2,3
   209c4:	10970904 	addi	r2,r2,23588
   209c8:	10c00215 	stw	r3,8(r2)
    output[3]=tansig(DotProduct(input1,w3)+(-2.1012760240229342301));
   209cc:	e0bfdc04 	addi	r2,fp,-144
   209d0:	100b883a 	mov	r5,r2
   209d4:	e13fff17 	ldw	r4,-4(fp)
   209d8:	00204500 	call	20450 <DotProduct>
   209dc:	1007883a 	mov	r3,r2
   209e0:	1809883a 	mov	r4,r3
   209e4:	00253940 	call	25394 <__extendsfdf2>
   209e8:	1011883a 	mov	r8,r2
   209ec:	1813883a 	mov	r9,r3
   209f0:	01b37634 	movhi	r6,52696
   209f4:	31984684 	addi	r6,r6,24858
   209f8:	01d00074 	movhi	r7,16385
   209fc:	39f3da44 	addi	r7,r7,-12439
   20a00:	4009883a 	mov	r4,r8
   20a04:	480b883a 	mov	r5,r9
   20a08:	002493c0 	call	2493c <__subdf3>
   20a0c:	1009883a 	mov	r4,r2
   20a10:	180b883a 	mov	r5,r3
   20a14:	2005883a 	mov	r2,r4
   20a18:	2807883a 	mov	r3,r5
   20a1c:	1009883a 	mov	r4,r2
   20a20:	180b883a 	mov	r5,r3
   20a24:	00254a40 	call	254a4 <__truncdfsf2>
   20a28:	1007883a 	mov	r3,r2
   20a2c:	1809883a 	mov	r4,r3
   20a30:	00205100 	call	20510 <tansig>
   20a34:	1007883a 	mov	r3,r2
   20a38:	008000f4 	movhi	r2,3
   20a3c:	10970904 	addi	r2,r2,23588
   20a40:	10c00315 	stw	r3,12(r2)
    output[4]=tansig(DotProduct(input1,w4)+(0.5031622285530945593));
   20a44:	e0bfe104 	addi	r2,fp,-124
   20a48:	100b883a 	mov	r5,r2
   20a4c:	e13fff17 	ldw	r4,-4(fp)
   20a50:	00204500 	call	20450 <DotProduct>
   20a54:	1007883a 	mov	r3,r2
   20a58:	1809883a 	mov	r4,r3
   20a5c:	00253940 	call	25394 <__extendsfdf2>
   20a60:	1011883a 	mov	r8,r2
   20a64:	1813883a 	mov	r9,r3
   20a68:	01ab21f4 	movhi	r6,44167
   20a6c:	31be8084 	addi	r6,r6,-1534
   20a70:	01cff834 	movhi	r7,16352
   20a74:	39c679c4 	addi	r7,r7,6631
   20a78:	4009883a 	mov	r4,r8
   20a7c:	480b883a 	mov	r5,r9
   20a80:	0022ec00 	call	22ec0 <__adddf3>
   20a84:	1009883a 	mov	r4,r2
   20a88:	180b883a 	mov	r5,r3
   20a8c:	2005883a 	mov	r2,r4
   20a90:	2807883a 	mov	r3,r5
   20a94:	1009883a 	mov	r4,r2
   20a98:	180b883a 	mov	r5,r3
   20a9c:	00254a40 	call	254a4 <__truncdfsf2>
   20aa0:	1007883a 	mov	r3,r2
   20aa4:	1809883a 	mov	r4,r3
   20aa8:	00205100 	call	20510 <tansig>
   20aac:	1007883a 	mov	r3,r2
   20ab0:	008000f4 	movhi	r2,3
   20ab4:	10970904 	addi	r2,r2,23588
   20ab8:	10c00415 	stw	r3,16(r2)
    output[5]=tansig(DotProduct(input1,w5)+(0.5577989336033097878));
   20abc:	e0bfe604 	addi	r2,fp,-104
   20ac0:	100b883a 	mov	r5,r2
   20ac4:	e13fff17 	ldw	r4,-4(fp)
   20ac8:	00204500 	call	20450 <DotProduct>
   20acc:	1007883a 	mov	r3,r2
   20ad0:	1809883a 	mov	r4,r3
   20ad4:	00253940 	call	25394 <__extendsfdf2>
   20ad8:	1011883a 	mov	r8,r2
   20adc:	1813883a 	mov	r9,r3
   20ae0:	01898cb4 	movhi	r6,9778
   20ae4:	318f2304 	addi	r6,r6,15500
   20ae8:	01cff8b4 	movhi	r7,16354
   20aec:	39f65f44 	addi	r7,r7,-9859
   20af0:	4009883a 	mov	r4,r8
   20af4:	480b883a 	mov	r5,r9
   20af8:	0022ec00 	call	22ec0 <__adddf3>
   20afc:	1009883a 	mov	r4,r2
   20b00:	180b883a 	mov	r5,r3
   20b04:	2005883a 	mov	r2,r4
   20b08:	2807883a 	mov	r3,r5
   20b0c:	1009883a 	mov	r4,r2
   20b10:	180b883a 	mov	r5,r3
   20b14:	00254a40 	call	254a4 <__truncdfsf2>
   20b18:	1007883a 	mov	r3,r2
   20b1c:	1809883a 	mov	r4,r3
   20b20:	00205100 	call	20510 <tansig>
   20b24:	1007883a 	mov	r3,r2
   20b28:	008000f4 	movhi	r2,3
   20b2c:	10970904 	addi	r2,r2,23588
   20b30:	10c00515 	stw	r3,20(r2)
    output[6]=tansig(DotProduct(input1,w6)+(0.30645761337057264573));
   20b34:	e0bfeb04 	addi	r2,fp,-84
   20b38:	100b883a 	mov	r5,r2
   20b3c:	e13fff17 	ldw	r4,-4(fp)
   20b40:	00204500 	call	20450 <DotProduct>
   20b44:	1007883a 	mov	r3,r2
   20b48:	1809883a 	mov	r4,r3
   20b4c:	00253940 	call	25394 <__extendsfdf2>
   20b50:	1011883a 	mov	r8,r2
   20b54:	1813883a 	mov	r9,r3
   20b58:	019930b4 	movhi	r6,25794
   20b5c:	3196d284 	addi	r6,r6,23370
   20b60:	01cff534 	movhi	r7,16340
   20b64:	39e74004 	addi	r7,r7,-25344
   20b68:	4009883a 	mov	r4,r8
   20b6c:	480b883a 	mov	r5,r9
   20b70:	0022ec00 	call	22ec0 <__adddf3>
   20b74:	1009883a 	mov	r4,r2
   20b78:	180b883a 	mov	r5,r3
   20b7c:	2005883a 	mov	r2,r4
   20b80:	2807883a 	mov	r3,r5
   20b84:	1009883a 	mov	r4,r2
   20b88:	180b883a 	mov	r5,r3
   20b8c:	00254a40 	call	254a4 <__truncdfsf2>
   20b90:	1007883a 	mov	r3,r2
   20b94:	1809883a 	mov	r4,r3
   20b98:	00205100 	call	20510 <tansig>
   20b9c:	1007883a 	mov	r3,r2
   20ba0:	008000f4 	movhi	r2,3
   20ba4:	10970904 	addi	r2,r2,23588
   20ba8:	10c00615 	stw	r3,24(r2)
    output[7]=tansig(DotProduct(input1,w7)+(1.0923240690661593089));
   20bac:	e0bff004 	addi	r2,fp,-64
   20bb0:	100b883a 	mov	r5,r2
   20bb4:	e13fff17 	ldw	r4,-4(fp)
   20bb8:	00204500 	call	20450 <DotProduct>
   20bbc:	1007883a 	mov	r3,r2
   20bc0:	1809883a 	mov	r4,r3
   20bc4:	00253940 	call	25394 <__extendsfdf2>
   20bc8:	1011883a 	mov	r8,r2
   20bcc:	1813883a 	mov	r9,r3
   20bd0:	01b36534 	movhi	r6,52628
   20bd4:	319758c4 	addi	r6,r6,23907
   20bd8:	01cffc74 	movhi	r7,16369
   20bdc:	39de8a04 	addi	r7,r7,31272
   20be0:	4009883a 	mov	r4,r8
   20be4:	480b883a 	mov	r5,r9
   20be8:	0022ec00 	call	22ec0 <__adddf3>
   20bec:	1009883a 	mov	r4,r2
   20bf0:	180b883a 	mov	r5,r3
   20bf4:	2005883a 	mov	r2,r4
   20bf8:	2807883a 	mov	r3,r5
   20bfc:	1009883a 	mov	r4,r2
   20c00:	180b883a 	mov	r5,r3
   20c04:	00254a40 	call	254a4 <__truncdfsf2>
   20c08:	1007883a 	mov	r3,r2
   20c0c:	1809883a 	mov	r4,r3
   20c10:	00205100 	call	20510 <tansig>
   20c14:	1007883a 	mov	r3,r2
   20c18:	008000f4 	movhi	r2,3
   20c1c:	10970904 	addi	r2,r2,23588
   20c20:	10c00715 	stw	r3,28(r2)
    output[8]=tansig(DotProduct(input1,w8)+(1.6808282304872848023));
   20c24:	e0bff504 	addi	r2,fp,-44
   20c28:	100b883a 	mov	r5,r2
   20c2c:	e13fff17 	ldw	r4,-4(fp)
   20c30:	00204500 	call	20450 <DotProduct>
   20c34:	1007883a 	mov	r3,r2
   20c38:	1809883a 	mov	r4,r3
   20c3c:	00253940 	call	25394 <__extendsfdf2>
   20c40:	1011883a 	mov	r8,r2
   20c44:	1813883a 	mov	r9,r3
   20c48:	018920b4 	movhi	r6,9346
   20c4c:	318bb684 	addi	r6,r6,11994
   20c50:	01cffef4 	movhi	r7,16379
   20c54:	39f92b04 	addi	r7,r7,-6996
   20c58:	4009883a 	mov	r4,r8
   20c5c:	480b883a 	mov	r5,r9
   20c60:	0022ec00 	call	22ec0 <__adddf3>
   20c64:	1009883a 	mov	r4,r2
   20c68:	180b883a 	mov	r5,r3
   20c6c:	2005883a 	mov	r2,r4
   20c70:	2807883a 	mov	r3,r5
   20c74:	1009883a 	mov	r4,r2
   20c78:	180b883a 	mov	r5,r3
   20c7c:	00254a40 	call	254a4 <__truncdfsf2>
   20c80:	1007883a 	mov	r3,r2
   20c84:	1809883a 	mov	r4,r3
   20c88:	00205100 	call	20510 <tansig>
   20c8c:	1007883a 	mov	r3,r2
   20c90:	008000f4 	movhi	r2,3
   20c94:	10970904 	addi	r2,r2,23588
   20c98:	10c00815 	stw	r3,32(r2)
	output[9]=tansig(DotProduct(input1,w9)+(2.3813398545941724116));
   20c9c:	e0bffa04 	addi	r2,fp,-24
   20ca0:	100b883a 	mov	r5,r2
   20ca4:	e13fff17 	ldw	r4,-4(fp)
   20ca8:	00204500 	call	20450 <DotProduct>
   20cac:	1007883a 	mov	r3,r2
   20cb0:	1809883a 	mov	r4,r3
   20cb4:	00253940 	call	25394 <__extendsfdf2>
   20cb8:	1011883a 	mov	r8,r2
   20cbc:	1813883a 	mov	r9,r3
   20cc0:	01ba3874 	movhi	r6,59617
   20cc4:	31896744 	addi	r6,r6,9629
   20cc8:	01d000f4 	movhi	r7,16387
   20ccc:	39c33ec4 	addi	r7,r7,3323
   20cd0:	4009883a 	mov	r4,r8
   20cd4:	480b883a 	mov	r5,r9
   20cd8:	0022ec00 	call	22ec0 <__adddf3>
   20cdc:	1009883a 	mov	r4,r2
   20ce0:	180b883a 	mov	r5,r3
   20ce4:	2005883a 	mov	r2,r4
   20ce8:	2807883a 	mov	r3,r5
   20cec:	1009883a 	mov	r4,r2
   20cf0:	180b883a 	mov	r5,r3
   20cf4:	00254a40 	call	254a4 <__truncdfsf2>
   20cf8:	1007883a 	mov	r3,r2
   20cfc:	1809883a 	mov	r4,r3
   20d00:	00205100 	call	20510 <tansig>
   20d04:	1007883a 	mov	r3,r2
   20d08:	008000f4 	movhi	r2,3
   20d0c:	10970904 	addi	r2,r2,23588
   20d10:	10c00915 	stw	r3,36(r2)
    return output;
   20d14:	008000f4 	movhi	r2,3
   20d18:	10970904 	addi	r2,r2,23588
}
   20d1c:	e037883a 	mov	sp,fp
   20d20:	dfc00117 	ldw	ra,4(sp)
   20d24:	df000017 	ldw	fp,0(sp)
   20d28:	dec00204 	addi	sp,sp,8
   20d2c:	f800283a 	ret

00020d30 <DotProduct1>:
/*=======  producto punto =========*/
float DotProduct1(float input1[], float input2[])
{
   20d30:	defffa04 	addi	sp,sp,-24
   20d34:	dfc00515 	stw	ra,20(sp)
   20d38:	df000415 	stw	fp,16(sp)
   20d3c:	df000404 	addi	fp,sp,16
   20d40:	e13ffe15 	stw	r4,-8(fp)
   20d44:	e17fff15 	stw	r5,-4(fp)
    int i=0;
   20d48:	e03ffc15 	stw	zero,-16(fp)
    float acumulador=0;
   20d4c:	e03ffd15 	stw	zero,-12(fp)
    for (i=0;i!=10;i++)									//<--------Segun el numero de neuronas en el hidden layer
   20d50:	e03ffc15 	stw	zero,-16(fp)
   20d54:	00001b06 	br	20dc4 <DotProduct1+0x94>
    {
        acumulador=input1[i]*input2[i]+acumulador;
   20d58:	e0bffc17 	ldw	r2,-16(fp)
   20d5c:	1085883a 	add	r2,r2,r2
   20d60:	1085883a 	add	r2,r2,r2
   20d64:	1007883a 	mov	r3,r2
   20d68:	e0bffe17 	ldw	r2,-8(fp)
   20d6c:	10c5883a 	add	r2,r2,r3
   20d70:	10c00017 	ldw	r3,0(r2)
   20d74:	e0bffc17 	ldw	r2,-16(fp)
   20d78:	1085883a 	add	r2,r2,r2
   20d7c:	1085883a 	add	r2,r2,r2
   20d80:	1009883a 	mov	r4,r2
   20d84:	e0bfff17 	ldw	r2,-4(fp)
   20d88:	1105883a 	add	r2,r2,r4
   20d8c:	11000017 	ldw	r4,0(r2)
   20d90:	200b883a 	mov	r5,r4
   20d94:	1809883a 	mov	r4,r3
   20d98:	00224800 	call	22480 <__mulsf3>
   20d9c:	1007883a 	mov	r3,r2
   20da0:	1805883a 	mov	r2,r3
   20da4:	100b883a 	mov	r5,r2
   20da8:	e13ffd17 	ldw	r4,-12(fp)
   20dac:	0021b780 	call	21b78 <__addsf3>
   20db0:	1007883a 	mov	r3,r2
   20db4:	e0fffd15 	stw	r3,-12(fp)
/*=======  producto punto =========*/
float DotProduct1(float input1[], float input2[])
{
    int i=0;
    float acumulador=0;
    for (i=0;i!=10;i++)									//<--------Segun el numero de neuronas en el hidden layer
   20db8:	e0bffc17 	ldw	r2,-16(fp)
   20dbc:	10800044 	addi	r2,r2,1
   20dc0:	e0bffc15 	stw	r2,-16(fp)
   20dc4:	e0bffc17 	ldw	r2,-16(fp)
   20dc8:	10800298 	cmpnei	r2,r2,10
   20dcc:	103fe21e 	bne	r2,zero,20d58 <__alt_data_end+0xfffe1958>
    {
        acumulador=input1[i]*input2[i]+acumulador;
    }
    return acumulador;
   20dd0:	e0bffd17 	ldw	r2,-12(fp)
   20dd4:	1007883a 	mov	r3,r2
}
   20dd8:	1805883a 	mov	r2,r3
   20ddc:	e037883a 	mov	sp,fp
   20de0:	dfc00117 	ldw	ra,4(sp)
   20de4:	df000017 	ldw	fp,0(sp)
   20de8:	dec00204 	addi	sp,sp,8
   20dec:	f800283a 	ret

00020df0 <mapminreverse>:
/*=======  funcion mapminreverse =========*/
float mapminreverse(float input)
{
   20df0:	defff804 	addi	sp,sp,-32
   20df4:	dfc00715 	stw	ra,28(sp)
   20df8:	df000615 	stw	fp,24(sp)
   20dfc:	dc000515 	stw	r16,20(sp)
   20e00:	df000604 	addi	fp,sp,24
   20e04:	e13ffe15 	stw	r4,-8(fp)
    float ymax=1,ymin=-1;
   20e08:	008fe034 	movhi	r2,16256
   20e0c:	e0bffa15 	stw	r2,-24(fp)
   20e10:	00afe034 	movhi	r2,49024
   20e14:	e0bffb15 	stw	r2,-20(fp)
    float xmin=32;										//<--------min salida
   20e18:	00908034 	movhi	r2,16896
   20e1c:	e0bffc15 	stw	r2,-16(fp)
    float xmax=52;										//<--------max salida
   20e20:	00909434 	movhi	r2,16976
   20e24:	e0bffd15 	stw	r2,-12(fp)
    static float output;
    output=((xmax-xmin)/(ymax-ymin))*(input-ymin)+xmin;
   20e28:	e17ffc17 	ldw	r5,-16(fp)
   20e2c:	e13ffd17 	ldw	r4,-12(fp)
   20e30:	002287c0 	call	2287c <__subsf3>
   20e34:	1007883a 	mov	r3,r2
   20e38:	1821883a 	mov	r16,r3
   20e3c:	e17ffb17 	ldw	r5,-20(fp)
   20e40:	e13ffa17 	ldw	r4,-24(fp)
   20e44:	002287c0 	call	2287c <__subsf3>
   20e48:	1007883a 	mov	r3,r2
   20e4c:	1805883a 	mov	r2,r3
   20e50:	100b883a 	mov	r5,r2
   20e54:	8009883a 	mov	r4,r16
   20e58:	00220400 	call	22040 <__divsf3>
   20e5c:	1007883a 	mov	r3,r2
   20e60:	1821883a 	mov	r16,r3
   20e64:	e17ffb17 	ldw	r5,-20(fp)
   20e68:	e13ffe17 	ldw	r4,-8(fp)
   20e6c:	002287c0 	call	2287c <__subsf3>
   20e70:	1007883a 	mov	r3,r2
   20e74:	1805883a 	mov	r2,r3
   20e78:	100b883a 	mov	r5,r2
   20e7c:	8009883a 	mov	r4,r16
   20e80:	00224800 	call	22480 <__mulsf3>
   20e84:	1007883a 	mov	r3,r2
   20e88:	1805883a 	mov	r2,r3
   20e8c:	e17ffc17 	ldw	r5,-16(fp)
   20e90:	1009883a 	mov	r4,r2
   20e94:	0021b780 	call	21b78 <__addsf3>
   20e98:	1007883a 	mov	r3,r2
   20e9c:	1805883a 	mov	r2,r3
   20ea0:	d0a6d815 	stw	r2,-25760(gp)
    return output;
   20ea4:	d0a6d817 	ldw	r2,-25760(gp)
   20ea8:	1007883a 	mov	r3,r2
}
   20eac:	1805883a 	mov	r2,r3
   20eb0:	e6ffff04 	addi	sp,fp,-4
   20eb4:	dfc00217 	ldw	ra,8(sp)
   20eb8:	df000117 	ldw	fp,4(sp)
   20ebc:	dc000017 	ldw	r16,0(sp)
   20ec0:	dec00304 	addi	sp,sp,12
   20ec4:	f800283a 	ret

00020ec8 <layer2>:
/*=======  output layer =========*/
float layer2(float *input1)
{
   20ec8:	defff304 	addi	sp,sp,-52
   20ecc:	dfc00c15 	stw	ra,48(sp)
   20ed0:	df000b15 	stw	fp,44(sp)
   20ed4:	df000b04 	addi	fp,sp,44
   20ed8:	e13fff15 	stw	r4,-4(fp)
    float static output1;
    float w0[]={0.1770890458616809493,0.18442331894640406897,-4.131073713753200316,-2.482458842655363096,1.6736695009645763399,-1.5433245094111347484,0.67502930505177860532,-0.19344688191339304284,-0.17768324384102607283,0.25820352972869753394};
   20edc:	008f8d74 	movhi	r2,15925
   20ee0:	1095b544 	addi	r2,r2,22229
   20ee4:	e0bff515 	stw	r2,-44(fp)
   20ee8:	008f8f74 	movhi	r2,15933
   20eec:	10b65dc4 	addi	r2,r2,-9865
   20ef0:	e0bff615 	stw	r2,-40(fp)
   20ef4:	00b02134 	movhi	r2,49284
   20ef8:	108c7084 	addi	r2,r2,12738
   20efc:	e0bff715 	stw	r2,-36(fp)
   20f00:	00b007f4 	movhi	r2,49183
   20f04:	10b826c4 	addi	r2,r2,-8037
   20f08:	e0bff815 	stw	r2,-32(fp)
   20f0c:	008ff5b4 	movhi	r2,16342
   20f10:	108eb344 	addi	r2,r2,15053
   20f14:	e0bff915 	stw	r2,-28(fp)
   20f18:	00aff1b4 	movhi	r2,49094
   20f1c:	10a2ea04 	addi	r2,r2,-29784
   20f20:	e0bffa15 	stw	r2,-24(fp)
   20f24:	008fcb74 	movhi	r2,16173
   20f28:	10b3ae04 	addi	r2,r2,-12616
   20f2c:	e0bffb15 	stw	r2,-20(fp)
   20f30:	00af91b4 	movhi	r2,48710
   20f34:	1085bc04 	addi	r2,r2,5872
   20f38:	e0bffc15 	stw	r2,-16(fp)
   20f3c:	00af8db4 	movhi	r2,48694
   20f40:	10bca644 	addi	r2,r2,-3431
   20f44:	e0bffd15 	stw	r2,-12(fp)
   20f48:	008fa134 	movhi	r2,16004
   20f4c:	108cd044 	addi	r2,r2,13121
   20f50:	e0bffe15 	stw	r2,-8(fp)
    output1=DotProduct1(input1,w0)+(1.9015988320641858955);
   20f54:	e17ff504 	addi	r5,fp,-44
   20f58:	e13fff17 	ldw	r4,-4(fp)
   20f5c:	0020d300 	call	20d30 <DotProduct1>
   20f60:	1007883a 	mov	r3,r2
   20f64:	1809883a 	mov	r4,r3
   20f68:	00253940 	call	25394 <__extendsfdf2>
   20f6c:	1011883a 	mov	r8,r2
   20f70:	1813883a 	mov	r9,r3
   20f74:	01b96774 	movhi	r6,58781
   20f78:	318f5584 	addi	r6,r6,15702
   20f7c:	01cfffb4 	movhi	r7,16382
   20f80:	39db3c84 	addi	r7,r7,27890
   20f84:	4009883a 	mov	r4,r8
   20f88:	480b883a 	mov	r5,r9
   20f8c:	0022ec00 	call	22ec0 <__adddf3>
   20f90:	1009883a 	mov	r4,r2
   20f94:	180b883a 	mov	r5,r3
   20f98:	2005883a 	mov	r2,r4
   20f9c:	2807883a 	mov	r3,r5
   20fa0:	1009883a 	mov	r4,r2
   20fa4:	180b883a 	mov	r5,r3
   20fa8:	00254a40 	call	254a4 <__truncdfsf2>
   20fac:	1007883a 	mov	r3,r2
   20fb0:	d0e6d915 	stw	r3,-25756(gp)
	return mapminreverse(output1);
   20fb4:	d0a6d917 	ldw	r2,-25756(gp)
   20fb8:	1009883a 	mov	r4,r2
   20fbc:	0020df00 	call	20df0 <mapminreverse>
   20fc0:	1007883a 	mov	r3,r2
   20fc4:	1805883a 	mov	r2,r3
}
   20fc8:	e037883a 	mov	sp,fp
   20fcc:	dfc00117 	ldw	ra,4(sp)
   20fd0:	df000017 	ldw	fp,0(sp)
   20fd4:	dec00204 	addi	sp,sp,8
   20fd8:	f800283a 	ret

00020fdc <main>:

/*=======  main =========*/
int main (void) {
   20fdc:	deffda04 	addi	sp,sp,-152
   20fe0:	dfc02515 	stw	ra,148(sp)
   20fe4:	df002415 	stw	fp,144(sp)
   20fe8:	dc002315 	stw	r16,140(sp)
   20fec:	df002404 	addi	fp,sp,144
	volatile int * ADC = (int *) 0x41020;//asignar la memoria del ADC
   20ff0:	00800134 	movhi	r2,4
   20ff4:	10840804 	addi	r2,r2,4128
   20ff8:	e0bfdd15 	stw	r2,-140(fp)
	int * memoria = (int *) 0x20000; // SDRAM address
   20ffc:	008000b4 	movhi	r2,2
   21000:	e0bfde15 	stw	r2,-136(fp)
	unsigned int canal_ldr;
	unsigned int canal_humedad_suelo;
	unsigned int canal_humedad_aire;
	unsigned int canal_temperatura;

	*(ADC) = 0; //setear valores de los canales en 0
   21004:	e0bfdd17 	ldw	r2,-140(fp)
   21008:	10000015 	stw	zero,0(r2)
	*(memoria) = 0;//Setear a cero los valores de memoria
   2100c:	e0bfde17 	ldw	r2,-136(fp)
   21010:	10000015 	stw	zero,0(r2)
	while (1){
		//Asignar valores a los canales
		canal_ldr = 0;
   21014:	e03fdf15 	stw	zero,-132(fp)
		canal_humedad_suelo = 1;
   21018:	00800044 	movi	r2,1
   2101c:	e0bfe015 	stw	r2,-128(fp)
		canal_humedad_aire = 2;
   21020:	00800084 	movi	r2,2
   21024:	e0bfe115 	stw	r2,-124(fp)
		canal_temperatura = 3;
   21028:	008000c4 	movi	r2,3
   2102c:	e0bfe215 	stw	r2,-120(fp)

		//ldrRMS = ldrRMS*1.41/4000;
		ldr = (*(ADC+canal_ldr))*100/4095; //Obtener el valor del ldr
   21030:	e0bfdf17 	ldw	r2,-132(fp)
   21034:	1085883a 	add	r2,r2,r2
   21038:	1085883a 	add	r2,r2,r2
   2103c:	1007883a 	mov	r3,r2
   21040:	e0bfdd17 	ldw	r2,-140(fp)
   21044:	10c5883a 	add	r2,r2,r3
   21048:	10800017 	ldw	r2,0(r2)
   2104c:	10801924 	muli	r2,r2,100
   21050:	0143ffc4 	movi	r5,4095
   21054:	1009883a 	mov	r4,r2
   21058:	00219c40 	call	219c4 <__divsi3>
   2105c:	e0bfe315 	stw	r2,-116(fp)
		printf("El valor del LDR en el canal %d es --> %d Porciento \n",canal_ldr,ldr);
   21060:	e1bfe317 	ldw	r6,-116(fp)
   21064:	e17fdf17 	ldw	r5,-132(fp)
   21068:	010000f4 	movhi	r4,3
   2106c:	21085804 	addi	r4,r4,8544
   21070:	00256f00 	call	256f0 <printf>

		//Lectura FC-28
		humedad_suelo = 100-(*(ADC+canal_humedad_suelo))*100/4095; //Obtener el valor del sensor FC-28
   21074:	e0bfe017 	ldw	r2,-128(fp)
   21078:	1085883a 	add	r2,r2,r2
   2107c:	1085883a 	add	r2,r2,r2
   21080:	1007883a 	mov	r3,r2
   21084:	e0bfdd17 	ldw	r2,-140(fp)
   21088:	10c5883a 	add	r2,r2,r3
   2108c:	10800017 	ldw	r2,0(r2)
   21090:	10801924 	muli	r2,r2,100
   21094:	0143ffc4 	movi	r5,4095
   21098:	1009883a 	mov	r4,r2
   2109c:	00219c40 	call	219c4 <__divsi3>
   210a0:	1007883a 	mov	r3,r2
   210a4:	00801904 	movi	r2,100
   210a8:	10c5c83a 	sub	r2,r2,r3
   210ac:	e0bfe415 	stw	r2,-112(fp)
		printf("El valor del sensor FC-28 en el canal %d es --> %d Porciento \n",canal_humedad_suelo,humedad_suelo);
   210b0:	e1bfe417 	ldw	r6,-112(fp)
   210b4:	e17fe017 	ldw	r5,-128(fp)
   210b8:	010000f4 	movhi	r4,3
   210bc:	21086604 	addi	r4,r4,8600
   210c0:	00256f00 	call	256f0 <printf>

		//Humedad del aire
		humedad_aire = ((*(ADC+canal_humedad_aire))*70/4095)+20;
   210c4:	e0bfe117 	ldw	r2,-124(fp)
   210c8:	1085883a 	add	r2,r2,r2
   210cc:	1085883a 	add	r2,r2,r2
   210d0:	1007883a 	mov	r3,r2
   210d4:	e0bfdd17 	ldw	r2,-140(fp)
   210d8:	10c5883a 	add	r2,r2,r3
   210dc:	10800017 	ldw	r2,0(r2)
   210e0:	108011a4 	muli	r2,r2,70
   210e4:	0143ffc4 	movi	r5,4095
   210e8:	1009883a 	mov	r4,r2
   210ec:	00219c40 	call	219c4 <__divsi3>
   210f0:	10800504 	addi	r2,r2,20
   210f4:	e0bfe515 	stw	r2,-108(fp)
		printf("El valor de la humedad del aire en el canal %d es --> %d  Porciento\n",canal_humedad_aire,humedad_aire);
   210f8:	e1bfe517 	ldw	r6,-108(fp)
   210fc:	e17fe117 	ldw	r5,-124(fp)
   21100:	010000f4 	movhi	r4,3
   21104:	21087604 	addi	r4,r4,8664
   21108:	00256f00 	call	256f0 <printf>
		//Temperatura
		temperatura = (*(ADC+canal_temperatura))*50/4095;
   2110c:	e0bfe217 	ldw	r2,-120(fp)
   21110:	1085883a 	add	r2,r2,r2
   21114:	1085883a 	add	r2,r2,r2
   21118:	1007883a 	mov	r3,r2
   2111c:	e0bfdd17 	ldw	r2,-140(fp)
   21120:	10c5883a 	add	r2,r2,r3
   21124:	10800017 	ldw	r2,0(r2)
   21128:	10800ca4 	muli	r2,r2,50
   2112c:	0143ffc4 	movi	r5,4095
   21130:	1009883a 	mov	r4,r2
   21134:	00219c40 	call	219c4 <__divsi3>
   21138:	e0bfe615 	stw	r2,-104(fp)
		printf("El valor de la temperatura en el canal %d es --> %d grados \n",canal_temperatura,temperatura);
   2113c:	e1bfe617 	ldw	r6,-104(fp)
   21140:	e17fe217 	ldw	r5,-120(fp)
   21144:	010000f4 	movhi	r4,3
   21148:	21088804 	addi	r4,r4,8736
   2114c:	00256f00 	call	256f0 <printf>

		//Escritura en memoria
		IOWR(memoria,0x20000,ldr);
   21150:	e0ffde17 	ldw	r3,-136(fp)
   21154:	00800234 	movhi	r2,8
   21158:	1885883a 	add	r2,r3,r2
   2115c:	e0ffe317 	ldw	r3,-116(fp)
   21160:	10c00035 	stwio	r3,0(r2)
		IOWR(memoria,0x20001,humedad_suelo);
   21164:	e0ffde17 	ldw	r3,-136(fp)
   21168:	00800234 	movhi	r2,8
   2116c:	10800104 	addi	r2,r2,4
   21170:	1885883a 	add	r2,r3,r2
   21174:	e0ffe417 	ldw	r3,-112(fp)
   21178:	10c00035 	stwio	r3,0(r2)
		IOWR(memoria,0x20002,humedad_aire);
   2117c:	e0ffde17 	ldw	r3,-136(fp)
   21180:	00800234 	movhi	r2,8
   21184:	10800204 	addi	r2,r2,8
   21188:	1885883a 	add	r2,r3,r2
   2118c:	e0ffe517 	ldw	r3,-108(fp)
   21190:	10c00035 	stwio	r3,0(r2)
		IOWR(memoria,0x20003,temperatura);
   21194:	e0ffde17 	ldw	r3,-136(fp)
   21198:	00800234 	movhi	r2,8
   2119c:	10800304 	addi	r2,r2,12
   211a0:	1885883a 	add	r2,r3,r2
   211a4:	e0ffe617 	ldw	r3,-104(fp)
   211a8:	10c00035 	stwio	r3,0(r2)

		//Codigo red neuronal
		float niNN[]={0.1,ldr,humedad_aire,temperatura,humedad_suelo}; //'Tiempo','Luz','Humedad Aire','Temperatura','Humedad Suelo'
   211ac:	008f7374 	movhi	r2,15821
   211b0:	10b33344 	addi	r2,r2,-13107
   211b4:	e0bfea15 	stw	r2,-88(fp)
   211b8:	e13fe317 	ldw	r4,-116(fp)
   211bc:	0022dd00 	call	22dd0 <__floatunsisf>
   211c0:	1007883a 	mov	r3,r2
   211c4:	e0ffeb15 	stw	r3,-84(fp)
   211c8:	e13fe517 	ldw	r4,-108(fp)
   211cc:	0022dd00 	call	22dd0 <__floatunsisf>
   211d0:	1007883a 	mov	r3,r2
   211d4:	e0ffec15 	stw	r3,-80(fp)
   211d8:	e13fe617 	ldw	r4,-104(fp)
   211dc:	0022dd00 	call	22dd0 <__floatunsisf>
   211e0:	1007883a 	mov	r3,r2
   211e4:	e0ffed15 	stw	r3,-76(fp)
   211e8:	e13fe417 	ldw	r4,-112(fp)
   211ec:	0022dd00 	call	22dd0 <__floatunsisf>
   211f0:	1007883a 	mov	r3,r2
   211f4:	e0ffee15 	stw	r3,-72(fp)
		int n;

		float *GPP1=mapminmax(niNN);
   211f8:	e0bfea04 	addi	r2,fp,-88
   211fc:	1009883a 	mov	r4,r2
   21200:	00202900 	call	20290 <mapminmax>
   21204:	e0bfe715 	stw	r2,-100(fp)
		float input1[6];									//<--------------segun el numero de entradas
		float input2[10];									//<--------Segun el numero de neuronas en el hidden layer
		for(n=0;n<5;n++)									//<--------------segun el numero de entradas
   21208:	e03fdc15 	stw	zero,-144(fp)
   2120c:	00001106 	br	21254 <main+0x278>
		{
			input1[n]=GPP1[n];
   21210:	e0bfdc17 	ldw	r2,-144(fp)
   21214:	1085883a 	add	r2,r2,r2
   21218:	1085883a 	add	r2,r2,r2
   2121c:	1007883a 	mov	r3,r2
   21220:	e0bfe717 	ldw	r2,-100(fp)
   21224:	10c5883a 	add	r2,r2,r3
   21228:	10c00017 	ldw	r3,0(r2)
   2122c:	e0bfdc17 	ldw	r2,-144(fp)
   21230:	1085883a 	add	r2,r2,r2
   21234:	1085883a 	add	r2,r2,r2
   21238:	e13fdc04 	addi	r4,fp,-144
   2123c:	2085883a 	add	r2,r4,r2
   21240:	10801304 	addi	r2,r2,76
   21244:	10c00015 	stw	r3,0(r2)
		int n;

		float *GPP1=mapminmax(niNN);
		float input1[6];									//<--------------segun el numero de entradas
		float input2[10];									//<--------Segun el numero de neuronas en el hidden layer
		for(n=0;n<5;n++)									//<--------------segun el numero de entradas
   21248:	e0bfdc17 	ldw	r2,-144(fp)
   2124c:	10800044 	addi	r2,r2,1
   21250:	e0bfdc15 	stw	r2,-144(fp)
   21254:	e0bfdc17 	ldw	r2,-144(fp)
   21258:	10800150 	cmplti	r2,r2,5
   2125c:	103fec1e 	bne	r2,zero,21210 <__alt_data_end+0xfffe1e10>
		{
			input1[n]=GPP1[n];
		}
		float *GPP2=layer1(input1);
   21260:	e0bfef04 	addi	r2,fp,-68
   21264:	1009883a 	mov	r4,r2
   21268:	00205fc0 	call	205fc <layer1>
   2126c:	e0bfe815 	stw	r2,-96(fp)
		for(n=0;n<10;n++)									//<--------Segun el numero de neuronas en el hidden layer
   21270:	e03fdc15 	stw	zero,-144(fp)
   21274:	00001106 	br	212bc <main+0x2e0>
		{
			input2[n]=GPP2[n];
   21278:	e0bfdc17 	ldw	r2,-144(fp)
   2127c:	1085883a 	add	r2,r2,r2
   21280:	1085883a 	add	r2,r2,r2
   21284:	1007883a 	mov	r3,r2
   21288:	e0bfe817 	ldw	r2,-96(fp)
   2128c:	10c5883a 	add	r2,r2,r3
   21290:	10c00017 	ldw	r3,0(r2)
   21294:	e0bfdc17 	ldw	r2,-144(fp)
   21298:	1085883a 	add	r2,r2,r2
   2129c:	1085883a 	add	r2,r2,r2
   212a0:	e13fdc04 	addi	r4,fp,-144
   212a4:	2085883a 	add	r2,r4,r2
   212a8:	10801904 	addi	r2,r2,100
   212ac:	10c00015 	stw	r3,0(r2)
		for(n=0;n<5;n++)									//<--------------segun el numero de entradas
		{
			input1[n]=GPP1[n];
		}
		float *GPP2=layer1(input1);
		for(n=0;n<10;n++)									//<--------Segun el numero de neuronas en el hidden layer
   212b0:	e0bfdc17 	ldw	r2,-144(fp)
   212b4:	10800044 	addi	r2,r2,1
   212b8:	e0bfdc15 	stw	r2,-144(fp)
   212bc:	e0bfdc17 	ldw	r2,-144(fp)
   212c0:	10800290 	cmplti	r2,r2,10
   212c4:	103fec1e 	bne	r2,zero,21278 <__alt_data_end+0xfffe1e78>
		{
			input2[n]=GPP2[n];
		}
		float output=layer2(input2);
   212c8:	e0bff504 	addi	r2,fp,-44
   212cc:	1009883a 	mov	r4,r2
   212d0:	0020ec80 	call	20ec8 <layer2>
   212d4:	e0bfe915 	stw	r2,-92(fp)
		printf("%f\n",output);
   212d8:	e13fe917 	ldw	r4,-92(fp)
   212dc:	00253940 	call	25394 <__extendsfdf2>
   212e0:	100d883a 	mov	r6,r2
   212e4:	180f883a 	mov	r7,r3
   212e8:	300b883a 	mov	r5,r6
   212ec:	380d883a 	mov	r6,r7
   212f0:	010000f4 	movhi	r4,3
   212f4:	21089804 	addi	r4,r4,8800
   212f8:	00256f00 	call	256f0 <printf>

		//Guardar en meoria resultado red neuronal
		IOWR(memoria,0x20004,output);
   212fc:	e0ffde17 	ldw	r3,-136(fp)
   21300:	00800234 	movhi	r2,8
   21304:	10800404 	addi	r2,r2,16
   21308:	18a1883a 	add	r16,r3,r2
   2130c:	e13fe917 	ldw	r4,-92(fp)
   21310:	0022d600 	call	22d60 <__fixsfsi>
   21314:	80800035 	stwio	r2,0(r16)

		usleep(1000000);
   21318:	010003f4 	movhi	r4,15
   2131c:	21109004 	addi	r4,r4,16960
   21320:	00300300 	call	30030 <usleep>
	}
   21324:	003f3b06 	br	21014 <__alt_data_end+0xfffe1c14>

00021328 <exp>:
   21328:	defff104 	addi	sp,sp,-60
   2132c:	dd000d15 	stw	r20,52(sp)
   21330:	050000f4 	movhi	r20,3
   21334:	dcc00c15 	stw	r19,48(sp)
   21338:	dc800b15 	stw	r18,44(sp)
   2133c:	dc400a15 	stw	r17,40(sp)
   21340:	dc000915 	stw	r16,36(sp)
   21344:	dfc00e15 	stw	ra,56(sp)
   21348:	a5101c04 	addi	r20,r20,16496
   2134c:	2027883a 	mov	r19,r4
   21350:	2825883a 	mov	r18,r5
   21354:	00214b80 	call	214b8 <__ieee754_exp>
   21358:	1821883a 	mov	r16,r3
   2135c:	a0c00017 	ldw	r3,0(r20)
   21360:	1023883a 	mov	r17,r2
   21364:	00bfffc4 	movi	r2,-1
   21368:	18802e26 	beq	r3,r2,21424 <exp+0xfc>
   2136c:	9809883a 	mov	r4,r19
   21370:	900b883a 	mov	r5,r18
   21374:	00219a00 	call	219a0 <finite>
   21378:	10002a26 	beq	r2,zero,21424 <exp+0xfc>
   2137c:	01bfbeb4 	movhi	r6,65274
   21380:	01d021b4 	movhi	r7,16518
   21384:	318e7bc4 	addi	r6,r6,14831
   21388:	39cb9084 	addi	r7,r7,11842
   2138c:	9809883a 	mov	r4,r19
   21390:	900b883a 	mov	r5,r18
   21394:	00240540 	call	24054 <__gedf2>
   21398:	00802c16 	blt	zero,r2,2144c <exp+0x124>
   2139c:	01b54b74 	movhi	r6,54573
   213a0:	01f021f4 	movhi	r7,49287
   213a4:	318c1444 	addi	r6,r6,12369
   213a8:	39d24404 	addi	r7,r7,18704
   213ac:	9809883a 	mov	r4,r19
   213b0:	900b883a 	mov	r5,r18
   213b4:	00241300 	call	24130 <__ledf2>
   213b8:	10001a0e 	bge	r2,zero,21424 <exp+0xfc>
   213bc:	00800104 	movi	r2,4
   213c0:	d8800015 	stw	r2,0(sp)
   213c4:	a0c00017 	ldw	r3,0(r20)
   213c8:	008000f4 	movhi	r2,3
   213cc:	10889904 	addi	r2,r2,8804
   213d0:	d8800115 	stw	r2,4(sp)
   213d4:	d8000815 	stw	zero,32(sp)
   213d8:	dcc00415 	stw	r19,16(sp)
   213dc:	dc800515 	stw	r18,20(sp)
   213e0:	dcc00215 	stw	r19,8(sp)
   213e4:	dc800315 	stw	r18,12(sp)
   213e8:	d8000615 	stw	zero,24(sp)
   213ec:	d8000715 	stw	zero,28(sp)
   213f0:	00800084 	movi	r2,2
   213f4:	18802c26 	beq	r3,r2,214a8 <exp+0x180>
   213f8:	d809883a 	mov	r4,sp
   213fc:	00219bc0 	call	219bc <matherr>
   21400:	10002926 	beq	r2,zero,214a8 <exp+0x180>
   21404:	d8800817 	ldw	r2,32(sp)
   21408:	10000326 	beq	r2,zero,21418 <exp+0xf0>
   2140c:	00256b00 	call	256b0 <__errno>
   21410:	d8c00817 	ldw	r3,32(sp)
   21414:	10c00015 	stw	r3,0(r2)
   21418:	d8800617 	ldw	r2,24(sp)
   2141c:	d8c00717 	ldw	r3,28(sp)
   21420:	00000206 	br	2142c <exp+0x104>
   21424:	8805883a 	mov	r2,r17
   21428:	8007883a 	mov	r3,r16
   2142c:	dfc00e17 	ldw	ra,56(sp)
   21430:	dd000d17 	ldw	r20,52(sp)
   21434:	dcc00c17 	ldw	r19,48(sp)
   21438:	dc800b17 	ldw	r18,44(sp)
   2143c:	dc400a17 	ldw	r17,40(sp)
   21440:	dc000917 	ldw	r16,36(sp)
   21444:	dec00f04 	addi	sp,sp,60
   21448:	f800283a 	ret
   2144c:	00c000c4 	movi	r3,3
   21450:	d8c00015 	stw	r3,0(sp)
   21454:	a0800017 	ldw	r2,0(r20)
   21458:	00c000f4 	movhi	r3,3
   2145c:	18c89904 	addi	r3,r3,8804
   21460:	d8c00115 	stw	r3,4(sp)
   21464:	d8000815 	stw	zero,32(sp)
   21468:	dcc00415 	stw	r19,16(sp)
   2146c:	dc800515 	stw	r18,20(sp)
   21470:	dcc00215 	stw	r19,8(sp)
   21474:	dc800315 	stw	r18,12(sp)
   21478:	1000061e 	bne	r2,zero,21494 <exp+0x16c>
   2147c:	00b80034 	movhi	r2,57344
   21480:	d8800615 	stw	r2,24(sp)
   21484:	0091fc34 	movhi	r2,18416
   21488:	10bfffc4 	addi	r2,r2,-1
   2148c:	d8800715 	stw	r2,28(sp)
   21490:	003fd906 	br	213f8 <__alt_data_end+0xfffe1ff8>
   21494:	00dffc34 	movhi	r3,32752
   21498:	d8c00715 	stw	r3,28(sp)
   2149c:	d8000615 	stw	zero,24(sp)
   214a0:	00c00084 	movi	r3,2
   214a4:	10ffd41e 	bne	r2,r3,213f8 <__alt_data_end+0xfffe1ff8>
   214a8:	00256b00 	call	256b0 <__errno>
   214ac:	00c00884 	movi	r3,34
   214b0:	10c00015 	stw	r3,0(r2)
   214b4:	003fd306 	br	21404 <__alt_data_end+0xfffe2004>

000214b8 <__ieee754_exp>:
   214b8:	00e00034 	movhi	r3,32768
   214bc:	defff604 	addi	sp,sp,-40
   214c0:	18ffffc4 	addi	r3,r3,-1
   214c4:	009021b4 	movhi	r2,16518
   214c8:	ddc00715 	stw	r23,28(sp)
   214cc:	dc400115 	stw	r17,4(sp)
   214d0:	dc000015 	stw	r16,0(sp)
   214d4:	dfc00915 	stw	ra,36(sp)
   214d8:	df000815 	stw	fp,32(sp)
   214dc:	dd800615 	stw	r22,24(sp)
   214e0:	dd400515 	stw	r21,20(sp)
   214e4:	dd000415 	stw	r20,16(sp)
   214e8:	dcc00315 	stw	r19,12(sp)
   214ec:	dc800215 	stw	r18,8(sp)
   214f0:	28c6703a 	and	r3,r5,r3
   214f4:	108b9044 	addi	r2,r2,11841
   214f8:	2821883a 	mov	r16,r5
   214fc:	2023883a 	mov	r17,r4
   21500:	282ed7fa 	srli	r23,r5,31
   21504:	10c00c2e 	bgeu	r2,r3,21538 <__ieee754_exp+0x80>
   21508:	009ffc34 	movhi	r2,32752
   2150c:	10bfffc4 	addi	r2,r2,-1
   21510:	10c08b2e 	bgeu	r2,r3,21740 <__ieee754_exp+0x288>
   21514:	00800434 	movhi	r2,16
   21518:	10bfffc4 	addi	r2,r2,-1
   2151c:	2884703a 	and	r2,r5,r2
   21520:	1104b03a 	or	r2,r2,r4
   21524:	1000fb1e 	bne	r2,zero,21914 <__ieee754_exp+0x45c>
   21528:	b8011a1e 	bne	r23,zero,21994 <__ieee754_exp+0x4dc>
   2152c:	2005883a 	mov	r2,r4
   21530:	2807883a 	mov	r3,r5
   21534:	00007606 	br	21710 <__ieee754_exp+0x258>
   21538:	008ff5b4 	movhi	r2,16342
   2153c:	108b9084 	addi	r2,r2,11842
   21540:	10c0c336 	bltu	r2,r3,21850 <__ieee754_exp+0x398>
   21544:	008f8c34 	movhi	r2,15920
   21548:	10bfffc4 	addi	r2,r2,-1
   2154c:	10c0d52e 	bgeu	r2,r3,218a4 <__ieee754_exp+0x3ec>
   21550:	0025883a 	mov	r18,zero
   21554:	880d883a 	mov	r6,r17
   21558:	800f883a 	mov	r7,r16
   2155c:	8809883a 	mov	r4,r17
   21560:	800b883a 	mov	r5,r16
   21564:	00242240 	call	24224 <__muldf3>
   21568:	019caff4 	movhi	r6,29375
   2156c:	01cf99b4 	movhi	r7,15974
   21570:	31a93404 	addi	r6,r6,-23344
   21574:	39cdda44 	addi	r7,r7,14185
   21578:	1009883a 	mov	r4,r2
   2157c:	180b883a 	mov	r5,r3
   21580:	1039883a 	mov	fp,r2
   21584:	182f883a 	mov	r23,r3
   21588:	00242240 	call	24224 <__muldf3>
   2158c:	01b174b4 	movhi	r6,50642
   21590:	01cfaf34 	movhi	r7,16060
   21594:	319afc44 	addi	r6,r6,27633
   21598:	39ef5044 	addi	r7,r7,-17087
   2159c:	1009883a 	mov	r4,r2
   215a0:	180b883a 	mov	r5,r3
   215a4:	002493c0 	call	2493c <__subdf3>
   215a8:	e00d883a 	mov	r6,fp
   215ac:	b80f883a 	mov	r7,r23
   215b0:	1009883a 	mov	r4,r2
   215b4:	180b883a 	mov	r5,r3
   215b8:	00242240 	call	24224 <__muldf3>
   215bc:	01abc9b4 	movhi	r6,44838
   215c0:	01cfc474 	movhi	r7,16145
   215c4:	31b78b04 	addi	r6,r6,-8660
   215c8:	39d59a84 	addi	r7,r7,22122
   215cc:	1009883a 	mov	r4,r2
   215d0:	180b883a 	mov	r5,r3
   215d4:	0022ec00 	call	22ec0 <__adddf3>
   215d8:	e00d883a 	mov	r6,fp
   215dc:	b80f883a 	mov	r7,r23
   215e0:	1009883a 	mov	r4,r2
   215e4:	180b883a 	mov	r5,r3
   215e8:	00242240 	call	24224 <__muldf3>
   215ec:	0185aff4 	movhi	r6,5823
   215f0:	01cfd9f4 	movhi	r7,16231
   215f4:	31af64c4 	addi	r6,r6,-17005
   215f8:	39f05b04 	addi	r7,r7,-16020
   215fc:	1009883a 	mov	r4,r2
   21600:	180b883a 	mov	r5,r3
   21604:	002493c0 	call	2493c <__subdf3>
   21608:	e00d883a 	mov	r6,fp
   2160c:	b80f883a 	mov	r7,r23
   21610:	1009883a 	mov	r4,r2
   21614:	180b883a 	mov	r5,r3
   21618:	00242240 	call	24224 <__muldf3>
   2161c:	01955574 	movhi	r6,21845
   21620:	01cff174 	movhi	r7,16325
   21624:	31954f84 	addi	r6,r6,21822
   21628:	39d55544 	addi	r7,r7,21845
   2162c:	1009883a 	mov	r4,r2
   21630:	180b883a 	mov	r5,r3
   21634:	0022ec00 	call	22ec0 <__adddf3>
   21638:	e00d883a 	mov	r6,fp
   2163c:	b80f883a 	mov	r7,r23
   21640:	1009883a 	mov	r4,r2
   21644:	180b883a 	mov	r5,r3
   21648:	00242240 	call	24224 <__muldf3>
   2164c:	100d883a 	mov	r6,r2
   21650:	180f883a 	mov	r7,r3
   21654:	8809883a 	mov	r4,r17
   21658:	800b883a 	mov	r5,r16
   2165c:	002493c0 	call	2493c <__subdf3>
   21660:	1039883a 	mov	fp,r2
   21664:	182f883a 	mov	r23,r3
   21668:	9000ae26 	beq	r18,zero,21924 <__ieee754_exp+0x46c>
   2166c:	8809883a 	mov	r4,r17
   21670:	800b883a 	mov	r5,r16
   21674:	100d883a 	mov	r6,r2
   21678:	180f883a 	mov	r7,r3
   2167c:	00242240 	call	24224 <__muldf3>
   21680:	e00d883a 	mov	r6,fp
   21684:	b80f883a 	mov	r7,r23
   21688:	0009883a 	mov	r4,zero
   2168c:	01500034 	movhi	r5,16384
   21690:	1023883a 	mov	r17,r2
   21694:	1821883a 	mov	r16,r3
   21698:	002493c0 	call	2493c <__subdf3>
   2169c:	100d883a 	mov	r6,r2
   216a0:	180f883a 	mov	r7,r3
   216a4:	8809883a 	mov	r4,r17
   216a8:	800b883a 	mov	r5,r16
   216ac:	002376c0 	call	2376c <__divdf3>
   216b0:	100d883a 	mov	r6,r2
   216b4:	180f883a 	mov	r7,r3
   216b8:	b009883a 	mov	r4,r22
   216bc:	a80b883a 	mov	r5,r21
   216c0:	002493c0 	call	2493c <__subdf3>
   216c4:	a00d883a 	mov	r6,r20
   216c8:	980f883a 	mov	r7,r19
   216cc:	1009883a 	mov	r4,r2
   216d0:	180b883a 	mov	r5,r3
   216d4:	002493c0 	call	2493c <__subdf3>
   216d8:	0009883a 	mov	r4,zero
   216dc:	100d883a 	mov	r6,r2
   216e0:	180f883a 	mov	r7,r3
   216e4:	014ffc34 	movhi	r5,16368
   216e8:	002493c0 	call	2493c <__subdf3>
   216ec:	013f00c4 	movi	r4,-1021
   216f0:	91007d0e 	bge	r18,r4,218e8 <__ieee754_exp+0x430>
   216f4:	9140fa04 	addi	r5,r18,1000
   216f8:	280a953a 	slli	r5,r5,20
   216fc:	000d883a 	mov	r6,zero
   21700:	01c05c34 	movhi	r7,368
   21704:	1009883a 	mov	r4,r2
   21708:	28cb883a 	add	r5,r5,r3
   2170c:	00242240 	call	24224 <__muldf3>
   21710:	dfc00917 	ldw	ra,36(sp)
   21714:	df000817 	ldw	fp,32(sp)
   21718:	ddc00717 	ldw	r23,28(sp)
   2171c:	dd800617 	ldw	r22,24(sp)
   21720:	dd400517 	ldw	r21,20(sp)
   21724:	dd000417 	ldw	r20,16(sp)
   21728:	dcc00317 	ldw	r19,12(sp)
   2172c:	dc800217 	ldw	r18,8(sp)
   21730:	dc400117 	ldw	r17,4(sp)
   21734:	dc000017 	ldw	r16,0(sp)
   21738:	dec00a04 	addi	sp,sp,40
   2173c:	f800283a 	ret
   21740:	01bfbeb4 	movhi	r6,65274
   21744:	01d021b4 	movhi	r7,16518
   21748:	318e7bc4 	addi	r6,r6,14831
   2174c:	39cb9084 	addi	r7,r7,11842
   21750:	00240540 	call	24054 <__gedf2>
   21754:	00806716 	blt	zero,r2,218f4 <__ieee754_exp+0x43c>
   21758:	01b54b74 	movhi	r6,54573
   2175c:	01f021f4 	movhi	r7,49287
   21760:	318c1444 	addi	r6,r6,12369
   21764:	39d24404 	addi	r7,r7,18704
   21768:	8809883a 	mov	r4,r17
   2176c:	800b883a 	mov	r5,r16
   21770:	00241300 	call	24130 <__ledf2>
   21774:	10008716 	blt	r2,zero,21994 <__ieee754_exp+0x4dc>
   21778:	b82490fa 	slli	r18,r23,3
   2177c:	01994b34 	movhi	r6,25900
   21780:	01cffdf4 	movhi	r7,16375
   21784:	05c000f4 	movhi	r23,3
   21788:	31a0bf84 	addi	r6,r6,-32002
   2178c:	39c551c4 	addi	r7,r7,5447
   21790:	8809883a 	mov	r4,r17
   21794:	800b883a 	mov	r5,r16
   21798:	bdc8a204 	addi	r23,r23,8840
   2179c:	00242240 	call	24224 <__muldf3>
   217a0:	bca5883a 	add	r18,r23,r18
   217a4:	91800017 	ldw	r6,0(r18)
   217a8:	91c00117 	ldw	r7,4(r18)
   217ac:	1009883a 	mov	r4,r2
   217b0:	180b883a 	mov	r5,r3
   217b4:	0022ec00 	call	22ec0 <__adddf3>
   217b8:	180b883a 	mov	r5,r3
   217bc:	1009883a 	mov	r4,r2
   217c0:	00252380 	call	25238 <__fixdfsi>
   217c4:	1009883a 	mov	r4,r2
   217c8:	1025883a 	mov	r18,r2
   217cc:	00252b80 	call	252b8 <__floatsidf>
   217d0:	01cff9b4 	movhi	r7,16358
   217d4:	39cb9084 	addi	r7,r7,11842
   217d8:	01bfb834 	movhi	r6,65248
   217dc:	1009883a 	mov	r4,r2
   217e0:	180b883a 	mov	r5,r3
   217e4:	102d883a 	mov	r22,r2
   217e8:	182b883a 	mov	r21,r3
   217ec:	00242240 	call	24224 <__muldf3>
   217f0:	100d883a 	mov	r6,r2
   217f4:	180f883a 	mov	r7,r3
   217f8:	8809883a 	mov	r4,r17
   217fc:	800b883a 	mov	r5,r16
   21800:	002493c0 	call	2493c <__subdf3>
   21804:	018d5e74 	movhi	r6,13689
   21808:	01cf7ab4 	movhi	r7,15850
   2180c:	b009883a 	mov	r4,r22
   21810:	a80b883a 	mov	r5,r21
   21814:	318f1d84 	addi	r6,r6,15478
   21818:	39ce7bc4 	addi	r7,r7,14831
   2181c:	1029883a 	mov	r20,r2
   21820:	1827883a 	mov	r19,r3
   21824:	00242240 	call	24224 <__muldf3>
   21828:	102d883a 	mov	r22,r2
   2182c:	182b883a 	mov	r21,r3
   21830:	b00d883a 	mov	r6,r22
   21834:	a80f883a 	mov	r7,r21
   21838:	a009883a 	mov	r4,r20
   2183c:	980b883a 	mov	r5,r19
   21840:	002493c0 	call	2493c <__subdf3>
   21844:	1023883a 	mov	r17,r2
   21848:	1821883a 	mov	r16,r3
   2184c:	003f4106 	br	21554 <__alt_data_end+0xfffe2154>
   21850:	008ffc74 	movhi	r2,16369
   21854:	10a8ac44 	addi	r2,r2,-23887
   21858:	10ffc736 	bltu	r2,r3,21778 <__alt_data_end+0xfffe2378>
   2185c:	b82290fa 	slli	r17,r23,3
   21860:	008000f4 	movhi	r2,3
   21864:	10889e04 	addi	r2,r2,8824
   21868:	1445883a 	add	r2,r2,r17
   2186c:	11800017 	ldw	r6,0(r2)
   21870:	11c00117 	ldw	r7,4(r2)
   21874:	04800044 	movi	r18,1
   21878:	95e5c83a 	sub	r18,r18,r23
   2187c:	002493c0 	call	2493c <__subdf3>
   21880:	1029883a 	mov	r20,r2
   21884:	008000f4 	movhi	r2,3
   21888:	10889a04 	addi	r2,r2,8808
   2188c:	1463883a 	add	r17,r2,r17
   21890:	1827883a 	mov	r19,r3
   21894:	8d800017 	ldw	r22,0(r17)
   21898:	8d400117 	ldw	r21,4(r17)
   2189c:	95e5c83a 	sub	r18,r18,r23
   218a0:	003fe306 	br	21830 <__alt_data_end+0xfffe2430>
   218a4:	01a20034 	movhi	r6,34816
   218a8:	01df8e34 	movhi	r7,32312
   218ac:	319d6704 	addi	r6,r6,30108
   218b0:	39f90f04 	addi	r7,r7,-7108
   218b4:	0022ec00 	call	22ec0 <__adddf3>
   218b8:	000d883a 	mov	r6,zero
   218bc:	01cffc34 	movhi	r7,16368
   218c0:	1009883a 	mov	r4,r2
   218c4:	180b883a 	mov	r5,r3
   218c8:	00240540 	call	24054 <__gedf2>
   218cc:	00bf200e 	bge	zero,r2,21550 <__alt_data_end+0xfffe2150>
   218d0:	000d883a 	mov	r6,zero
   218d4:	01cffc34 	movhi	r7,16368
   218d8:	8809883a 	mov	r4,r17
   218dc:	800b883a 	mov	r5,r16
   218e0:	0022ec00 	call	22ec0 <__adddf3>
   218e4:	003f8a06 	br	21710 <__alt_data_end+0xfffe2310>
   218e8:	9020953a 	slli	r16,r18,20
   218ec:	80c7883a 	add	r3,r16,r3
   218f0:	003f8706 	br	21710 <__alt_data_end+0xfffe2310>
   218f4:	01a20034 	movhi	r6,34816
   218f8:	01df8e34 	movhi	r7,32312
   218fc:	319d6704 	addi	r6,r6,30108
   21900:	39f90f04 	addi	r7,r7,-7108
   21904:	3009883a 	mov	r4,r6
   21908:	380b883a 	mov	r5,r7
   2190c:	00242240 	call	24224 <__muldf3>
   21910:	003f7f06 	br	21710 <__alt_data_end+0xfffe2310>
   21914:	200d883a 	mov	r6,r4
   21918:	280f883a 	mov	r7,r5
   2191c:	0022ec00 	call	22ec0 <__adddf3>
   21920:	003f7b06 	br	21710 <__alt_data_end+0xfffe2310>
   21924:	8809883a 	mov	r4,r17
   21928:	800b883a 	mov	r5,r16
   2192c:	100d883a 	mov	r6,r2
   21930:	180f883a 	mov	r7,r3
   21934:	00242240 	call	24224 <__muldf3>
   21938:	e009883a 	mov	r4,fp
   2193c:	b80b883a 	mov	r5,r23
   21940:	000d883a 	mov	r6,zero
   21944:	01d00034 	movhi	r7,16384
   21948:	1027883a 	mov	r19,r2
   2194c:	1825883a 	mov	r18,r3
   21950:	002493c0 	call	2493c <__subdf3>
   21954:	9809883a 	mov	r4,r19
   21958:	900b883a 	mov	r5,r18
   2195c:	100d883a 	mov	r6,r2
   21960:	180f883a 	mov	r7,r3
   21964:	002376c0 	call	2376c <__divdf3>
   21968:	880d883a 	mov	r6,r17
   2196c:	800f883a 	mov	r7,r16
   21970:	1009883a 	mov	r4,r2
   21974:	180b883a 	mov	r5,r3
   21978:	002493c0 	call	2493c <__subdf3>
   2197c:	100d883a 	mov	r6,r2
   21980:	180f883a 	mov	r7,r3
   21984:	0009883a 	mov	r4,zero
   21988:	014ffc34 	movhi	r5,16368
   2198c:	002493c0 	call	2493c <__subdf3>
   21990:	003f5f06 	br	21710 <__alt_data_end+0xfffe2310>
   21994:	0005883a 	mov	r2,zero
   21998:	0007883a 	mov	r3,zero
   2199c:	003f5c06 	br	21710 <__alt_data_end+0xfffe2310>

000219a0 <finite>:
   219a0:	00a00034 	movhi	r2,32768
   219a4:	10bfffc4 	addi	r2,r2,-1
   219a8:	288a703a 	and	r5,r5,r2
   219ac:	00e00434 	movhi	r3,32784
   219b0:	28c5883a 	add	r2,r5,r3
   219b4:	1004d7fa 	srli	r2,r2,31
   219b8:	f800283a 	ret

000219bc <matherr>:
   219bc:	0005883a 	mov	r2,zero
   219c0:	f800283a 	ret

000219c4 <__divsi3>:
   219c4:	20001b16 	blt	r4,zero,21a34 <__divsi3+0x70>
   219c8:	000f883a 	mov	r7,zero
   219cc:	28001616 	blt	r5,zero,21a28 <__divsi3+0x64>
   219d0:	200d883a 	mov	r6,r4
   219d4:	29001a2e 	bgeu	r5,r4,21a40 <__divsi3+0x7c>
   219d8:	00800804 	movi	r2,32
   219dc:	00c00044 	movi	r3,1
   219e0:	00000106 	br	219e8 <__divsi3+0x24>
   219e4:	10000d26 	beq	r2,zero,21a1c <__divsi3+0x58>
   219e8:	294b883a 	add	r5,r5,r5
   219ec:	10bfffc4 	addi	r2,r2,-1
   219f0:	18c7883a 	add	r3,r3,r3
   219f4:	293ffb36 	bltu	r5,r4,219e4 <__alt_data_end+0xfffe25e4>
   219f8:	0005883a 	mov	r2,zero
   219fc:	18000726 	beq	r3,zero,21a1c <__divsi3+0x58>
   21a00:	0005883a 	mov	r2,zero
   21a04:	31400236 	bltu	r6,r5,21a10 <__divsi3+0x4c>
   21a08:	314dc83a 	sub	r6,r6,r5
   21a0c:	10c4b03a 	or	r2,r2,r3
   21a10:	1806d07a 	srli	r3,r3,1
   21a14:	280ad07a 	srli	r5,r5,1
   21a18:	183ffa1e 	bne	r3,zero,21a04 <__alt_data_end+0xfffe2604>
   21a1c:	38000126 	beq	r7,zero,21a24 <__divsi3+0x60>
   21a20:	0085c83a 	sub	r2,zero,r2
   21a24:	f800283a 	ret
   21a28:	014bc83a 	sub	r5,zero,r5
   21a2c:	39c0005c 	xori	r7,r7,1
   21a30:	003fe706 	br	219d0 <__alt_data_end+0xfffe25d0>
   21a34:	0109c83a 	sub	r4,zero,r4
   21a38:	01c00044 	movi	r7,1
   21a3c:	003fe306 	br	219cc <__alt_data_end+0xfffe25cc>
   21a40:	00c00044 	movi	r3,1
   21a44:	003fee06 	br	21a00 <__alt_data_end+0xfffe2600>

00021a48 <__modsi3>:
   21a48:	20001716 	blt	r4,zero,21aa8 <__modsi3+0x60>
   21a4c:	000f883a 	mov	r7,zero
   21a50:	2005883a 	mov	r2,r4
   21a54:	28001216 	blt	r5,zero,21aa0 <__modsi3+0x58>
   21a58:	2900162e 	bgeu	r5,r4,21ab4 <__modsi3+0x6c>
   21a5c:	01800804 	movi	r6,32
   21a60:	00c00044 	movi	r3,1
   21a64:	00000106 	br	21a6c <__modsi3+0x24>
   21a68:	30000a26 	beq	r6,zero,21a94 <__modsi3+0x4c>
   21a6c:	294b883a 	add	r5,r5,r5
   21a70:	31bfffc4 	addi	r6,r6,-1
   21a74:	18c7883a 	add	r3,r3,r3
   21a78:	293ffb36 	bltu	r5,r4,21a68 <__alt_data_end+0xfffe2668>
   21a7c:	18000526 	beq	r3,zero,21a94 <__modsi3+0x4c>
   21a80:	1806d07a 	srli	r3,r3,1
   21a84:	11400136 	bltu	r2,r5,21a8c <__modsi3+0x44>
   21a88:	1145c83a 	sub	r2,r2,r5
   21a8c:	280ad07a 	srli	r5,r5,1
   21a90:	183ffb1e 	bne	r3,zero,21a80 <__alt_data_end+0xfffe2680>
   21a94:	38000126 	beq	r7,zero,21a9c <__modsi3+0x54>
   21a98:	0085c83a 	sub	r2,zero,r2
   21a9c:	f800283a 	ret
   21aa0:	014bc83a 	sub	r5,zero,r5
   21aa4:	003fec06 	br	21a58 <__alt_data_end+0xfffe2658>
   21aa8:	0109c83a 	sub	r4,zero,r4
   21aac:	01c00044 	movi	r7,1
   21ab0:	003fe706 	br	21a50 <__alt_data_end+0xfffe2650>
   21ab4:	00c00044 	movi	r3,1
   21ab8:	003ff106 	br	21a80 <__alt_data_end+0xfffe2680>

00021abc <__udivsi3>:
   21abc:	200d883a 	mov	r6,r4
   21ac0:	2900152e 	bgeu	r5,r4,21b18 <__udivsi3+0x5c>
   21ac4:	28001416 	blt	r5,zero,21b18 <__udivsi3+0x5c>
   21ac8:	00800804 	movi	r2,32
   21acc:	00c00044 	movi	r3,1
   21ad0:	00000206 	br	21adc <__udivsi3+0x20>
   21ad4:	10000e26 	beq	r2,zero,21b10 <__udivsi3+0x54>
   21ad8:	28000516 	blt	r5,zero,21af0 <__udivsi3+0x34>
   21adc:	294b883a 	add	r5,r5,r5
   21ae0:	10bfffc4 	addi	r2,r2,-1
   21ae4:	18c7883a 	add	r3,r3,r3
   21ae8:	293ffa36 	bltu	r5,r4,21ad4 <__alt_data_end+0xfffe26d4>
   21aec:	18000826 	beq	r3,zero,21b10 <__udivsi3+0x54>
   21af0:	0005883a 	mov	r2,zero
   21af4:	31400236 	bltu	r6,r5,21b00 <__udivsi3+0x44>
   21af8:	314dc83a 	sub	r6,r6,r5
   21afc:	10c4b03a 	or	r2,r2,r3
   21b00:	1806d07a 	srli	r3,r3,1
   21b04:	280ad07a 	srli	r5,r5,1
   21b08:	183ffa1e 	bne	r3,zero,21af4 <__alt_data_end+0xfffe26f4>
   21b0c:	f800283a 	ret
   21b10:	0005883a 	mov	r2,zero
   21b14:	f800283a 	ret
   21b18:	00c00044 	movi	r3,1
   21b1c:	003ff406 	br	21af0 <__alt_data_end+0xfffe26f0>

00021b20 <__umodsi3>:
   21b20:	2005883a 	mov	r2,r4
   21b24:	2900122e 	bgeu	r5,r4,21b70 <__umodsi3+0x50>
   21b28:	28001116 	blt	r5,zero,21b70 <__umodsi3+0x50>
   21b2c:	01800804 	movi	r6,32
   21b30:	00c00044 	movi	r3,1
   21b34:	00000206 	br	21b40 <__umodsi3+0x20>
   21b38:	30000c26 	beq	r6,zero,21b6c <__umodsi3+0x4c>
   21b3c:	28000516 	blt	r5,zero,21b54 <__umodsi3+0x34>
   21b40:	294b883a 	add	r5,r5,r5
   21b44:	31bfffc4 	addi	r6,r6,-1
   21b48:	18c7883a 	add	r3,r3,r3
   21b4c:	293ffa36 	bltu	r5,r4,21b38 <__alt_data_end+0xfffe2738>
   21b50:	18000626 	beq	r3,zero,21b6c <__umodsi3+0x4c>
   21b54:	1806d07a 	srli	r3,r3,1
   21b58:	11400136 	bltu	r2,r5,21b60 <__umodsi3+0x40>
   21b5c:	1145c83a 	sub	r2,r2,r5
   21b60:	280ad07a 	srli	r5,r5,1
   21b64:	183ffb1e 	bne	r3,zero,21b54 <__alt_data_end+0xfffe2754>
   21b68:	f800283a 	ret
   21b6c:	f800283a 	ret
   21b70:	00c00044 	movi	r3,1
   21b74:	003ff706 	br	21b54 <__alt_data_end+0xfffe2754>

00021b78 <__addsf3>:
   21b78:	defffc04 	addi	sp,sp,-16
   21b7c:	2004d7fa 	srli	r2,r4,31
   21b80:	280cd5fa 	srli	r6,r5,23
   21b84:	dc000015 	stw	r16,0(sp)
   21b88:	00c02034 	movhi	r3,128
   21b8c:	2020d5fa 	srli	r16,r4,23
   21b90:	280ed7fa 	srli	r7,r5,31
   21b94:	18ffffc4 	addi	r3,r3,-1
   21b98:	dc400115 	stw	r17,4(sp)
   21b9c:	1908703a 	and	r4,r3,r4
   21ba0:	194a703a 	and	r5,r3,r5
   21ba4:	dfc00315 	stw	ra,12(sp)
   21ba8:	dc800215 	stw	r18,8(sp)
   21bac:	14403fcc 	andi	r17,r2,255
   21bb0:	84003fcc 	andi	r16,r16,255
   21bb4:	200890fa 	slli	r4,r4,3
   21bb8:	31803fcc 	andi	r6,r6,255
   21bbc:	280a90fa 	slli	r5,r5,3
   21bc0:	89c05026 	beq	r17,r7,21d04 <__addsf3+0x18c>
   21bc4:	8185c83a 	sub	r2,r16,r6
   21bc8:	00807a0e 	bge	zero,r2,21db4 <__addsf3+0x23c>
   21bcc:	30001e1e 	bne	r6,zero,21c48 <__addsf3+0xd0>
   21bd0:	28006d1e 	bne	r5,zero,21d88 <__addsf3+0x210>
   21bd4:	208001cc 	andi	r2,r4,7
   21bd8:	10000426 	beq	r2,zero,21bec <__addsf3+0x74>
   21bdc:	208003cc 	andi	r2,r4,15
   21be0:	00c00104 	movi	r3,4
   21be4:	10c00126 	beq	r2,r3,21bec <__addsf3+0x74>
   21be8:	20c9883a 	add	r4,r4,r3
   21bec:	2081002c 	andhi	r2,r4,1024
   21bf0:	10003926 	beq	r2,zero,21cd8 <__addsf3+0x160>
   21bf4:	84000044 	addi	r16,r16,1
   21bf8:	00803fc4 	movi	r2,255
   21bfc:	80807826 	beq	r16,r2,21de0 <__addsf3+0x268>
   21c00:	200891ba 	slli	r4,r4,6
   21c04:	8805883a 	mov	r2,r17
   21c08:	2008d27a 	srli	r4,r4,9
   21c0c:	84003fcc 	andi	r16,r16,255
   21c10:	800695fa 	slli	r3,r16,23
   21c14:	10803fcc 	andi	r2,r2,255
   21c18:	04002034 	movhi	r16,128
   21c1c:	843fffc4 	addi	r16,r16,-1
   21c20:	100497fa 	slli	r2,r2,31
   21c24:	2408703a 	and	r4,r4,r16
   21c28:	20e0b03a 	or	r16,r4,r3
   21c2c:	8084b03a 	or	r2,r16,r2
   21c30:	dfc00317 	ldw	ra,12(sp)
   21c34:	dc800217 	ldw	r18,8(sp)
   21c38:	dc400117 	ldw	r17,4(sp)
   21c3c:	dc000017 	ldw	r16,0(sp)
   21c40:	dec00404 	addi	sp,sp,16
   21c44:	f800283a 	ret
   21c48:	00c03fc4 	movi	r3,255
   21c4c:	80ffe126 	beq	r16,r3,21bd4 <__alt_data_end+0xfffe27d4>
   21c50:	29410034 	orhi	r5,r5,1024
   21c54:	00c006c4 	movi	r3,27
   21c58:	18807516 	blt	r3,r2,21e30 <__addsf3+0x2b8>
   21c5c:	00c00804 	movi	r3,32
   21c60:	1887c83a 	sub	r3,r3,r2
   21c64:	28c6983a 	sll	r3,r5,r3
   21c68:	288ad83a 	srl	r5,r5,r2
   21c6c:	1804c03a 	cmpne	r2,r3,zero
   21c70:	288ab03a 	or	r5,r5,r2
   21c74:	2149c83a 	sub	r4,r4,r5
   21c78:	2081002c 	andhi	r2,r4,1024
   21c7c:	10001426 	beq	r2,zero,21cd0 <__addsf3+0x158>
   21c80:	04810034 	movhi	r18,1024
   21c84:	94bfffc4 	addi	r18,r18,-1
   21c88:	24a4703a 	and	r18,r4,r18
   21c8c:	9009883a 	mov	r4,r18
   21c90:	002564c0 	call	2564c <__clzsi2>
   21c94:	10bffec4 	addi	r2,r2,-5
   21c98:	90a4983a 	sll	r18,r18,r2
   21c9c:	14005416 	blt	r2,r16,21df0 <__addsf3+0x278>
   21ca0:	1405c83a 	sub	r2,r2,r16
   21ca4:	11000044 	addi	r4,r2,1
   21ca8:	00800804 	movi	r2,32
   21cac:	1105c83a 	sub	r2,r2,r4
   21cb0:	9084983a 	sll	r2,r18,r2
   21cb4:	9124d83a 	srl	r18,r18,r4
   21cb8:	0021883a 	mov	r16,zero
   21cbc:	1008c03a 	cmpne	r4,r2,zero
   21cc0:	9108b03a 	or	r4,r18,r4
   21cc4:	003fc306 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21cc8:	1000db26 	beq	r2,zero,22038 <__addsf3+0x4c0>
   21ccc:	1009883a 	mov	r4,r2
   21cd0:	208001cc 	andi	r2,r4,7
   21cd4:	103fc11e 	bne	r2,zero,21bdc <__alt_data_end+0xfffe27dc>
   21cd8:	2006d0fa 	srli	r3,r4,3
   21cdc:	01003fc4 	movi	r4,255
   21ce0:	8805883a 	mov	r2,r17
   21ce4:	8100241e 	bne	r16,r4,21d78 <__addsf3+0x200>
   21ce8:	18006e26 	beq	r3,zero,21ea4 <__addsf3+0x32c>
   21cec:	19001034 	orhi	r4,r3,64
   21cf0:	00c02034 	movhi	r3,128
   21cf4:	18ffffc4 	addi	r3,r3,-1
   21cf8:	043fffc4 	movi	r16,-1
   21cfc:	20c8703a 	and	r4,r4,r3
   21d00:	003fc206 	br	21c0c <__alt_data_end+0xfffe280c>
   21d04:	8187c83a 	sub	r3,r16,r6
   21d08:	00c03e0e 	bge	zero,r3,21e04 <__addsf3+0x28c>
   21d0c:	30002326 	beq	r6,zero,21d9c <__addsf3+0x224>
   21d10:	01803fc4 	movi	r6,255
   21d14:	81bfaf26 	beq	r16,r6,21bd4 <__alt_data_end+0xfffe27d4>
   21d18:	29410034 	orhi	r5,r5,1024
   21d1c:	018006c4 	movi	r6,27
   21d20:	30c07416 	blt	r6,r3,21ef4 <__addsf3+0x37c>
   21d24:	01800804 	movi	r6,32
   21d28:	30cdc83a 	sub	r6,r6,r3
   21d2c:	298c983a 	sll	r6,r5,r6
   21d30:	28cad83a 	srl	r5,r5,r3
   21d34:	3006c03a 	cmpne	r3,r6,zero
   21d38:	28cab03a 	or	r5,r5,r3
   21d3c:	2149883a 	add	r4,r4,r5
   21d40:	20c1002c 	andhi	r3,r4,1024
   21d44:	183fe226 	beq	r3,zero,21cd0 <__alt_data_end+0xfffe28d0>
   21d48:	84000044 	addi	r16,r16,1
   21d4c:	00c03fc4 	movi	r3,255
   21d50:	80c05426 	beq	r16,r3,21ea4 <__addsf3+0x32c>
   21d54:	00bf0034 	movhi	r2,64512
   21d58:	10bfffc4 	addi	r2,r2,-1
   21d5c:	20c0004c 	andi	r3,r4,1
   21d60:	2088703a 	and	r4,r4,r2
   21d64:	2008d07a 	srli	r4,r4,1
   21d68:	20c8b03a 	or	r4,r4,r3
   21d6c:	003f9906 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21d70:	0007883a 	mov	r3,zero
   21d74:	0005883a 	mov	r2,zero
   21d78:	01002034 	movhi	r4,128
   21d7c:	213fffc4 	addi	r4,r4,-1
   21d80:	1908703a 	and	r4,r3,r4
   21d84:	003fa106 	br	21c0c <__alt_data_end+0xfffe280c>
   21d88:	10bfffc4 	addi	r2,r2,-1
   21d8c:	103fb926 	beq	r2,zero,21c74 <__alt_data_end+0xfffe2874>
   21d90:	00c03fc4 	movi	r3,255
   21d94:	80ffaf1e 	bne	r16,r3,21c54 <__alt_data_end+0xfffe2854>
   21d98:	003f8e06 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21d9c:	283f8d26 	beq	r5,zero,21bd4 <__alt_data_end+0xfffe27d4>
   21da0:	18ffffc4 	addi	r3,r3,-1
   21da4:	183fe526 	beq	r3,zero,21d3c <__alt_data_end+0xfffe293c>
   21da8:	01803fc4 	movi	r6,255
   21dac:	81bfdb1e 	bne	r16,r6,21d1c <__alt_data_end+0xfffe291c>
   21db0:	003f8806 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21db4:	1000201e 	bne	r2,zero,21e38 <__addsf3+0x2c0>
   21db8:	80800044 	addi	r2,r16,1
   21dbc:	10803fcc 	andi	r2,r2,255
   21dc0:	01800044 	movi	r6,1
   21dc4:	3080450e 	bge	r6,r2,21edc <__addsf3+0x364>
   21dc8:	2165c83a 	sub	r18,r4,r5
   21dcc:	90c1002c 	andhi	r3,r18,1024
   21dd0:	18002b26 	beq	r3,zero,21e80 <__addsf3+0x308>
   21dd4:	2925c83a 	sub	r18,r5,r4
   21dd8:	3823883a 	mov	r17,r7
   21ddc:	003fab06 	br	21c8c <__alt_data_end+0xfffe288c>
   21de0:	8805883a 	mov	r2,r17
   21de4:	043fffc4 	movi	r16,-1
   21de8:	0009883a 	mov	r4,zero
   21dec:	003f8706 	br	21c0c <__alt_data_end+0xfffe280c>
   21df0:	013f0034 	movhi	r4,64512
   21df4:	213fffc4 	addi	r4,r4,-1
   21df8:	80a1c83a 	sub	r16,r16,r2
   21dfc:	9108703a 	and	r4,r18,r4
   21e00:	003f7406 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21e04:	1800411e 	bne	r3,zero,21f0c <__addsf3+0x394>
   21e08:	80c00044 	addi	r3,r16,1
   21e0c:	19c03fcc 	andi	r7,r3,255
   21e10:	01800044 	movi	r6,1
   21e14:	31c0260e 	bge	r6,r7,21eb0 <__addsf3+0x338>
   21e18:	01803fc4 	movi	r6,255
   21e1c:	19802126 	beq	r3,r6,21ea4 <__addsf3+0x32c>
   21e20:	2149883a 	add	r4,r4,r5
   21e24:	2008d07a 	srli	r4,r4,1
   21e28:	1821883a 	mov	r16,r3
   21e2c:	003f6906 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21e30:	01400044 	movi	r5,1
   21e34:	003f8f06 	br	21c74 <__alt_data_end+0xfffe2874>
   21e38:	8000151e 	bne	r16,zero,21e90 <__addsf3+0x318>
   21e3c:	20002f26 	beq	r4,zero,21efc <__addsf3+0x384>
   21e40:	0084303a 	nor	r2,zero,r2
   21e44:	10000a26 	beq	r2,zero,21e70 <__addsf3+0x2f8>
   21e48:	00c03fc4 	movi	r3,255
   21e4c:	30c02b26 	beq	r6,r3,21efc <__addsf3+0x384>
   21e50:	00c006c4 	movi	r3,27
   21e54:	18806d16 	blt	r3,r2,2200c <__addsf3+0x494>
   21e58:	00c00804 	movi	r3,32
   21e5c:	1887c83a 	sub	r3,r3,r2
   21e60:	20c6983a 	sll	r3,r4,r3
   21e64:	2084d83a 	srl	r2,r4,r2
   21e68:	1808c03a 	cmpne	r4,r3,zero
   21e6c:	1108b03a 	or	r4,r2,r4
   21e70:	2909c83a 	sub	r4,r5,r4
   21e74:	3021883a 	mov	r16,r6
   21e78:	3823883a 	mov	r17,r7
   21e7c:	003f7e06 	br	21c78 <__alt_data_end+0xfffe2878>
   21e80:	903f821e 	bne	r18,zero,21c8c <__alt_data_end+0xfffe288c>
   21e84:	0005883a 	mov	r2,zero
   21e88:	0021883a 	mov	r16,zero
   21e8c:	003fba06 	br	21d78 <__alt_data_end+0xfffe2978>
   21e90:	00c03fc4 	movi	r3,255
   21e94:	30c01926 	beq	r6,r3,21efc <__addsf3+0x384>
   21e98:	0085c83a 	sub	r2,zero,r2
   21e9c:	21010034 	orhi	r4,r4,1024
   21ea0:	003feb06 	br	21e50 <__alt_data_end+0xfffe2a50>
   21ea4:	043fffc4 	movi	r16,-1
   21ea8:	0009883a 	mov	r4,zero
   21eac:	003f5706 	br	21c0c <__alt_data_end+0xfffe280c>
   21eb0:	80004a1e 	bne	r16,zero,21fdc <__addsf3+0x464>
   21eb4:	20005926 	beq	r4,zero,2201c <__addsf3+0x4a4>
   21eb8:	283f4626 	beq	r5,zero,21bd4 <__alt_data_end+0xfffe27d4>
   21ebc:	2149883a 	add	r4,r4,r5
   21ec0:	2081002c 	andhi	r2,r4,1024
   21ec4:	103f8226 	beq	r2,zero,21cd0 <__alt_data_end+0xfffe28d0>
   21ec8:	00bf0034 	movhi	r2,64512
   21ecc:	10bfffc4 	addi	r2,r2,-1
   21ed0:	3021883a 	mov	r16,r6
   21ed4:	2088703a 	and	r4,r4,r2
   21ed8:	003f3e06 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21edc:	8000121e 	bne	r16,zero,21f28 <__addsf3+0x3b0>
   21ee0:	2000261e 	bne	r4,zero,21f7c <__addsf3+0x404>
   21ee4:	283fa226 	beq	r5,zero,21d70 <__alt_data_end+0xfffe2970>
   21ee8:	2809883a 	mov	r4,r5
   21eec:	3823883a 	mov	r17,r7
   21ef0:	003f3806 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21ef4:	01400044 	movi	r5,1
   21ef8:	003f9006 	br	21d3c <__alt_data_end+0xfffe293c>
   21efc:	2809883a 	mov	r4,r5
   21f00:	3021883a 	mov	r16,r6
   21f04:	3823883a 	mov	r17,r7
   21f08:	003f3206 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21f0c:	80000c1e 	bne	r16,zero,21f40 <__addsf3+0x3c8>
   21f10:	20002f26 	beq	r4,zero,21fd0 <__addsf3+0x458>
   21f14:	00c6303a 	nor	r3,zero,r3
   21f18:	18002b1e 	bne	r3,zero,21fc8 <__addsf3+0x450>
   21f1c:	2149883a 	add	r4,r4,r5
   21f20:	3021883a 	mov	r16,r6
   21f24:	003f8606 	br	21d40 <__alt_data_end+0xfffe2940>
   21f28:	20001b1e 	bne	r4,zero,21f98 <__addsf3+0x420>
   21f2c:	28003926 	beq	r5,zero,22014 <__addsf3+0x49c>
   21f30:	2809883a 	mov	r4,r5
   21f34:	3823883a 	mov	r17,r7
   21f38:	04003fc4 	movi	r16,255
   21f3c:	003f2506 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21f40:	01c03fc4 	movi	r7,255
   21f44:	31c02226 	beq	r6,r7,21fd0 <__addsf3+0x458>
   21f48:	00c7c83a 	sub	r3,zero,r3
   21f4c:	21010034 	orhi	r4,r4,1024
   21f50:	01c006c4 	movi	r7,27
   21f54:	38c03616 	blt	r7,r3,22030 <__addsf3+0x4b8>
   21f58:	01c00804 	movi	r7,32
   21f5c:	38cfc83a 	sub	r7,r7,r3
   21f60:	21ce983a 	sll	r7,r4,r7
   21f64:	20c6d83a 	srl	r3,r4,r3
   21f68:	3808c03a 	cmpne	r4,r7,zero
   21f6c:	1906b03a 	or	r3,r3,r4
   21f70:	1949883a 	add	r4,r3,r5
   21f74:	3021883a 	mov	r16,r6
   21f78:	003f7106 	br	21d40 <__alt_data_end+0xfffe2940>
   21f7c:	283f1526 	beq	r5,zero,21bd4 <__alt_data_end+0xfffe27d4>
   21f80:	2145c83a 	sub	r2,r4,r5
   21f84:	10c1002c 	andhi	r3,r2,1024
   21f88:	183f4f26 	beq	r3,zero,21cc8 <__alt_data_end+0xfffe28c8>
   21f8c:	2909c83a 	sub	r4,r5,r4
   21f90:	3823883a 	mov	r17,r7
   21f94:	003f0f06 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21f98:	28001a26 	beq	r5,zero,22004 <__addsf3+0x48c>
   21f9c:	2008d0fa 	srli	r4,r4,3
   21fa0:	2080102c 	andhi	r2,r4,64
   21fa4:	10000526 	beq	r2,zero,21fbc <__addsf3+0x444>
   21fa8:	280ad0fa 	srli	r5,r5,3
   21fac:	2880102c 	andhi	r2,r5,64
   21fb0:	1000021e 	bne	r2,zero,21fbc <__addsf3+0x444>
   21fb4:	2809883a 	mov	r4,r5
   21fb8:	3823883a 	mov	r17,r7
   21fbc:	200890fa 	slli	r4,r4,3
   21fc0:	04003fc4 	movi	r16,255
   21fc4:	003f0306 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21fc8:	01c03fc4 	movi	r7,255
   21fcc:	31ffe01e 	bne	r6,r7,21f50 <__alt_data_end+0xfffe2b50>
   21fd0:	2809883a 	mov	r4,r5
   21fd4:	3021883a 	mov	r16,r6
   21fd8:	003efe06 	br	21bd4 <__alt_data_end+0xfffe27d4>
   21fdc:	20001126 	beq	r4,zero,22024 <__addsf3+0x4ac>
   21fe0:	28000826 	beq	r5,zero,22004 <__addsf3+0x48c>
   21fe4:	2008d0fa 	srli	r4,r4,3
   21fe8:	2080102c 	andhi	r2,r4,64
   21fec:	103ff326 	beq	r2,zero,21fbc <__alt_data_end+0xfffe2bbc>
   21ff0:	280ad0fa 	srli	r5,r5,3
   21ff4:	2880102c 	andhi	r2,r5,64
   21ff8:	103ff01e 	bne	r2,zero,21fbc <__alt_data_end+0xfffe2bbc>
   21ffc:	2809883a 	mov	r4,r5
   22000:	003fee06 	br	21fbc <__alt_data_end+0xfffe2bbc>
   22004:	04003fc4 	movi	r16,255
   22008:	003ef206 	br	21bd4 <__alt_data_end+0xfffe27d4>
   2200c:	01000044 	movi	r4,1
   22010:	003f9706 	br	21e70 <__alt_data_end+0xfffe2a70>
   22014:	0005883a 	mov	r2,zero
   22018:	003f3406 	br	21cec <__alt_data_end+0xfffe28ec>
   2201c:	2809883a 	mov	r4,r5
   22020:	003eec06 	br	21bd4 <__alt_data_end+0xfffe27d4>
   22024:	2809883a 	mov	r4,r5
   22028:	04003fc4 	movi	r16,255
   2202c:	003ee906 	br	21bd4 <__alt_data_end+0xfffe27d4>
   22030:	00c00044 	movi	r3,1
   22034:	003fce06 	br	21f70 <__alt_data_end+0xfffe2b70>
   22038:	0005883a 	mov	r2,zero
   2203c:	003f4e06 	br	21d78 <__alt_data_end+0xfffe2978>

00022040 <__divsf3>:
   22040:	defff504 	addi	sp,sp,-44
   22044:	200cd5fa 	srli	r6,r4,23
   22048:	dcc00415 	stw	r19,16(sp)
   2204c:	2026d7fa 	srli	r19,r4,31
   22050:	00c02034 	movhi	r3,128
   22054:	dd800715 	stw	r22,28(sp)
   22058:	dd000515 	stw	r20,20(sp)
   2205c:	dc800315 	stw	r18,12(sp)
   22060:	18ffffc4 	addi	r3,r3,-1
   22064:	dfc00a15 	stw	ra,40(sp)
   22068:	df000915 	stw	fp,36(sp)
   2206c:	ddc00815 	stw	r23,32(sp)
   22070:	dd400615 	stw	r21,24(sp)
   22074:	dc400215 	stw	r17,8(sp)
   22078:	dc000115 	stw	r16,4(sp)
   2207c:	35003fcc 	andi	r20,r6,255
   22080:	1924703a 	and	r18,r3,r4
   22084:	9d803fcc 	andi	r22,r19,255
   22088:	a0005226 	beq	r20,zero,221d4 <__divsf3+0x194>
   2208c:	00803fc4 	movi	r2,255
   22090:	a0802e26 	beq	r20,r2,2214c <__divsf3+0x10c>
   22094:	91002034 	orhi	r4,r18,128
   22098:	202490fa 	slli	r18,r4,3
   2209c:	a53fe044 	addi	r20,r20,-127
   220a0:	0021883a 	mov	r16,zero
   220a4:	002f883a 	mov	r23,zero
   220a8:	280cd5fa 	srli	r6,r5,23
   220ac:	282ad7fa 	srli	r21,r5,31
   220b0:	00c02034 	movhi	r3,128
   220b4:	18ffffc4 	addi	r3,r3,-1
   220b8:	31803fcc 	andi	r6,r6,255
   220bc:	1962703a 	and	r17,r3,r5
   220c0:	af003fcc 	andi	fp,r21,255
   220c4:	30004a26 	beq	r6,zero,221f0 <__divsf3+0x1b0>
   220c8:	00803fc4 	movi	r2,255
   220cc:	30804526 	beq	r6,r2,221e4 <__divsf3+0x1a4>
   220d0:	89402034 	orhi	r5,r17,128
   220d4:	282290fa 	slli	r17,r5,3
   220d8:	31bfe044 	addi	r6,r6,-127
   220dc:	000b883a 	mov	r5,zero
   220e0:	2c20b03a 	or	r16,r5,r16
   220e4:	802090ba 	slli	r16,r16,2
   220e8:	008000b4 	movhi	r2,2
   220ec:	10884304 	addi	r2,r2,8460
   220f0:	80a1883a 	add	r16,r16,r2
   220f4:	81000017 	ldw	r4,0(r16)
   220f8:	9d46f03a 	xor	r3,r19,r21
   220fc:	180f883a 	mov	r7,r3
   22100:	18803fcc 	andi	r2,r3,255
   22104:	a18dc83a 	sub	r6,r20,r6
   22108:	2000683a 	jmp	r4
   2210c:	000222f0 	cmpltui	zero,zero,2187
   22110:	00022174 	movhi	zero,2181
   22114:	000222e4 	muli	zero,zero,2187
   22118:	00022160 	cmpeqi	zero,zero,2181
   2211c:	000222e4 	muli	zero,zero,2187
   22120:	000222bc 	xorhi	zero,zero,2186
   22124:	000222e4 	muli	zero,zero,2187
   22128:	00022160 	cmpeqi	zero,zero,2181
   2212c:	00022174 	movhi	zero,2181
   22130:	00022174 	movhi	zero,2181
   22134:	000222bc 	xorhi	zero,zero,2186
   22138:	00022160 	cmpeqi	zero,zero,2181
   2213c:	000223d0 	cmplti	zero,zero,2191
   22140:	000223d0 	cmplti	zero,zero,2191
   22144:	000223d0 	cmplti	zero,zero,2191
   22148:	00022384 	movi	zero,2190
   2214c:	9000581e 	bne	r18,zero,222b0 <__divsf3+0x270>
   22150:	04000204 	movi	r16,8
   22154:	05c00084 	movi	r23,2
   22158:	003fd306 	br	220a8 <__alt_data_end+0xfffe2ca8>
   2215c:	0023883a 	mov	r17,zero
   22160:	e02d883a 	mov	r22,fp
   22164:	282f883a 	mov	r23,r5
   22168:	00800084 	movi	r2,2
   2216c:	b8808f1e 	bne	r23,r2,223ac <__divsf3+0x36c>
   22170:	b005883a 	mov	r2,r22
   22174:	11c0004c 	andi	r7,r2,1
   22178:	013fffc4 	movi	r4,-1
   2217c:	000d883a 	mov	r6,zero
   22180:	21003fcc 	andi	r4,r4,255
   22184:	200895fa 	slli	r4,r4,23
   22188:	38803fcc 	andi	r2,r7,255
   2218c:	00c02034 	movhi	r3,128
   22190:	100497fa 	slli	r2,r2,31
   22194:	18ffffc4 	addi	r3,r3,-1
   22198:	30c6703a 	and	r3,r6,r3
   2219c:	1906b03a 	or	r3,r3,r4
   221a0:	1884b03a 	or	r2,r3,r2
   221a4:	dfc00a17 	ldw	ra,40(sp)
   221a8:	df000917 	ldw	fp,36(sp)
   221ac:	ddc00817 	ldw	r23,32(sp)
   221b0:	dd800717 	ldw	r22,28(sp)
   221b4:	dd400617 	ldw	r21,24(sp)
   221b8:	dd000517 	ldw	r20,20(sp)
   221bc:	dcc00417 	ldw	r19,16(sp)
   221c0:	dc800317 	ldw	r18,12(sp)
   221c4:	dc400217 	ldw	r17,8(sp)
   221c8:	dc000117 	ldw	r16,4(sp)
   221cc:	dec00b04 	addi	sp,sp,44
   221d0:	f800283a 	ret
   221d4:	90002b1e 	bne	r18,zero,22284 <__divsf3+0x244>
   221d8:	04000104 	movi	r16,4
   221dc:	05c00044 	movi	r23,1
   221e0:	003fb106 	br	220a8 <__alt_data_end+0xfffe2ca8>
   221e4:	8800251e 	bne	r17,zero,2227c <__divsf3+0x23c>
   221e8:	01400084 	movi	r5,2
   221ec:	00000206 	br	221f8 <__divsf3+0x1b8>
   221f0:	88001a1e 	bne	r17,zero,2225c <__divsf3+0x21c>
   221f4:	01400044 	movi	r5,1
   221f8:	8160b03a 	or	r16,r16,r5
   221fc:	802090ba 	slli	r16,r16,2
   22200:	00c000b4 	movhi	r3,2
   22204:	18c88704 	addi	r3,r3,8732
   22208:	80e1883a 	add	r16,r16,r3
   2220c:	80c00017 	ldw	r3,0(r16)
   22210:	9d44f03a 	xor	r2,r19,r21
   22214:	a18dc83a 	sub	r6,r20,r6
   22218:	1800683a 	jmp	r3
   2221c:	00022174 	movhi	zero,2181
   22220:	00022174 	movhi	zero,2181
   22224:	000223c0 	call	223c <__alt_mem_SRAM1-0x1ddc4>
   22228:	0002215c 	xori	zero,zero,2181
   2222c:	000223c0 	call	223c <__alt_mem_SRAM1-0x1ddc4>
   22230:	000222bc 	xorhi	zero,zero,2186
   22234:	000223c0 	call	223c <__alt_mem_SRAM1-0x1ddc4>
   22238:	0002215c 	xori	zero,zero,2181
   2223c:	00022174 	movhi	zero,2181
   22240:	00022174 	movhi	zero,2181
   22244:	000222bc 	xorhi	zero,zero,2186
   22248:	0002215c 	xori	zero,zero,2181
   2224c:	000223d0 	cmplti	zero,zero,2191
   22250:	000223d0 	cmplti	zero,zero,2191
   22254:	000223d0 	cmplti	zero,zero,2191
   22258:	000223e8 	cmpgeui	zero,zero,2191
   2225c:	8809883a 	mov	r4,r17
   22260:	002564c0 	call	2564c <__clzsi2>
   22264:	10fffec4 	addi	r3,r2,-5
   22268:	10801d84 	addi	r2,r2,118
   2226c:	88e2983a 	sll	r17,r17,r3
   22270:	008dc83a 	sub	r6,zero,r2
   22274:	000b883a 	mov	r5,zero
   22278:	003f9906 	br	220e0 <__alt_data_end+0xfffe2ce0>
   2227c:	014000c4 	movi	r5,3
   22280:	003f9706 	br	220e0 <__alt_data_end+0xfffe2ce0>
   22284:	9009883a 	mov	r4,r18
   22288:	d9400015 	stw	r5,0(sp)
   2228c:	002564c0 	call	2564c <__clzsi2>
   22290:	10fffec4 	addi	r3,r2,-5
   22294:	11801d84 	addi	r6,r2,118
   22298:	90e4983a 	sll	r18,r18,r3
   2229c:	01a9c83a 	sub	r20,zero,r6
   222a0:	0021883a 	mov	r16,zero
   222a4:	002f883a 	mov	r23,zero
   222a8:	d9400017 	ldw	r5,0(sp)
   222ac:	003f7e06 	br	220a8 <__alt_data_end+0xfffe2ca8>
   222b0:	04000304 	movi	r16,12
   222b4:	05c000c4 	movi	r23,3
   222b8:	003f7b06 	br	220a8 <__alt_data_end+0xfffe2ca8>
   222bc:	01802034 	movhi	r6,128
   222c0:	000f883a 	mov	r7,zero
   222c4:	31bfffc4 	addi	r6,r6,-1
   222c8:	013fffc4 	movi	r4,-1
   222cc:	003fac06 	br	22180 <__alt_data_end+0xfffe2d80>
   222d0:	01400044 	movi	r5,1
   222d4:	2909c83a 	sub	r4,r5,r4
   222d8:	00c006c4 	movi	r3,27
   222dc:	19004b0e 	bge	r3,r4,2240c <__divsf3+0x3cc>
   222e0:	114e703a 	and	r7,r2,r5
   222e4:	0009883a 	mov	r4,zero
   222e8:	000d883a 	mov	r6,zero
   222ec:	003fa406 	br	22180 <__alt_data_end+0xfffe2d80>
   222f0:	9006917a 	slli	r3,r18,5
   222f4:	8822917a 	slli	r17,r17,5
   222f8:	1c40372e 	bgeu	r3,r17,223d8 <__divsf3+0x398>
   222fc:	31bfffc4 	addi	r6,r6,-1
   22300:	010006c4 	movi	r4,27
   22304:	000b883a 	mov	r5,zero
   22308:	180f883a 	mov	r7,r3
   2230c:	294b883a 	add	r5,r5,r5
   22310:	18c7883a 	add	r3,r3,r3
   22314:	38000116 	blt	r7,zero,2231c <__divsf3+0x2dc>
   22318:	1c400236 	bltu	r3,r17,22324 <__divsf3+0x2e4>
   2231c:	1c47c83a 	sub	r3,r3,r17
   22320:	29400054 	ori	r5,r5,1
   22324:	213fffc4 	addi	r4,r4,-1
   22328:	203ff71e 	bne	r4,zero,22308 <__alt_data_end+0xfffe2f08>
   2232c:	1806c03a 	cmpne	r3,r3,zero
   22330:	1962b03a 	or	r17,r3,r5
   22334:	31001fc4 	addi	r4,r6,127
   22338:	013fe50e 	bge	zero,r4,222d0 <__alt_data_end+0xfffe2ed0>
   2233c:	88c001cc 	andi	r3,r17,7
   22340:	18000426 	beq	r3,zero,22354 <__divsf3+0x314>
   22344:	88c003cc 	andi	r3,r17,15
   22348:	01400104 	movi	r5,4
   2234c:	19400126 	beq	r3,r5,22354 <__divsf3+0x314>
   22350:	8963883a 	add	r17,r17,r5
   22354:	88c2002c 	andhi	r3,r17,2048
   22358:	18000426 	beq	r3,zero,2236c <__divsf3+0x32c>
   2235c:	00fe0034 	movhi	r3,63488
   22360:	18ffffc4 	addi	r3,r3,-1
   22364:	31002004 	addi	r4,r6,128
   22368:	88e2703a 	and	r17,r17,r3
   2236c:	00c03f84 	movi	r3,254
   22370:	193f8016 	blt	r3,r4,22174 <__alt_data_end+0xfffe2d74>
   22374:	880c91ba 	slli	r6,r17,6
   22378:	11c0004c 	andi	r7,r2,1
   2237c:	300cd27a 	srli	r6,r6,9
   22380:	003f7f06 	br	22180 <__alt_data_end+0xfffe2d80>
   22384:	9080102c 	andhi	r2,r18,64
   22388:	10000226 	beq	r2,zero,22394 <__divsf3+0x354>
   2238c:	8880102c 	andhi	r2,r17,64
   22390:	10001826 	beq	r2,zero,223f4 <__divsf3+0x3b4>
   22394:	00802034 	movhi	r2,128
   22398:	91801034 	orhi	r6,r18,64
   2239c:	10bfffc4 	addi	r2,r2,-1
   223a0:	980f883a 	mov	r7,r19
   223a4:	308c703a 	and	r6,r6,r2
   223a8:	003fc706 	br	222c8 <__alt_data_end+0xfffe2ec8>
   223ac:	008000c4 	movi	r2,3
   223b0:	b8802d26 	beq	r23,r2,22468 <__divsf3+0x428>
   223b4:	00c00044 	movi	r3,1
   223b8:	b005883a 	mov	r2,r22
   223bc:	b8ffdd1e 	bne	r23,r3,22334 <__alt_data_end+0xfffe2f34>
   223c0:	11c0004c 	andi	r7,r2,1
   223c4:	0009883a 	mov	r4,zero
   223c8:	000d883a 	mov	r6,zero
   223cc:	003f6c06 	br	22180 <__alt_data_end+0xfffe2d80>
   223d0:	9023883a 	mov	r17,r18
   223d4:	003f6406 	br	22168 <__alt_data_end+0xfffe2d68>
   223d8:	1c47c83a 	sub	r3,r3,r17
   223dc:	01000684 	movi	r4,26
   223e0:	01400044 	movi	r5,1
   223e4:	003fc806 	br	22308 <__alt_data_end+0xfffe2f08>
   223e8:	9080102c 	andhi	r2,r18,64
   223ec:	103fe926 	beq	r2,zero,22394 <__alt_data_end+0xfffe2f94>
   223f0:	0023883a 	mov	r17,zero
   223f4:	00802034 	movhi	r2,128
   223f8:	89801034 	orhi	r6,r17,64
   223fc:	10bfffc4 	addi	r2,r2,-1
   22400:	a80f883a 	mov	r7,r21
   22404:	308c703a 	and	r6,r6,r2
   22408:	003faf06 	br	222c8 <__alt_data_end+0xfffe2ec8>
   2240c:	01c00804 	movi	r7,32
   22410:	390fc83a 	sub	r7,r7,r4
   22414:	89ce983a 	sll	r7,r17,r7
   22418:	890ad83a 	srl	r5,r17,r4
   2241c:	380ec03a 	cmpne	r7,r7,zero
   22420:	29cab03a 	or	r5,r5,r7
   22424:	28c001cc 	andi	r3,r5,7
   22428:	18000426 	beq	r3,zero,2243c <__divsf3+0x3fc>
   2242c:	28c003cc 	andi	r3,r5,15
   22430:	01000104 	movi	r4,4
   22434:	19000126 	beq	r3,r4,2243c <__divsf3+0x3fc>
   22438:	290b883a 	add	r5,r5,r4
   2243c:	28c1002c 	andhi	r3,r5,1024
   22440:	18000426 	beq	r3,zero,22454 <__divsf3+0x414>
   22444:	11c0004c 	andi	r7,r2,1
   22448:	01000044 	movi	r4,1
   2244c:	000d883a 	mov	r6,zero
   22450:	003f4b06 	br	22180 <__alt_data_end+0xfffe2d80>
   22454:	280a91ba 	slli	r5,r5,6
   22458:	11c0004c 	andi	r7,r2,1
   2245c:	0009883a 	mov	r4,zero
   22460:	280cd27a 	srli	r6,r5,9
   22464:	003f4606 	br	22180 <__alt_data_end+0xfffe2d80>
   22468:	00802034 	movhi	r2,128
   2246c:	89801034 	orhi	r6,r17,64
   22470:	10bfffc4 	addi	r2,r2,-1
   22474:	b00f883a 	mov	r7,r22
   22478:	308c703a 	and	r6,r6,r2
   2247c:	003f9206 	br	222c8 <__alt_data_end+0xfffe2ec8>

00022480 <__mulsf3>:
   22480:	defff504 	addi	sp,sp,-44
   22484:	dc000115 	stw	r16,4(sp)
   22488:	2020d5fa 	srli	r16,r4,23
   2248c:	dd400615 	stw	r21,24(sp)
   22490:	202ad7fa 	srli	r21,r4,31
   22494:	dc800315 	stw	r18,12(sp)
   22498:	04802034 	movhi	r18,128
   2249c:	df000915 	stw	fp,36(sp)
   224a0:	dd000515 	stw	r20,20(sp)
   224a4:	94bfffc4 	addi	r18,r18,-1
   224a8:	dfc00a15 	stw	ra,40(sp)
   224ac:	ddc00815 	stw	r23,32(sp)
   224b0:	dd800715 	stw	r22,28(sp)
   224b4:	dcc00415 	stw	r19,16(sp)
   224b8:	dc400215 	stw	r17,8(sp)
   224bc:	84003fcc 	andi	r16,r16,255
   224c0:	9124703a 	and	r18,r18,r4
   224c4:	a829883a 	mov	r20,r21
   224c8:	af003fcc 	andi	fp,r21,255
   224cc:	80005426 	beq	r16,zero,22620 <__mulsf3+0x1a0>
   224d0:	00803fc4 	movi	r2,255
   224d4:	80802f26 	beq	r16,r2,22594 <__mulsf3+0x114>
   224d8:	91002034 	orhi	r4,r18,128
   224dc:	202490fa 	slli	r18,r4,3
   224e0:	843fe044 	addi	r16,r16,-127
   224e4:	0023883a 	mov	r17,zero
   224e8:	002f883a 	mov	r23,zero
   224ec:	2804d5fa 	srli	r2,r5,23
   224f0:	282cd7fa 	srli	r22,r5,31
   224f4:	01002034 	movhi	r4,128
   224f8:	213fffc4 	addi	r4,r4,-1
   224fc:	10803fcc 	andi	r2,r2,255
   22500:	2166703a 	and	r19,r4,r5
   22504:	b1803fcc 	andi	r6,r22,255
   22508:	10004c26 	beq	r2,zero,2263c <__mulsf3+0x1bc>
   2250c:	00c03fc4 	movi	r3,255
   22510:	10c04726 	beq	r2,r3,22630 <__mulsf3+0x1b0>
   22514:	99002034 	orhi	r4,r19,128
   22518:	202690fa 	slli	r19,r4,3
   2251c:	10bfe044 	addi	r2,r2,-127
   22520:	0007883a 	mov	r3,zero
   22524:	80a1883a 	add	r16,r16,r2
   22528:	010003c4 	movi	r4,15
   2252c:	1c44b03a 	or	r2,r3,r17
   22530:	b56af03a 	xor	r21,r22,r21
   22534:	81c00044 	addi	r7,r16,1
   22538:	20806b36 	bltu	r4,r2,226e8 <__mulsf3+0x268>
   2253c:	100490ba 	slli	r2,r2,2
   22540:	010000b4 	movhi	r4,2
   22544:	21095504 	addi	r4,r4,9556
   22548:	1105883a 	add	r2,r2,r4
   2254c:	10800017 	ldw	r2,0(r2)
   22550:	1000683a 	jmp	r2
   22554:	000226e8 	cmpgeui	zero,zero,2203
   22558:	000225a8 	cmpgeui	zero,zero,2198
   2255c:	000225a8 	cmpgeui	zero,zero,2198
   22560:	000225a4 	muli	zero,zero,2198
   22564:	000226cc 	andi	zero,zero,2203
   22568:	000226cc 	andi	zero,zero,2203
   2256c:	000226b8 	rdprs	zero,zero,2202
   22570:	000225a4 	muli	zero,zero,2198
   22574:	000226cc 	andi	zero,zero,2203
   22578:	000226b8 	rdprs	zero,zero,2202
   2257c:	000226cc 	andi	zero,zero,2203
   22580:	000225a4 	muli	zero,zero,2198
   22584:	000226d8 	cmpnei	zero,zero,2203
   22588:	000226d8 	cmpnei	zero,zero,2203
   2258c:	000226d8 	cmpnei	zero,zero,2203
   22590:	000227b4 	movhi	zero,2206
   22594:	90003b1e 	bne	r18,zero,22684 <__mulsf3+0x204>
   22598:	04400204 	movi	r17,8
   2259c:	05c00084 	movi	r23,2
   225a0:	003fd206 	br	224ec <__alt_data_end+0xfffe30ec>
   225a4:	302b883a 	mov	r21,r6
   225a8:	00800084 	movi	r2,2
   225ac:	18802626 	beq	r3,r2,22648 <__mulsf3+0x1c8>
   225b0:	008000c4 	movi	r2,3
   225b4:	1880ab26 	beq	r3,r2,22864 <__mulsf3+0x3e4>
   225b8:	00800044 	movi	r2,1
   225bc:	1880a21e 	bne	r3,r2,22848 <__mulsf3+0x3c8>
   225c0:	a829883a 	mov	r20,r21
   225c4:	0007883a 	mov	r3,zero
   225c8:	0009883a 	mov	r4,zero
   225cc:	18803fcc 	andi	r2,r3,255
   225d0:	100695fa 	slli	r3,r2,23
   225d4:	a0803fcc 	andi	r2,r20,255
   225d8:	100a97fa 	slli	r5,r2,31
   225dc:	00802034 	movhi	r2,128
   225e0:	10bfffc4 	addi	r2,r2,-1
   225e4:	2084703a 	and	r2,r4,r2
   225e8:	10c4b03a 	or	r2,r2,r3
   225ec:	1144b03a 	or	r2,r2,r5
   225f0:	dfc00a17 	ldw	ra,40(sp)
   225f4:	df000917 	ldw	fp,36(sp)
   225f8:	ddc00817 	ldw	r23,32(sp)
   225fc:	dd800717 	ldw	r22,28(sp)
   22600:	dd400617 	ldw	r21,24(sp)
   22604:	dd000517 	ldw	r20,20(sp)
   22608:	dcc00417 	ldw	r19,16(sp)
   2260c:	dc800317 	ldw	r18,12(sp)
   22610:	dc400217 	ldw	r17,8(sp)
   22614:	dc000117 	ldw	r16,4(sp)
   22618:	dec00b04 	addi	sp,sp,44
   2261c:	f800283a 	ret
   22620:	90000d1e 	bne	r18,zero,22658 <__mulsf3+0x1d8>
   22624:	04400104 	movi	r17,4
   22628:	05c00044 	movi	r23,1
   2262c:	003faf06 	br	224ec <__alt_data_end+0xfffe30ec>
   22630:	9806c03a 	cmpne	r3,r19,zero
   22634:	18c00084 	addi	r3,r3,2
   22638:	003fba06 	br	22524 <__alt_data_end+0xfffe3124>
   2263c:	9800141e 	bne	r19,zero,22690 <__mulsf3+0x210>
   22640:	00c00044 	movi	r3,1
   22644:	003fb706 	br	22524 <__alt_data_end+0xfffe3124>
   22648:	a829883a 	mov	r20,r21
   2264c:	00ffffc4 	movi	r3,-1
   22650:	0009883a 	mov	r4,zero
   22654:	003fdd06 	br	225cc <__alt_data_end+0xfffe31cc>
   22658:	9009883a 	mov	r4,r18
   2265c:	d9400015 	stw	r5,0(sp)
   22660:	002564c0 	call	2564c <__clzsi2>
   22664:	10fffec4 	addi	r3,r2,-5
   22668:	10801d84 	addi	r2,r2,118
   2266c:	90e4983a 	sll	r18,r18,r3
   22670:	00a1c83a 	sub	r16,zero,r2
   22674:	0023883a 	mov	r17,zero
   22678:	002f883a 	mov	r23,zero
   2267c:	d9400017 	ldw	r5,0(sp)
   22680:	003f9a06 	br	224ec <__alt_data_end+0xfffe30ec>
   22684:	04400304 	movi	r17,12
   22688:	05c000c4 	movi	r23,3
   2268c:	003f9706 	br	224ec <__alt_data_end+0xfffe30ec>
   22690:	9809883a 	mov	r4,r19
   22694:	d9800015 	stw	r6,0(sp)
   22698:	002564c0 	call	2564c <__clzsi2>
   2269c:	10fffec4 	addi	r3,r2,-5
   226a0:	10801d84 	addi	r2,r2,118
   226a4:	98e6983a 	sll	r19,r19,r3
   226a8:	0085c83a 	sub	r2,zero,r2
   226ac:	0007883a 	mov	r3,zero
   226b0:	d9800017 	ldw	r6,0(sp)
   226b4:	003f9b06 	br	22524 <__alt_data_end+0xfffe3124>
   226b8:	01002034 	movhi	r4,128
   226bc:	0029883a 	mov	r20,zero
   226c0:	213fffc4 	addi	r4,r4,-1
   226c4:	00ffffc4 	movi	r3,-1
   226c8:	003fc006 	br	225cc <__alt_data_end+0xfffe31cc>
   226cc:	9027883a 	mov	r19,r18
   226d0:	b807883a 	mov	r3,r23
   226d4:	003fb406 	br	225a8 <__alt_data_end+0xfffe31a8>
   226d8:	9027883a 	mov	r19,r18
   226dc:	e02b883a 	mov	r21,fp
   226e0:	b807883a 	mov	r3,r23
   226e4:	003fb006 	br	225a8 <__alt_data_end+0xfffe31a8>
   226e8:	9004d43a 	srli	r2,r18,16
   226ec:	9810d43a 	srli	r8,r19,16
   226f0:	94bfffcc 	andi	r18,r18,65535
   226f4:	993fffcc 	andi	r4,r19,65535
   226f8:	910d383a 	mul	r6,r18,r4
   226fc:	20a7383a 	mul	r19,r4,r2
   22700:	9225383a 	mul	r18,r18,r8
   22704:	3006d43a 	srli	r3,r6,16
   22708:	1211383a 	mul	r8,r2,r8
   2270c:	94e5883a 	add	r18,r18,r19
   22710:	1c87883a 	add	r3,r3,r18
   22714:	1cc0022e 	bgeu	r3,r19,22720 <__mulsf3+0x2a0>
   22718:	00800074 	movhi	r2,1
   2271c:	4091883a 	add	r8,r8,r2
   22720:	1804943a 	slli	r2,r3,16
   22724:	31bfffcc 	andi	r6,r6,65535
   22728:	1806d43a 	srli	r3,r3,16
   2272c:	1185883a 	add	r2,r2,r6
   22730:	102691ba 	slli	r19,r2,6
   22734:	1a07883a 	add	r3,r3,r8
   22738:	1004d6ba 	srli	r2,r2,26
   2273c:	180891ba 	slli	r4,r3,6
   22740:	9826c03a 	cmpne	r19,r19,zero
   22744:	9884b03a 	or	r2,r19,r2
   22748:	1126b03a 	or	r19,r2,r4
   2274c:	9882002c 	andhi	r2,r19,2048
   22750:	10000426 	beq	r2,zero,22764 <__mulsf3+0x2e4>
   22754:	9804d07a 	srli	r2,r19,1
   22758:	9900004c 	andi	r4,r19,1
   2275c:	3821883a 	mov	r16,r7
   22760:	1126b03a 	or	r19,r2,r4
   22764:	80c01fc4 	addi	r3,r16,127
   22768:	00c0210e 	bge	zero,r3,227f0 <__mulsf3+0x370>
   2276c:	988001cc 	andi	r2,r19,7
   22770:	10000426 	beq	r2,zero,22784 <__mulsf3+0x304>
   22774:	988003cc 	andi	r2,r19,15
   22778:	01000104 	movi	r4,4
   2277c:	11000126 	beq	r2,r4,22784 <__mulsf3+0x304>
   22780:	9927883a 	add	r19,r19,r4
   22784:	9882002c 	andhi	r2,r19,2048
   22788:	10000426 	beq	r2,zero,2279c <__mulsf3+0x31c>
   2278c:	00be0034 	movhi	r2,63488
   22790:	10bfffc4 	addi	r2,r2,-1
   22794:	80c02004 	addi	r3,r16,128
   22798:	98a6703a 	and	r19,r19,r2
   2279c:	00803f84 	movi	r2,254
   227a0:	10ffa916 	blt	r2,r3,22648 <__alt_data_end+0xfffe3248>
   227a4:	980891ba 	slli	r4,r19,6
   227a8:	a829883a 	mov	r20,r21
   227ac:	2008d27a 	srli	r4,r4,9
   227b0:	003f8606 	br	225cc <__alt_data_end+0xfffe31cc>
   227b4:	9080102c 	andhi	r2,r18,64
   227b8:	10000826 	beq	r2,zero,227dc <__mulsf3+0x35c>
   227bc:	9880102c 	andhi	r2,r19,64
   227c0:	1000061e 	bne	r2,zero,227dc <__mulsf3+0x35c>
   227c4:	00802034 	movhi	r2,128
   227c8:	99001034 	orhi	r4,r19,64
   227cc:	10bfffc4 	addi	r2,r2,-1
   227d0:	b029883a 	mov	r20,r22
   227d4:	2088703a 	and	r4,r4,r2
   227d8:	003fba06 	br	226c4 <__alt_data_end+0xfffe32c4>
   227dc:	00802034 	movhi	r2,128
   227e0:	91001034 	orhi	r4,r18,64
   227e4:	10bfffc4 	addi	r2,r2,-1
   227e8:	2088703a 	and	r4,r4,r2
   227ec:	003fb506 	br	226c4 <__alt_data_end+0xfffe32c4>
   227f0:	00800044 	movi	r2,1
   227f4:	10c7c83a 	sub	r3,r2,r3
   227f8:	008006c4 	movi	r2,27
   227fc:	10ff7016 	blt	r2,r3,225c0 <__alt_data_end+0xfffe31c0>
   22800:	00800804 	movi	r2,32
   22804:	10c5c83a 	sub	r2,r2,r3
   22808:	9884983a 	sll	r2,r19,r2
   2280c:	98c6d83a 	srl	r3,r19,r3
   22810:	1004c03a 	cmpne	r2,r2,zero
   22814:	1884b03a 	or	r2,r3,r2
   22818:	10c001cc 	andi	r3,r2,7
   2281c:	18000426 	beq	r3,zero,22830 <__mulsf3+0x3b0>
   22820:	10c003cc 	andi	r3,r2,15
   22824:	01000104 	movi	r4,4
   22828:	19000126 	beq	r3,r4,22830 <__mulsf3+0x3b0>
   2282c:	1105883a 	add	r2,r2,r4
   22830:	10c1002c 	andhi	r3,r2,1024
   22834:	18000626 	beq	r3,zero,22850 <__mulsf3+0x3d0>
   22838:	a829883a 	mov	r20,r21
   2283c:	00c00044 	movi	r3,1
   22840:	0009883a 	mov	r4,zero
   22844:	003f6106 	br	225cc <__alt_data_end+0xfffe31cc>
   22848:	3821883a 	mov	r16,r7
   2284c:	003fc506 	br	22764 <__alt_data_end+0xfffe3364>
   22850:	100491ba 	slli	r2,r2,6
   22854:	a829883a 	mov	r20,r21
   22858:	0007883a 	mov	r3,zero
   2285c:	1008d27a 	srli	r4,r2,9
   22860:	003f5a06 	br	225cc <__alt_data_end+0xfffe31cc>
   22864:	00802034 	movhi	r2,128
   22868:	99001034 	orhi	r4,r19,64
   2286c:	10bfffc4 	addi	r2,r2,-1
   22870:	a829883a 	mov	r20,r21
   22874:	2088703a 	and	r4,r4,r2
   22878:	003f9206 	br	226c4 <__alt_data_end+0xfffe32c4>

0002287c <__subsf3>:
   2287c:	defffc04 	addi	sp,sp,-16
   22880:	280cd5fa 	srli	r6,r5,23
   22884:	dc000015 	stw	r16,0(sp)
   22888:	01c02034 	movhi	r7,128
   2288c:	2020d5fa 	srli	r16,r4,23
   22890:	39ffffc4 	addi	r7,r7,-1
   22894:	3906703a 	and	r3,r7,r4
   22898:	dc400115 	stw	r17,4(sp)
   2289c:	394e703a 	and	r7,r7,r5
   228a0:	2022d7fa 	srli	r17,r4,31
   228a4:	dfc00315 	stw	ra,12(sp)
   228a8:	dc800215 	stw	r18,8(sp)
   228ac:	31803fcc 	andi	r6,r6,255
   228b0:	01003fc4 	movi	r4,255
   228b4:	84003fcc 	andi	r16,r16,255
   228b8:	180690fa 	slli	r3,r3,3
   228bc:	2804d7fa 	srli	r2,r5,31
   228c0:	380e90fa 	slli	r7,r7,3
   228c4:	31006d26 	beq	r6,r4,22a7c <__subsf3+0x200>
   228c8:	1080005c 	xori	r2,r2,1
   228cc:	8189c83a 	sub	r4,r16,r6
   228d0:	14404f26 	beq	r2,r17,22a10 <__subsf3+0x194>
   228d4:	0100770e 	bge	zero,r4,22ab4 <__subsf3+0x238>
   228d8:	30001e1e 	bne	r6,zero,22954 <__subsf3+0xd8>
   228dc:	38006a1e 	bne	r7,zero,22a88 <__subsf3+0x20c>
   228e0:	188001cc 	andi	r2,r3,7
   228e4:	10000426 	beq	r2,zero,228f8 <__subsf3+0x7c>
   228e8:	188003cc 	andi	r2,r3,15
   228ec:	01000104 	movi	r4,4
   228f0:	11000126 	beq	r2,r4,228f8 <__subsf3+0x7c>
   228f4:	1907883a 	add	r3,r3,r4
   228f8:	1881002c 	andhi	r2,r3,1024
   228fc:	10003926 	beq	r2,zero,229e4 <__subsf3+0x168>
   22900:	84000044 	addi	r16,r16,1
   22904:	00803fc4 	movi	r2,255
   22908:	80807526 	beq	r16,r2,22ae0 <__subsf3+0x264>
   2290c:	180691ba 	slli	r3,r3,6
   22910:	8880004c 	andi	r2,r17,1
   22914:	180ad27a 	srli	r5,r3,9
   22918:	84003fcc 	andi	r16,r16,255
   2291c:	800695fa 	slli	r3,r16,23
   22920:	10803fcc 	andi	r2,r2,255
   22924:	01002034 	movhi	r4,128
   22928:	213fffc4 	addi	r4,r4,-1
   2292c:	100497fa 	slli	r2,r2,31
   22930:	2920703a 	and	r16,r5,r4
   22934:	80e0b03a 	or	r16,r16,r3
   22938:	8084b03a 	or	r2,r16,r2
   2293c:	dfc00317 	ldw	ra,12(sp)
   22940:	dc800217 	ldw	r18,8(sp)
   22944:	dc400117 	ldw	r17,4(sp)
   22948:	dc000017 	ldw	r16,0(sp)
   2294c:	dec00404 	addi	sp,sp,16
   22950:	f800283a 	ret
   22954:	00803fc4 	movi	r2,255
   22958:	80bfe126 	beq	r16,r2,228e0 <__alt_data_end+0xfffe34e0>
   2295c:	39c10034 	orhi	r7,r7,1024
   22960:	008006c4 	movi	r2,27
   22964:	11007416 	blt	r2,r4,22b38 <__subsf3+0x2bc>
   22968:	00800804 	movi	r2,32
   2296c:	1105c83a 	sub	r2,r2,r4
   22970:	3884983a 	sll	r2,r7,r2
   22974:	390ed83a 	srl	r7,r7,r4
   22978:	1008c03a 	cmpne	r4,r2,zero
   2297c:	390eb03a 	or	r7,r7,r4
   22980:	19c7c83a 	sub	r3,r3,r7
   22984:	1881002c 	andhi	r2,r3,1024
   22988:	10001426 	beq	r2,zero,229dc <__subsf3+0x160>
   2298c:	04810034 	movhi	r18,1024
   22990:	94bfffc4 	addi	r18,r18,-1
   22994:	1ca4703a 	and	r18,r3,r18
   22998:	9009883a 	mov	r4,r18
   2299c:	002564c0 	call	2564c <__clzsi2>
   229a0:	10bffec4 	addi	r2,r2,-5
   229a4:	90a4983a 	sll	r18,r18,r2
   229a8:	14005116 	blt	r2,r16,22af0 <__subsf3+0x274>
   229ac:	1405c83a 	sub	r2,r2,r16
   229b0:	10c00044 	addi	r3,r2,1
   229b4:	00800804 	movi	r2,32
   229b8:	10c5c83a 	sub	r2,r2,r3
   229bc:	9084983a 	sll	r2,r18,r2
   229c0:	90e4d83a 	srl	r18,r18,r3
   229c4:	0021883a 	mov	r16,zero
   229c8:	1006c03a 	cmpne	r3,r2,zero
   229cc:	90c6b03a 	or	r3,r18,r3
   229d0:	003fc306 	br	228e0 <__alt_data_end+0xfffe34e0>
   229d4:	2000e026 	beq	r4,zero,22d58 <__subsf3+0x4dc>
   229d8:	2007883a 	mov	r3,r4
   229dc:	188001cc 	andi	r2,r3,7
   229e0:	103fc11e 	bne	r2,zero,228e8 <__alt_data_end+0xfffe34e8>
   229e4:	180ad0fa 	srli	r5,r3,3
   229e8:	00c03fc4 	movi	r3,255
   229ec:	8880004c 	andi	r2,r17,1
   229f0:	80c0031e 	bne	r16,r3,22a00 <__subsf3+0x184>
   229f4:	28006d26 	beq	r5,zero,22bac <__subsf3+0x330>
   229f8:	29401034 	orhi	r5,r5,64
   229fc:	043fffc4 	movi	r16,-1
   22a00:	00c02034 	movhi	r3,128
   22a04:	18ffffc4 	addi	r3,r3,-1
   22a08:	28ca703a 	and	r5,r5,r3
   22a0c:	003fc206 	br	22918 <__alt_data_end+0xfffe3518>
   22a10:	01003c0e 	bge	zero,r4,22b04 <__subsf3+0x288>
   22a14:	30002126 	beq	r6,zero,22a9c <__subsf3+0x220>
   22a18:	01403fc4 	movi	r5,255
   22a1c:	817fb026 	beq	r16,r5,228e0 <__alt_data_end+0xfffe34e0>
   22a20:	39c10034 	orhi	r7,r7,1024
   22a24:	014006c4 	movi	r5,27
   22a28:	29007416 	blt	r5,r4,22bfc <__subsf3+0x380>
   22a2c:	01400804 	movi	r5,32
   22a30:	290bc83a 	sub	r5,r5,r4
   22a34:	394a983a 	sll	r5,r7,r5
   22a38:	390ed83a 	srl	r7,r7,r4
   22a3c:	2808c03a 	cmpne	r4,r5,zero
   22a40:	390eb03a 	or	r7,r7,r4
   22a44:	19c7883a 	add	r3,r3,r7
   22a48:	1901002c 	andhi	r4,r3,1024
   22a4c:	20003826 	beq	r4,zero,22b30 <__subsf3+0x2b4>
   22a50:	84000044 	addi	r16,r16,1
   22a54:	01003fc4 	movi	r4,255
   22a58:	81005426 	beq	r16,r4,22bac <__subsf3+0x330>
   22a5c:	1023883a 	mov	r17,r2
   22a60:	00bf0034 	movhi	r2,64512
   22a64:	10bfffc4 	addi	r2,r2,-1
   22a68:	1900004c 	andi	r4,r3,1
   22a6c:	1886703a 	and	r3,r3,r2
   22a70:	1806d07a 	srli	r3,r3,1
   22a74:	1906b03a 	or	r3,r3,r4
   22a78:	003f9906 	br	228e0 <__alt_data_end+0xfffe34e0>
   22a7c:	383f9226 	beq	r7,zero,228c8 <__alt_data_end+0xfffe34c8>
   22a80:	10803fcc 	andi	r2,r2,255
   22a84:	003f9106 	br	228cc <__alt_data_end+0xfffe34cc>
   22a88:	213fffc4 	addi	r4,r4,-1
   22a8c:	203fbc26 	beq	r4,zero,22980 <__alt_data_end+0xfffe3580>
   22a90:	00803fc4 	movi	r2,255
   22a94:	80bfb21e 	bne	r16,r2,22960 <__alt_data_end+0xfffe3560>
   22a98:	003f9106 	br	228e0 <__alt_data_end+0xfffe34e0>
   22a9c:	383f9026 	beq	r7,zero,228e0 <__alt_data_end+0xfffe34e0>
   22aa0:	213fffc4 	addi	r4,r4,-1
   22aa4:	203fe726 	beq	r4,zero,22a44 <__alt_data_end+0xfffe3644>
   22aa8:	01403fc4 	movi	r5,255
   22aac:	817fdd1e 	bne	r16,r5,22a24 <__alt_data_end+0xfffe3624>
   22ab0:	003f8b06 	br	228e0 <__alt_data_end+0xfffe34e0>
   22ab4:	2000221e 	bne	r4,zero,22b40 <__subsf3+0x2c4>
   22ab8:	81000044 	addi	r4,r16,1
   22abc:	21003fcc 	andi	r4,r4,255
   22ac0:	01400044 	movi	r5,1
   22ac4:	2900470e 	bge	r5,r4,22be4 <__subsf3+0x368>
   22ac8:	19e5c83a 	sub	r18,r3,r7
   22acc:	9141002c 	andhi	r5,r18,1024
   22ad0:	28002d26 	beq	r5,zero,22b88 <__subsf3+0x30c>
   22ad4:	38e5c83a 	sub	r18,r7,r3
   22ad8:	1023883a 	mov	r17,r2
   22adc:	003fae06 	br	22998 <__alt_data_end+0xfffe3598>
   22ae0:	8880004c 	andi	r2,r17,1
   22ae4:	043fffc4 	movi	r16,-1
   22ae8:	000b883a 	mov	r5,zero
   22aec:	003f8a06 	br	22918 <__alt_data_end+0xfffe3518>
   22af0:	00ff0034 	movhi	r3,64512
   22af4:	18ffffc4 	addi	r3,r3,-1
   22af8:	80a1c83a 	sub	r16,r16,r2
   22afc:	90c6703a 	and	r3,r18,r3
   22b00:	003f7706 	br	228e0 <__alt_data_end+0xfffe34e0>
   22b04:	2000431e 	bne	r4,zero,22c14 <__subsf3+0x398>
   22b08:	81000044 	addi	r4,r16,1
   22b0c:	21803fcc 	andi	r6,r4,255
   22b10:	01400044 	movi	r5,1
   22b14:	2980280e 	bge	r5,r6,22bb8 <__subsf3+0x33c>
   22b18:	01403fc4 	movi	r5,255
   22b1c:	21402326 	beq	r4,r5,22bac <__subsf3+0x330>
   22b20:	19c7883a 	add	r3,r3,r7
   22b24:	1806d07a 	srli	r3,r3,1
   22b28:	2021883a 	mov	r16,r4
   22b2c:	003f6c06 	br	228e0 <__alt_data_end+0xfffe34e0>
   22b30:	1023883a 	mov	r17,r2
   22b34:	003fa906 	br	229dc <__alt_data_end+0xfffe35dc>
   22b38:	01c00044 	movi	r7,1
   22b3c:	003f9006 	br	22980 <__alt_data_end+0xfffe3580>
   22b40:	8000151e 	bne	r16,zero,22b98 <__subsf3+0x31c>
   22b44:	18002f26 	beq	r3,zero,22c04 <__subsf3+0x388>
   22b48:	0108303a 	nor	r4,zero,r4
   22b4c:	20000a26 	beq	r4,zero,22b78 <__subsf3+0x2fc>
   22b50:	01403fc4 	movi	r5,255
   22b54:	31402b26 	beq	r6,r5,22c04 <__subsf3+0x388>
   22b58:	014006c4 	movi	r5,27
   22b5c:	29006e16 	blt	r5,r4,22d18 <__subsf3+0x49c>
   22b60:	01400804 	movi	r5,32
   22b64:	290bc83a 	sub	r5,r5,r4
   22b68:	194a983a 	sll	r5,r3,r5
   22b6c:	1908d83a 	srl	r4,r3,r4
   22b70:	2806c03a 	cmpne	r3,r5,zero
   22b74:	20c6b03a 	or	r3,r4,r3
   22b78:	38c7c83a 	sub	r3,r7,r3
   22b7c:	3021883a 	mov	r16,r6
   22b80:	1023883a 	mov	r17,r2
   22b84:	003f7f06 	br	22984 <__alt_data_end+0xfffe3584>
   22b88:	903f831e 	bne	r18,zero,22998 <__alt_data_end+0xfffe3598>
   22b8c:	0005883a 	mov	r2,zero
   22b90:	0021883a 	mov	r16,zero
   22b94:	003f9a06 	br	22a00 <__alt_data_end+0xfffe3600>
   22b98:	01403fc4 	movi	r5,255
   22b9c:	31401926 	beq	r6,r5,22c04 <__subsf3+0x388>
   22ba0:	0109c83a 	sub	r4,zero,r4
   22ba4:	18c10034 	orhi	r3,r3,1024
   22ba8:	003feb06 	br	22b58 <__alt_data_end+0xfffe3758>
   22bac:	043fffc4 	movi	r16,-1
   22bb0:	000b883a 	mov	r5,zero
   22bb4:	003f5806 	br	22918 <__alt_data_end+0xfffe3518>
   22bb8:	8000481e 	bne	r16,zero,22cdc <__subsf3+0x460>
   22bbc:	18006226 	beq	r3,zero,22d48 <__subsf3+0x4cc>
   22bc0:	383f4726 	beq	r7,zero,228e0 <__alt_data_end+0xfffe34e0>
   22bc4:	19c7883a 	add	r3,r3,r7
   22bc8:	1881002c 	andhi	r2,r3,1024
   22bcc:	103f8326 	beq	r2,zero,229dc <__alt_data_end+0xfffe35dc>
   22bd0:	00bf0034 	movhi	r2,64512
   22bd4:	10bfffc4 	addi	r2,r2,-1
   22bd8:	2821883a 	mov	r16,r5
   22bdc:	1886703a 	and	r3,r3,r2
   22be0:	003f3f06 	br	228e0 <__alt_data_end+0xfffe34e0>
   22be4:	80001c1e 	bne	r16,zero,22c58 <__subsf3+0x3dc>
   22be8:	1800261e 	bne	r3,zero,22c84 <__subsf3+0x408>
   22bec:	38004c26 	beq	r7,zero,22d20 <__subsf3+0x4a4>
   22bf0:	3807883a 	mov	r3,r7
   22bf4:	1023883a 	mov	r17,r2
   22bf8:	003f3906 	br	228e0 <__alt_data_end+0xfffe34e0>
   22bfc:	01c00044 	movi	r7,1
   22c00:	003f9006 	br	22a44 <__alt_data_end+0xfffe3644>
   22c04:	3807883a 	mov	r3,r7
   22c08:	3021883a 	mov	r16,r6
   22c0c:	1023883a 	mov	r17,r2
   22c10:	003f3306 	br	228e0 <__alt_data_end+0xfffe34e0>
   22c14:	8000161e 	bne	r16,zero,22c70 <__subsf3+0x3f4>
   22c18:	18002d26 	beq	r3,zero,22cd0 <__subsf3+0x454>
   22c1c:	0108303a 	nor	r4,zero,r4
   22c20:	20000a26 	beq	r4,zero,22c4c <__subsf3+0x3d0>
   22c24:	01403fc4 	movi	r5,255
   22c28:	31402926 	beq	r6,r5,22cd0 <__subsf3+0x454>
   22c2c:	014006c4 	movi	r5,27
   22c30:	29004716 	blt	r5,r4,22d50 <__subsf3+0x4d4>
   22c34:	01400804 	movi	r5,32
   22c38:	290bc83a 	sub	r5,r5,r4
   22c3c:	194a983a 	sll	r5,r3,r5
   22c40:	1908d83a 	srl	r4,r3,r4
   22c44:	2806c03a 	cmpne	r3,r5,zero
   22c48:	20c6b03a 	or	r3,r4,r3
   22c4c:	19c7883a 	add	r3,r3,r7
   22c50:	3021883a 	mov	r16,r6
   22c54:	003f7c06 	br	22a48 <__alt_data_end+0xfffe3648>
   22c58:	1800111e 	bne	r3,zero,22ca0 <__subsf3+0x424>
   22c5c:	38003326 	beq	r7,zero,22d2c <__subsf3+0x4b0>
   22c60:	3807883a 	mov	r3,r7
   22c64:	1023883a 	mov	r17,r2
   22c68:	04003fc4 	movi	r16,255
   22c6c:	003f1c06 	br	228e0 <__alt_data_end+0xfffe34e0>
   22c70:	01403fc4 	movi	r5,255
   22c74:	31401626 	beq	r6,r5,22cd0 <__subsf3+0x454>
   22c78:	0109c83a 	sub	r4,zero,r4
   22c7c:	18c10034 	orhi	r3,r3,1024
   22c80:	003fea06 	br	22c2c <__alt_data_end+0xfffe382c>
   22c84:	383f1626 	beq	r7,zero,228e0 <__alt_data_end+0xfffe34e0>
   22c88:	19c9c83a 	sub	r4,r3,r7
   22c8c:	2141002c 	andhi	r5,r4,1024
   22c90:	283f5026 	beq	r5,zero,229d4 <__alt_data_end+0xfffe35d4>
   22c94:	38c7c83a 	sub	r3,r7,r3
   22c98:	1023883a 	mov	r17,r2
   22c9c:	003f1006 	br	228e0 <__alt_data_end+0xfffe34e0>
   22ca0:	38001b26 	beq	r7,zero,22d10 <__subsf3+0x494>
   22ca4:	1806d0fa 	srli	r3,r3,3
   22ca8:	1900102c 	andhi	r4,r3,64
   22cac:	20000526 	beq	r4,zero,22cc4 <__subsf3+0x448>
   22cb0:	380ed0fa 	srli	r7,r7,3
   22cb4:	3900102c 	andhi	r4,r7,64
   22cb8:	2000021e 	bne	r4,zero,22cc4 <__subsf3+0x448>
   22cbc:	3807883a 	mov	r3,r7
   22cc0:	1023883a 	mov	r17,r2
   22cc4:	180690fa 	slli	r3,r3,3
   22cc8:	04003fc4 	movi	r16,255
   22ccc:	003f0406 	br	228e0 <__alt_data_end+0xfffe34e0>
   22cd0:	3807883a 	mov	r3,r7
   22cd4:	3021883a 	mov	r16,r6
   22cd8:	003f0106 	br	228e0 <__alt_data_end+0xfffe34e0>
   22cdc:	18001726 	beq	r3,zero,22d3c <__subsf3+0x4c0>
   22ce0:	38000b26 	beq	r7,zero,22d10 <__subsf3+0x494>
   22ce4:	1806d0fa 	srli	r3,r3,3
   22ce8:	1900102c 	andhi	r4,r3,64
   22cec:	20000426 	beq	r4,zero,22d00 <__subsf3+0x484>
   22cf0:	380ed0fa 	srli	r7,r7,3
   22cf4:	3900102c 	andhi	r4,r7,64
   22cf8:	2000011e 	bne	r4,zero,22d00 <__subsf3+0x484>
   22cfc:	3807883a 	mov	r3,r7
   22d00:	180690fa 	slli	r3,r3,3
   22d04:	1023883a 	mov	r17,r2
   22d08:	04003fc4 	movi	r16,255
   22d0c:	003ef406 	br	228e0 <__alt_data_end+0xfffe34e0>
   22d10:	04003fc4 	movi	r16,255
   22d14:	003ef206 	br	228e0 <__alt_data_end+0xfffe34e0>
   22d18:	00c00044 	movi	r3,1
   22d1c:	003f9606 	br	22b78 <__alt_data_end+0xfffe3778>
   22d20:	000b883a 	mov	r5,zero
   22d24:	0005883a 	mov	r2,zero
   22d28:	003f3506 	br	22a00 <__alt_data_end+0xfffe3600>
   22d2c:	01402034 	movhi	r5,128
   22d30:	297fffc4 	addi	r5,r5,-1
   22d34:	0005883a 	mov	r2,zero
   22d38:	003f2f06 	br	229f8 <__alt_data_end+0xfffe35f8>
   22d3c:	3807883a 	mov	r3,r7
   22d40:	04003fc4 	movi	r16,255
   22d44:	003ee606 	br	228e0 <__alt_data_end+0xfffe34e0>
   22d48:	3807883a 	mov	r3,r7
   22d4c:	003ee406 	br	228e0 <__alt_data_end+0xfffe34e0>
   22d50:	00c00044 	movi	r3,1
   22d54:	003fbd06 	br	22c4c <__alt_data_end+0xfffe384c>
   22d58:	0005883a 	mov	r2,zero
   22d5c:	003f2806 	br	22a00 <__alt_data_end+0xfffe3600>

00022d60 <__fixsfsi>:
   22d60:	200ad5fa 	srli	r5,r4,23
   22d64:	00c02034 	movhi	r3,128
   22d68:	18ffffc4 	addi	r3,r3,-1
   22d6c:	29403fcc 	andi	r5,r5,255
   22d70:	00801f84 	movi	r2,126
   22d74:	1906703a 	and	r3,r3,r4
   22d78:	2008d7fa 	srli	r4,r4,31
   22d7c:	11400e0e 	bge	r2,r5,22db8 <__fixsfsi+0x58>
   22d80:	00802744 	movi	r2,157
   22d84:	11400816 	blt	r2,r5,22da8 <__fixsfsi+0x48>
   22d88:	00802544 	movi	r2,149
   22d8c:	18c02034 	orhi	r3,r3,128
   22d90:	11400b0e 	bge	r2,r5,22dc0 <__fixsfsi+0x60>
   22d94:	28bfda84 	addi	r2,r5,-150
   22d98:	1884983a 	sll	r2,r3,r2
   22d9c:	20000726 	beq	r4,zero,22dbc <__fixsfsi+0x5c>
   22da0:	0085c83a 	sub	r2,zero,r2
   22da4:	f800283a 	ret
   22da8:	00a00034 	movhi	r2,32768
   22dac:	10bfffc4 	addi	r2,r2,-1
   22db0:	2085883a 	add	r2,r4,r2
   22db4:	f800283a 	ret
   22db8:	0005883a 	mov	r2,zero
   22dbc:	f800283a 	ret
   22dc0:	00802584 	movi	r2,150
   22dc4:	1145c83a 	sub	r2,r2,r5
   22dc8:	1884d83a 	srl	r2,r3,r2
   22dcc:	003ff306 	br	22d9c <__alt_data_end+0xfffe399c>

00022dd0 <__floatunsisf>:
   22dd0:	defffe04 	addi	sp,sp,-8
   22dd4:	dfc00115 	stw	ra,4(sp)
   22dd8:	dc000015 	stw	r16,0(sp)
   22ddc:	20002c26 	beq	r4,zero,22e90 <__floatunsisf+0xc0>
   22de0:	2021883a 	mov	r16,r4
   22de4:	002564c0 	call	2564c <__clzsi2>
   22de8:	00c02784 	movi	r3,158
   22dec:	1887c83a 	sub	r3,r3,r2
   22df0:	01002584 	movi	r4,150
   22df4:	20c00f16 	blt	r4,r3,22e34 <__floatunsisf+0x64>
   22df8:	20c9c83a 	sub	r4,r4,r3
   22dfc:	8108983a 	sll	r4,r16,r4
   22e00:	00802034 	movhi	r2,128
   22e04:	10bfffc4 	addi	r2,r2,-1
   22e08:	2088703a 	and	r4,r4,r2
   22e0c:	18803fcc 	andi	r2,r3,255
   22e10:	100695fa 	slli	r3,r2,23
   22e14:	00802034 	movhi	r2,128
   22e18:	10bfffc4 	addi	r2,r2,-1
   22e1c:	2084703a 	and	r2,r4,r2
   22e20:	10c4b03a 	or	r2,r2,r3
   22e24:	dfc00117 	ldw	ra,4(sp)
   22e28:	dc000017 	ldw	r16,0(sp)
   22e2c:	dec00204 	addi	sp,sp,8
   22e30:	f800283a 	ret
   22e34:	01002644 	movi	r4,153
   22e38:	20c01816 	blt	r4,r3,22e9c <__floatunsisf+0xcc>
   22e3c:	20c9c83a 	sub	r4,r4,r3
   22e40:	8108983a 	sll	r4,r16,r4
   22e44:	017f0034 	movhi	r5,64512
   22e48:	297fffc4 	addi	r5,r5,-1
   22e4c:	218001cc 	andi	r6,r4,7
   22e50:	214a703a 	and	r5,r4,r5
   22e54:	30000426 	beq	r6,zero,22e68 <__floatunsisf+0x98>
   22e58:	210003cc 	andi	r4,r4,15
   22e5c:	01800104 	movi	r6,4
   22e60:	21800126 	beq	r4,r6,22e68 <__floatunsisf+0x98>
   22e64:	298b883a 	add	r5,r5,r6
   22e68:	2901002c 	andhi	r4,r5,1024
   22e6c:	20000526 	beq	r4,zero,22e84 <__floatunsisf+0xb4>
   22e70:	00c027c4 	movi	r3,159
   22e74:	1887c83a 	sub	r3,r3,r2
   22e78:	00bf0034 	movhi	r2,64512
   22e7c:	10bfffc4 	addi	r2,r2,-1
   22e80:	288a703a 	and	r5,r5,r2
   22e84:	280891ba 	slli	r4,r5,6
   22e88:	2008d27a 	srli	r4,r4,9
   22e8c:	003fdf06 	br	22e0c <__alt_data_end+0xfffe3a0c>
   22e90:	0007883a 	mov	r3,zero
   22e94:	0009883a 	mov	r4,zero
   22e98:	003fdc06 	br	22e0c <__alt_data_end+0xfffe3a0c>
   22e9c:	01402e44 	movi	r5,185
   22ea0:	28cbc83a 	sub	r5,r5,r3
   22ea4:	01000144 	movi	r4,5
   22ea8:	2089c83a 	sub	r4,r4,r2
   22eac:	814a983a 	sll	r5,r16,r5
   22eb0:	8108d83a 	srl	r4,r16,r4
   22eb4:	2820c03a 	cmpne	r16,r5,zero
   22eb8:	2408b03a 	or	r4,r4,r16
   22ebc:	003fe106 	br	22e44 <__alt_data_end+0xfffe3a44>

00022ec0 <__adddf3>:
   22ec0:	02c00434 	movhi	r11,16
   22ec4:	5affffc4 	addi	r11,r11,-1
   22ec8:	2806d7fa 	srli	r3,r5,31
   22ecc:	2ad4703a 	and	r10,r5,r11
   22ed0:	3ad2703a 	and	r9,r7,r11
   22ed4:	3804d53a 	srli	r2,r7,20
   22ed8:	3018d77a 	srli	r12,r6,29
   22edc:	280ad53a 	srli	r5,r5,20
   22ee0:	501490fa 	slli	r10,r10,3
   22ee4:	2010d77a 	srli	r8,r4,29
   22ee8:	481290fa 	slli	r9,r9,3
   22eec:	380ed7fa 	srli	r7,r7,31
   22ef0:	defffb04 	addi	sp,sp,-20
   22ef4:	dc800215 	stw	r18,8(sp)
   22ef8:	dc400115 	stw	r17,4(sp)
   22efc:	dc000015 	stw	r16,0(sp)
   22f00:	dfc00415 	stw	ra,16(sp)
   22f04:	dcc00315 	stw	r19,12(sp)
   22f08:	1c803fcc 	andi	r18,r3,255
   22f0c:	2c01ffcc 	andi	r16,r5,2047
   22f10:	5210b03a 	or	r8,r10,r8
   22f14:	202290fa 	slli	r17,r4,3
   22f18:	1081ffcc 	andi	r2,r2,2047
   22f1c:	4b12b03a 	or	r9,r9,r12
   22f20:	300c90fa 	slli	r6,r6,3
   22f24:	91c07526 	beq	r18,r7,230fc <__adddf3+0x23c>
   22f28:	8087c83a 	sub	r3,r16,r2
   22f2c:	00c0ab0e 	bge	zero,r3,231dc <__adddf3+0x31c>
   22f30:	10002a1e 	bne	r2,zero,22fdc <__adddf3+0x11c>
   22f34:	4984b03a 	or	r2,r9,r6
   22f38:	1000961e 	bne	r2,zero,23194 <__adddf3+0x2d4>
   22f3c:	888001cc 	andi	r2,r17,7
   22f40:	10000726 	beq	r2,zero,22f60 <__adddf3+0xa0>
   22f44:	888003cc 	andi	r2,r17,15
   22f48:	00c00104 	movi	r3,4
   22f4c:	10c00426 	beq	r2,r3,22f60 <__adddf3+0xa0>
   22f50:	88c7883a 	add	r3,r17,r3
   22f54:	1c63803a 	cmpltu	r17,r3,r17
   22f58:	4451883a 	add	r8,r8,r17
   22f5c:	1823883a 	mov	r17,r3
   22f60:	4080202c 	andhi	r2,r8,128
   22f64:	10005926 	beq	r2,zero,230cc <__adddf3+0x20c>
   22f68:	84000044 	addi	r16,r16,1
   22f6c:	0081ffc4 	movi	r2,2047
   22f70:	8080ba26 	beq	r16,r2,2325c <__adddf3+0x39c>
   22f74:	00bfe034 	movhi	r2,65408
   22f78:	10bfffc4 	addi	r2,r2,-1
   22f7c:	4090703a 	and	r8,r8,r2
   22f80:	4004977a 	slli	r2,r8,29
   22f84:	4010927a 	slli	r8,r8,9
   22f88:	8822d0fa 	srli	r17,r17,3
   22f8c:	8401ffcc 	andi	r16,r16,2047
   22f90:	4010d33a 	srli	r8,r8,12
   22f94:	9007883a 	mov	r3,r18
   22f98:	1444b03a 	or	r2,r2,r17
   22f9c:	8401ffcc 	andi	r16,r16,2047
   22fa0:	8020953a 	slli	r16,r16,20
   22fa4:	18c03fcc 	andi	r3,r3,255
   22fa8:	01000434 	movhi	r4,16
   22fac:	213fffc4 	addi	r4,r4,-1
   22fb0:	180697fa 	slli	r3,r3,31
   22fb4:	4110703a 	and	r8,r8,r4
   22fb8:	4410b03a 	or	r8,r8,r16
   22fbc:	40c6b03a 	or	r3,r8,r3
   22fc0:	dfc00417 	ldw	ra,16(sp)
   22fc4:	dcc00317 	ldw	r19,12(sp)
   22fc8:	dc800217 	ldw	r18,8(sp)
   22fcc:	dc400117 	ldw	r17,4(sp)
   22fd0:	dc000017 	ldw	r16,0(sp)
   22fd4:	dec00504 	addi	sp,sp,20
   22fd8:	f800283a 	ret
   22fdc:	0081ffc4 	movi	r2,2047
   22fe0:	80bfd626 	beq	r16,r2,22f3c <__alt_data_end+0xfffe3b3c>
   22fe4:	4a402034 	orhi	r9,r9,128
   22fe8:	00800e04 	movi	r2,56
   22fec:	10c09f16 	blt	r2,r3,2326c <__adddf3+0x3ac>
   22ff0:	008007c4 	movi	r2,31
   22ff4:	10c0c216 	blt	r2,r3,23300 <__adddf3+0x440>
   22ff8:	00800804 	movi	r2,32
   22ffc:	10c5c83a 	sub	r2,r2,r3
   23000:	488a983a 	sll	r5,r9,r2
   23004:	30c8d83a 	srl	r4,r6,r3
   23008:	3084983a 	sll	r2,r6,r2
   2300c:	48c6d83a 	srl	r3,r9,r3
   23010:	290cb03a 	or	r6,r5,r4
   23014:	1004c03a 	cmpne	r2,r2,zero
   23018:	308cb03a 	or	r6,r6,r2
   2301c:	898dc83a 	sub	r6,r17,r6
   23020:	89a3803a 	cmpltu	r17,r17,r6
   23024:	40d1c83a 	sub	r8,r8,r3
   23028:	4451c83a 	sub	r8,r8,r17
   2302c:	3023883a 	mov	r17,r6
   23030:	4080202c 	andhi	r2,r8,128
   23034:	10002326 	beq	r2,zero,230c4 <__adddf3+0x204>
   23038:	04c02034 	movhi	r19,128
   2303c:	9cffffc4 	addi	r19,r19,-1
   23040:	44e6703a 	and	r19,r8,r19
   23044:	98007626 	beq	r19,zero,23220 <__adddf3+0x360>
   23048:	9809883a 	mov	r4,r19
   2304c:	002564c0 	call	2564c <__clzsi2>
   23050:	10fffe04 	addi	r3,r2,-8
   23054:	010007c4 	movi	r4,31
   23058:	20c07716 	blt	r4,r3,23238 <__adddf3+0x378>
   2305c:	00800804 	movi	r2,32
   23060:	10c5c83a 	sub	r2,r2,r3
   23064:	8884d83a 	srl	r2,r17,r2
   23068:	98d0983a 	sll	r8,r19,r3
   2306c:	88e2983a 	sll	r17,r17,r3
   23070:	1204b03a 	or	r2,r2,r8
   23074:	1c007416 	blt	r3,r16,23248 <__adddf3+0x388>
   23078:	1c21c83a 	sub	r16,r3,r16
   2307c:	82000044 	addi	r8,r16,1
   23080:	00c007c4 	movi	r3,31
   23084:	1a009116 	blt	r3,r8,232cc <__adddf3+0x40c>
   23088:	00c00804 	movi	r3,32
   2308c:	1a07c83a 	sub	r3,r3,r8
   23090:	8a08d83a 	srl	r4,r17,r8
   23094:	88e2983a 	sll	r17,r17,r3
   23098:	10c6983a 	sll	r3,r2,r3
   2309c:	1210d83a 	srl	r8,r2,r8
   230a0:	8804c03a 	cmpne	r2,r17,zero
   230a4:	1906b03a 	or	r3,r3,r4
   230a8:	18a2b03a 	or	r17,r3,r2
   230ac:	0021883a 	mov	r16,zero
   230b0:	003fa206 	br	22f3c <__alt_data_end+0xfffe3b3c>
   230b4:	1890b03a 	or	r8,r3,r2
   230b8:	40017d26 	beq	r8,zero,236b0 <__adddf3+0x7f0>
   230bc:	1011883a 	mov	r8,r2
   230c0:	1823883a 	mov	r17,r3
   230c4:	888001cc 	andi	r2,r17,7
   230c8:	103f9e1e 	bne	r2,zero,22f44 <__alt_data_end+0xfffe3b44>
   230cc:	4004977a 	slli	r2,r8,29
   230d0:	8822d0fa 	srli	r17,r17,3
   230d4:	4010d0fa 	srli	r8,r8,3
   230d8:	9007883a 	mov	r3,r18
   230dc:	1444b03a 	or	r2,r2,r17
   230e0:	0101ffc4 	movi	r4,2047
   230e4:	81002426 	beq	r16,r4,23178 <__adddf3+0x2b8>
   230e8:	8120703a 	and	r16,r16,r4
   230ec:	01000434 	movhi	r4,16
   230f0:	213fffc4 	addi	r4,r4,-1
   230f4:	4110703a 	and	r8,r8,r4
   230f8:	003fa806 	br	22f9c <__alt_data_end+0xfffe3b9c>
   230fc:	8089c83a 	sub	r4,r16,r2
   23100:	01005e0e 	bge	zero,r4,2327c <__adddf3+0x3bc>
   23104:	10002b26 	beq	r2,zero,231b4 <__adddf3+0x2f4>
   23108:	0081ffc4 	movi	r2,2047
   2310c:	80bf8b26 	beq	r16,r2,22f3c <__alt_data_end+0xfffe3b3c>
   23110:	4a402034 	orhi	r9,r9,128
   23114:	00800e04 	movi	r2,56
   23118:	1100a40e 	bge	r2,r4,233ac <__adddf3+0x4ec>
   2311c:	498cb03a 	or	r6,r9,r6
   23120:	300ac03a 	cmpne	r5,r6,zero
   23124:	0013883a 	mov	r9,zero
   23128:	2c4b883a 	add	r5,r5,r17
   2312c:	2c63803a 	cmpltu	r17,r5,r17
   23130:	4a11883a 	add	r8,r9,r8
   23134:	8a11883a 	add	r8,r17,r8
   23138:	2823883a 	mov	r17,r5
   2313c:	4080202c 	andhi	r2,r8,128
   23140:	103fe026 	beq	r2,zero,230c4 <__alt_data_end+0xfffe3cc4>
   23144:	84000044 	addi	r16,r16,1
   23148:	0081ffc4 	movi	r2,2047
   2314c:	8080d226 	beq	r16,r2,23498 <__adddf3+0x5d8>
   23150:	00bfe034 	movhi	r2,65408
   23154:	10bfffc4 	addi	r2,r2,-1
   23158:	4090703a 	and	r8,r8,r2
   2315c:	880ad07a 	srli	r5,r17,1
   23160:	400897fa 	slli	r4,r8,31
   23164:	88c0004c 	andi	r3,r17,1
   23168:	28e2b03a 	or	r17,r5,r3
   2316c:	4010d07a 	srli	r8,r8,1
   23170:	2462b03a 	or	r17,r4,r17
   23174:	003f7106 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23178:	4088b03a 	or	r4,r8,r2
   2317c:	20014526 	beq	r4,zero,23694 <__adddf3+0x7d4>
   23180:	01000434 	movhi	r4,16
   23184:	42000234 	orhi	r8,r8,8
   23188:	213fffc4 	addi	r4,r4,-1
   2318c:	4110703a 	and	r8,r8,r4
   23190:	003f8206 	br	22f9c <__alt_data_end+0xfffe3b9c>
   23194:	18ffffc4 	addi	r3,r3,-1
   23198:	1800491e 	bne	r3,zero,232c0 <__adddf3+0x400>
   2319c:	898bc83a 	sub	r5,r17,r6
   231a0:	8963803a 	cmpltu	r17,r17,r5
   231a4:	4251c83a 	sub	r8,r8,r9
   231a8:	4451c83a 	sub	r8,r8,r17
   231ac:	2823883a 	mov	r17,r5
   231b0:	003f9f06 	br	23030 <__alt_data_end+0xfffe3c30>
   231b4:	4984b03a 	or	r2,r9,r6
   231b8:	103f6026 	beq	r2,zero,22f3c <__alt_data_end+0xfffe3b3c>
   231bc:	213fffc4 	addi	r4,r4,-1
   231c0:	2000931e 	bne	r4,zero,23410 <__adddf3+0x550>
   231c4:	898d883a 	add	r6,r17,r6
   231c8:	3463803a 	cmpltu	r17,r6,r17
   231cc:	4251883a 	add	r8,r8,r9
   231d0:	8a11883a 	add	r8,r17,r8
   231d4:	3023883a 	mov	r17,r6
   231d8:	003fd806 	br	2313c <__alt_data_end+0xfffe3d3c>
   231dc:	1800541e 	bne	r3,zero,23330 <__adddf3+0x470>
   231e0:	80800044 	addi	r2,r16,1
   231e4:	1081ffcc 	andi	r2,r2,2047
   231e8:	00c00044 	movi	r3,1
   231ec:	1880a00e 	bge	r3,r2,23470 <__adddf3+0x5b0>
   231f0:	8989c83a 	sub	r4,r17,r6
   231f4:	8905803a 	cmpltu	r2,r17,r4
   231f8:	4267c83a 	sub	r19,r8,r9
   231fc:	98a7c83a 	sub	r19,r19,r2
   23200:	9880202c 	andhi	r2,r19,128
   23204:	10006326 	beq	r2,zero,23394 <__adddf3+0x4d4>
   23208:	3463c83a 	sub	r17,r6,r17
   2320c:	4a07c83a 	sub	r3,r9,r8
   23210:	344d803a 	cmpltu	r6,r6,r17
   23214:	19a7c83a 	sub	r19,r3,r6
   23218:	3825883a 	mov	r18,r7
   2321c:	983f8a1e 	bne	r19,zero,23048 <__alt_data_end+0xfffe3c48>
   23220:	8809883a 	mov	r4,r17
   23224:	002564c0 	call	2564c <__clzsi2>
   23228:	10800804 	addi	r2,r2,32
   2322c:	10fffe04 	addi	r3,r2,-8
   23230:	010007c4 	movi	r4,31
   23234:	20ff890e 	bge	r4,r3,2305c <__alt_data_end+0xfffe3c5c>
   23238:	10bff604 	addi	r2,r2,-40
   2323c:	8884983a 	sll	r2,r17,r2
   23240:	0023883a 	mov	r17,zero
   23244:	1c3f8c0e 	bge	r3,r16,23078 <__alt_data_end+0xfffe3c78>
   23248:	023fe034 	movhi	r8,65408
   2324c:	423fffc4 	addi	r8,r8,-1
   23250:	80e1c83a 	sub	r16,r16,r3
   23254:	1210703a 	and	r8,r2,r8
   23258:	003f3806 	br	22f3c <__alt_data_end+0xfffe3b3c>
   2325c:	9007883a 	mov	r3,r18
   23260:	0011883a 	mov	r8,zero
   23264:	0005883a 	mov	r2,zero
   23268:	003f4c06 	br	22f9c <__alt_data_end+0xfffe3b9c>
   2326c:	498cb03a 	or	r6,r9,r6
   23270:	300cc03a 	cmpne	r6,r6,zero
   23274:	0007883a 	mov	r3,zero
   23278:	003f6806 	br	2301c <__alt_data_end+0xfffe3c1c>
   2327c:	20009c1e 	bne	r4,zero,234f0 <__adddf3+0x630>
   23280:	80800044 	addi	r2,r16,1
   23284:	1141ffcc 	andi	r5,r2,2047
   23288:	01000044 	movi	r4,1
   2328c:	2140670e 	bge	r4,r5,2342c <__adddf3+0x56c>
   23290:	0101ffc4 	movi	r4,2047
   23294:	11007f26 	beq	r2,r4,23494 <__adddf3+0x5d4>
   23298:	898d883a 	add	r6,r17,r6
   2329c:	4247883a 	add	r3,r8,r9
   232a0:	3451803a 	cmpltu	r8,r6,r17
   232a4:	40d1883a 	add	r8,r8,r3
   232a8:	402297fa 	slli	r17,r8,31
   232ac:	300cd07a 	srli	r6,r6,1
   232b0:	4010d07a 	srli	r8,r8,1
   232b4:	1021883a 	mov	r16,r2
   232b8:	89a2b03a 	or	r17,r17,r6
   232bc:	003f1f06 	br	22f3c <__alt_data_end+0xfffe3b3c>
   232c0:	0081ffc4 	movi	r2,2047
   232c4:	80bf481e 	bne	r16,r2,22fe8 <__alt_data_end+0xfffe3be8>
   232c8:	003f1c06 	br	22f3c <__alt_data_end+0xfffe3b3c>
   232cc:	843ff844 	addi	r16,r16,-31
   232d0:	01000804 	movi	r4,32
   232d4:	1406d83a 	srl	r3,r2,r16
   232d8:	41005026 	beq	r8,r4,2341c <__adddf3+0x55c>
   232dc:	01001004 	movi	r4,64
   232e0:	2211c83a 	sub	r8,r4,r8
   232e4:	1204983a 	sll	r2,r2,r8
   232e8:	88a2b03a 	or	r17,r17,r2
   232ec:	8822c03a 	cmpne	r17,r17,zero
   232f0:	1c62b03a 	or	r17,r3,r17
   232f4:	0011883a 	mov	r8,zero
   232f8:	0021883a 	mov	r16,zero
   232fc:	003f7106 	br	230c4 <__alt_data_end+0xfffe3cc4>
   23300:	193ff804 	addi	r4,r3,-32
   23304:	00800804 	movi	r2,32
   23308:	4908d83a 	srl	r4,r9,r4
   2330c:	18804526 	beq	r3,r2,23424 <__adddf3+0x564>
   23310:	00801004 	movi	r2,64
   23314:	10c5c83a 	sub	r2,r2,r3
   23318:	4886983a 	sll	r3,r9,r2
   2331c:	198cb03a 	or	r6,r3,r6
   23320:	300cc03a 	cmpne	r6,r6,zero
   23324:	218cb03a 	or	r6,r4,r6
   23328:	0007883a 	mov	r3,zero
   2332c:	003f3b06 	br	2301c <__alt_data_end+0xfffe3c1c>
   23330:	80002a26 	beq	r16,zero,233dc <__adddf3+0x51c>
   23334:	0101ffc4 	movi	r4,2047
   23338:	11006826 	beq	r2,r4,234dc <__adddf3+0x61c>
   2333c:	00c7c83a 	sub	r3,zero,r3
   23340:	42002034 	orhi	r8,r8,128
   23344:	01000e04 	movi	r4,56
   23348:	20c07c16 	blt	r4,r3,2353c <__adddf3+0x67c>
   2334c:	010007c4 	movi	r4,31
   23350:	20c0da16 	blt	r4,r3,236bc <__adddf3+0x7fc>
   23354:	01000804 	movi	r4,32
   23358:	20c9c83a 	sub	r4,r4,r3
   2335c:	4114983a 	sll	r10,r8,r4
   23360:	88cad83a 	srl	r5,r17,r3
   23364:	8908983a 	sll	r4,r17,r4
   23368:	40c6d83a 	srl	r3,r8,r3
   2336c:	5162b03a 	or	r17,r10,r5
   23370:	2008c03a 	cmpne	r4,r4,zero
   23374:	8922b03a 	or	r17,r17,r4
   23378:	3463c83a 	sub	r17,r6,r17
   2337c:	48c7c83a 	sub	r3,r9,r3
   23380:	344d803a 	cmpltu	r6,r6,r17
   23384:	1991c83a 	sub	r8,r3,r6
   23388:	1021883a 	mov	r16,r2
   2338c:	3825883a 	mov	r18,r7
   23390:	003f2706 	br	23030 <__alt_data_end+0xfffe3c30>
   23394:	24d0b03a 	or	r8,r4,r19
   23398:	40001b1e 	bne	r8,zero,23408 <__adddf3+0x548>
   2339c:	0005883a 	mov	r2,zero
   233a0:	0007883a 	mov	r3,zero
   233a4:	0021883a 	mov	r16,zero
   233a8:	003f4d06 	br	230e0 <__alt_data_end+0xfffe3ce0>
   233ac:	008007c4 	movi	r2,31
   233b0:	11003c16 	blt	r2,r4,234a4 <__adddf3+0x5e4>
   233b4:	00800804 	movi	r2,32
   233b8:	1105c83a 	sub	r2,r2,r4
   233bc:	488e983a 	sll	r7,r9,r2
   233c0:	310ad83a 	srl	r5,r6,r4
   233c4:	3084983a 	sll	r2,r6,r2
   233c8:	4912d83a 	srl	r9,r9,r4
   233cc:	394ab03a 	or	r5,r7,r5
   233d0:	1004c03a 	cmpne	r2,r2,zero
   233d4:	288ab03a 	or	r5,r5,r2
   233d8:	003f5306 	br	23128 <__alt_data_end+0xfffe3d28>
   233dc:	4448b03a 	or	r4,r8,r17
   233e0:	20003e26 	beq	r4,zero,234dc <__adddf3+0x61c>
   233e4:	00c6303a 	nor	r3,zero,r3
   233e8:	18003a1e 	bne	r3,zero,234d4 <__adddf3+0x614>
   233ec:	3463c83a 	sub	r17,r6,r17
   233f0:	4a07c83a 	sub	r3,r9,r8
   233f4:	344d803a 	cmpltu	r6,r6,r17
   233f8:	1991c83a 	sub	r8,r3,r6
   233fc:	1021883a 	mov	r16,r2
   23400:	3825883a 	mov	r18,r7
   23404:	003f0a06 	br	23030 <__alt_data_end+0xfffe3c30>
   23408:	2023883a 	mov	r17,r4
   2340c:	003f0d06 	br	23044 <__alt_data_end+0xfffe3c44>
   23410:	0081ffc4 	movi	r2,2047
   23414:	80bf3f1e 	bne	r16,r2,23114 <__alt_data_end+0xfffe3d14>
   23418:	003ec806 	br	22f3c <__alt_data_end+0xfffe3b3c>
   2341c:	0005883a 	mov	r2,zero
   23420:	003fb106 	br	232e8 <__alt_data_end+0xfffe3ee8>
   23424:	0007883a 	mov	r3,zero
   23428:	003fbc06 	br	2331c <__alt_data_end+0xfffe3f1c>
   2342c:	4444b03a 	or	r2,r8,r17
   23430:	8000871e 	bne	r16,zero,23650 <__adddf3+0x790>
   23434:	1000ba26 	beq	r2,zero,23720 <__adddf3+0x860>
   23438:	4984b03a 	or	r2,r9,r6
   2343c:	103ebf26 	beq	r2,zero,22f3c <__alt_data_end+0xfffe3b3c>
   23440:	8985883a 	add	r2,r17,r6
   23444:	4247883a 	add	r3,r8,r9
   23448:	1451803a 	cmpltu	r8,r2,r17
   2344c:	40d1883a 	add	r8,r8,r3
   23450:	40c0202c 	andhi	r3,r8,128
   23454:	1023883a 	mov	r17,r2
   23458:	183f1a26 	beq	r3,zero,230c4 <__alt_data_end+0xfffe3cc4>
   2345c:	00bfe034 	movhi	r2,65408
   23460:	10bfffc4 	addi	r2,r2,-1
   23464:	2021883a 	mov	r16,r4
   23468:	4090703a 	and	r8,r8,r2
   2346c:	003eb306 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23470:	4444b03a 	or	r2,r8,r17
   23474:	8000291e 	bne	r16,zero,2351c <__adddf3+0x65c>
   23478:	10004b1e 	bne	r2,zero,235a8 <__adddf3+0x6e8>
   2347c:	4990b03a 	or	r8,r9,r6
   23480:	40008b26 	beq	r8,zero,236b0 <__adddf3+0x7f0>
   23484:	4811883a 	mov	r8,r9
   23488:	3023883a 	mov	r17,r6
   2348c:	3825883a 	mov	r18,r7
   23490:	003eaa06 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23494:	1021883a 	mov	r16,r2
   23498:	0011883a 	mov	r8,zero
   2349c:	0005883a 	mov	r2,zero
   234a0:	003f0f06 	br	230e0 <__alt_data_end+0xfffe3ce0>
   234a4:	217ff804 	addi	r5,r4,-32
   234a8:	00800804 	movi	r2,32
   234ac:	494ad83a 	srl	r5,r9,r5
   234b0:	20807d26 	beq	r4,r2,236a8 <__adddf3+0x7e8>
   234b4:	00801004 	movi	r2,64
   234b8:	1109c83a 	sub	r4,r2,r4
   234bc:	4912983a 	sll	r9,r9,r4
   234c0:	498cb03a 	or	r6,r9,r6
   234c4:	300cc03a 	cmpne	r6,r6,zero
   234c8:	298ab03a 	or	r5,r5,r6
   234cc:	0013883a 	mov	r9,zero
   234d0:	003f1506 	br	23128 <__alt_data_end+0xfffe3d28>
   234d4:	0101ffc4 	movi	r4,2047
   234d8:	113f9a1e 	bne	r2,r4,23344 <__alt_data_end+0xfffe3f44>
   234dc:	4811883a 	mov	r8,r9
   234e0:	3023883a 	mov	r17,r6
   234e4:	1021883a 	mov	r16,r2
   234e8:	3825883a 	mov	r18,r7
   234ec:	003e9306 	br	22f3c <__alt_data_end+0xfffe3b3c>
   234f0:	8000161e 	bne	r16,zero,2354c <__adddf3+0x68c>
   234f4:	444ab03a 	or	r5,r8,r17
   234f8:	28005126 	beq	r5,zero,23640 <__adddf3+0x780>
   234fc:	0108303a 	nor	r4,zero,r4
   23500:	20004d1e 	bne	r4,zero,23638 <__adddf3+0x778>
   23504:	89a3883a 	add	r17,r17,r6
   23508:	4253883a 	add	r9,r8,r9
   2350c:	898d803a 	cmpltu	r6,r17,r6
   23510:	3251883a 	add	r8,r6,r9
   23514:	1021883a 	mov	r16,r2
   23518:	003f0806 	br	2313c <__alt_data_end+0xfffe3d3c>
   2351c:	1000301e 	bne	r2,zero,235e0 <__adddf3+0x720>
   23520:	4984b03a 	or	r2,r9,r6
   23524:	10007126 	beq	r2,zero,236ec <__adddf3+0x82c>
   23528:	4811883a 	mov	r8,r9
   2352c:	3023883a 	mov	r17,r6
   23530:	3825883a 	mov	r18,r7
   23534:	0401ffc4 	movi	r16,2047
   23538:	003e8006 	br	22f3c <__alt_data_end+0xfffe3b3c>
   2353c:	4462b03a 	or	r17,r8,r17
   23540:	8822c03a 	cmpne	r17,r17,zero
   23544:	0007883a 	mov	r3,zero
   23548:	003f8b06 	br	23378 <__alt_data_end+0xfffe3f78>
   2354c:	0141ffc4 	movi	r5,2047
   23550:	11403b26 	beq	r2,r5,23640 <__adddf3+0x780>
   23554:	0109c83a 	sub	r4,zero,r4
   23558:	42002034 	orhi	r8,r8,128
   2355c:	01400e04 	movi	r5,56
   23560:	29006716 	blt	r5,r4,23700 <__adddf3+0x840>
   23564:	014007c4 	movi	r5,31
   23568:	29007016 	blt	r5,r4,2372c <__adddf3+0x86c>
   2356c:	01400804 	movi	r5,32
   23570:	290bc83a 	sub	r5,r5,r4
   23574:	4154983a 	sll	r10,r8,r5
   23578:	890ed83a 	srl	r7,r17,r4
   2357c:	894a983a 	sll	r5,r17,r5
   23580:	4108d83a 	srl	r4,r8,r4
   23584:	51e2b03a 	or	r17,r10,r7
   23588:	280ac03a 	cmpne	r5,r5,zero
   2358c:	8962b03a 	or	r17,r17,r5
   23590:	89a3883a 	add	r17,r17,r6
   23594:	2253883a 	add	r9,r4,r9
   23598:	898d803a 	cmpltu	r6,r17,r6
   2359c:	3251883a 	add	r8,r6,r9
   235a0:	1021883a 	mov	r16,r2
   235a4:	003ee506 	br	2313c <__alt_data_end+0xfffe3d3c>
   235a8:	4984b03a 	or	r2,r9,r6
   235ac:	103e6326 	beq	r2,zero,22f3c <__alt_data_end+0xfffe3b3c>
   235b0:	8987c83a 	sub	r3,r17,r6
   235b4:	88c9803a 	cmpltu	r4,r17,r3
   235b8:	4245c83a 	sub	r2,r8,r9
   235bc:	1105c83a 	sub	r2,r2,r4
   235c0:	1100202c 	andhi	r4,r2,128
   235c4:	203ebb26 	beq	r4,zero,230b4 <__alt_data_end+0xfffe3cb4>
   235c8:	3463c83a 	sub	r17,r6,r17
   235cc:	4a07c83a 	sub	r3,r9,r8
   235d0:	344d803a 	cmpltu	r6,r6,r17
   235d4:	1991c83a 	sub	r8,r3,r6
   235d8:	3825883a 	mov	r18,r7
   235dc:	003e5706 	br	22f3c <__alt_data_end+0xfffe3b3c>
   235e0:	4984b03a 	or	r2,r9,r6
   235e4:	10002e26 	beq	r2,zero,236a0 <__adddf3+0x7e0>
   235e8:	4004d0fa 	srli	r2,r8,3
   235ec:	8822d0fa 	srli	r17,r17,3
   235f0:	4010977a 	slli	r8,r8,29
   235f4:	10c0022c 	andhi	r3,r2,8
   235f8:	4462b03a 	or	r17,r8,r17
   235fc:	18000826 	beq	r3,zero,23620 <__adddf3+0x760>
   23600:	4808d0fa 	srli	r4,r9,3
   23604:	20c0022c 	andhi	r3,r4,8
   23608:	1800051e 	bne	r3,zero,23620 <__adddf3+0x760>
   2360c:	300cd0fa 	srli	r6,r6,3
   23610:	4806977a 	slli	r3,r9,29
   23614:	2005883a 	mov	r2,r4
   23618:	3825883a 	mov	r18,r7
   2361c:	19a2b03a 	or	r17,r3,r6
   23620:	8810d77a 	srli	r8,r17,29
   23624:	100490fa 	slli	r2,r2,3
   23628:	882290fa 	slli	r17,r17,3
   2362c:	0401ffc4 	movi	r16,2047
   23630:	4090b03a 	or	r8,r8,r2
   23634:	003e4106 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23638:	0141ffc4 	movi	r5,2047
   2363c:	117fc71e 	bne	r2,r5,2355c <__alt_data_end+0xfffe415c>
   23640:	4811883a 	mov	r8,r9
   23644:	3023883a 	mov	r17,r6
   23648:	1021883a 	mov	r16,r2
   2364c:	003e3b06 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23650:	10002f26 	beq	r2,zero,23710 <__adddf3+0x850>
   23654:	4984b03a 	or	r2,r9,r6
   23658:	10001126 	beq	r2,zero,236a0 <__adddf3+0x7e0>
   2365c:	4004d0fa 	srli	r2,r8,3
   23660:	8822d0fa 	srli	r17,r17,3
   23664:	4010977a 	slli	r8,r8,29
   23668:	10c0022c 	andhi	r3,r2,8
   2366c:	4462b03a 	or	r17,r8,r17
   23670:	183feb26 	beq	r3,zero,23620 <__alt_data_end+0xfffe4220>
   23674:	4808d0fa 	srli	r4,r9,3
   23678:	20c0022c 	andhi	r3,r4,8
   2367c:	183fe81e 	bne	r3,zero,23620 <__alt_data_end+0xfffe4220>
   23680:	300cd0fa 	srli	r6,r6,3
   23684:	4806977a 	slli	r3,r9,29
   23688:	2005883a 	mov	r2,r4
   2368c:	19a2b03a 	or	r17,r3,r6
   23690:	003fe306 	br	23620 <__alt_data_end+0xfffe4220>
   23694:	0011883a 	mov	r8,zero
   23698:	0005883a 	mov	r2,zero
   2369c:	003e3f06 	br	22f9c <__alt_data_end+0xfffe3b9c>
   236a0:	0401ffc4 	movi	r16,2047
   236a4:	003e2506 	br	22f3c <__alt_data_end+0xfffe3b3c>
   236a8:	0013883a 	mov	r9,zero
   236ac:	003f8406 	br	234c0 <__alt_data_end+0xfffe40c0>
   236b0:	0005883a 	mov	r2,zero
   236b4:	0007883a 	mov	r3,zero
   236b8:	003e8906 	br	230e0 <__alt_data_end+0xfffe3ce0>
   236bc:	197ff804 	addi	r5,r3,-32
   236c0:	01000804 	movi	r4,32
   236c4:	414ad83a 	srl	r5,r8,r5
   236c8:	19002426 	beq	r3,r4,2375c <__adddf3+0x89c>
   236cc:	01001004 	movi	r4,64
   236d0:	20c7c83a 	sub	r3,r4,r3
   236d4:	40c6983a 	sll	r3,r8,r3
   236d8:	1c46b03a 	or	r3,r3,r17
   236dc:	1806c03a 	cmpne	r3,r3,zero
   236e0:	28e2b03a 	or	r17,r5,r3
   236e4:	0007883a 	mov	r3,zero
   236e8:	003f2306 	br	23378 <__alt_data_end+0xfffe3f78>
   236ec:	0007883a 	mov	r3,zero
   236f0:	5811883a 	mov	r8,r11
   236f4:	00bfffc4 	movi	r2,-1
   236f8:	0401ffc4 	movi	r16,2047
   236fc:	003e7806 	br	230e0 <__alt_data_end+0xfffe3ce0>
   23700:	4462b03a 	or	r17,r8,r17
   23704:	8822c03a 	cmpne	r17,r17,zero
   23708:	0009883a 	mov	r4,zero
   2370c:	003fa006 	br	23590 <__alt_data_end+0xfffe4190>
   23710:	4811883a 	mov	r8,r9
   23714:	3023883a 	mov	r17,r6
   23718:	0401ffc4 	movi	r16,2047
   2371c:	003e0706 	br	22f3c <__alt_data_end+0xfffe3b3c>
   23720:	4811883a 	mov	r8,r9
   23724:	3023883a 	mov	r17,r6
   23728:	003e0406 	br	22f3c <__alt_data_end+0xfffe3b3c>
   2372c:	21fff804 	addi	r7,r4,-32
   23730:	01400804 	movi	r5,32
   23734:	41ced83a 	srl	r7,r8,r7
   23738:	21400a26 	beq	r4,r5,23764 <__adddf3+0x8a4>
   2373c:	01401004 	movi	r5,64
   23740:	2909c83a 	sub	r4,r5,r4
   23744:	4108983a 	sll	r4,r8,r4
   23748:	2448b03a 	or	r4,r4,r17
   2374c:	2008c03a 	cmpne	r4,r4,zero
   23750:	3922b03a 	or	r17,r7,r4
   23754:	0009883a 	mov	r4,zero
   23758:	003f8d06 	br	23590 <__alt_data_end+0xfffe4190>
   2375c:	0007883a 	mov	r3,zero
   23760:	003fdd06 	br	236d8 <__alt_data_end+0xfffe42d8>
   23764:	0009883a 	mov	r4,zero
   23768:	003ff706 	br	23748 <__alt_data_end+0xfffe4348>

0002376c <__divdf3>:
   2376c:	defff204 	addi	sp,sp,-56
   23770:	dd400915 	stw	r21,36(sp)
   23774:	282ad53a 	srli	r21,r5,20
   23778:	dd000815 	stw	r20,32(sp)
   2377c:	2828d7fa 	srli	r20,r5,31
   23780:	dc000415 	stw	r16,16(sp)
   23784:	04000434 	movhi	r16,16
   23788:	df000c15 	stw	fp,48(sp)
   2378c:	843fffc4 	addi	r16,r16,-1
   23790:	dfc00d15 	stw	ra,52(sp)
   23794:	ddc00b15 	stw	r23,44(sp)
   23798:	dd800a15 	stw	r22,40(sp)
   2379c:	dcc00715 	stw	r19,28(sp)
   237a0:	dc800615 	stw	r18,24(sp)
   237a4:	dc400515 	stw	r17,20(sp)
   237a8:	ad41ffcc 	andi	r21,r21,2047
   237ac:	2c20703a 	and	r16,r5,r16
   237b0:	a7003fcc 	andi	fp,r20,255
   237b4:	a8006126 	beq	r21,zero,2393c <__divdf3+0x1d0>
   237b8:	0081ffc4 	movi	r2,2047
   237bc:	2025883a 	mov	r18,r4
   237c0:	a8803726 	beq	r21,r2,238a0 <__divdf3+0x134>
   237c4:	80800434 	orhi	r2,r16,16
   237c8:	100490fa 	slli	r2,r2,3
   237cc:	2020d77a 	srli	r16,r4,29
   237d0:	202490fa 	slli	r18,r4,3
   237d4:	ad7f0044 	addi	r21,r21,-1023
   237d8:	80a0b03a 	or	r16,r16,r2
   237dc:	0027883a 	mov	r19,zero
   237e0:	0013883a 	mov	r9,zero
   237e4:	3804d53a 	srli	r2,r7,20
   237e8:	382cd7fa 	srli	r22,r7,31
   237ec:	04400434 	movhi	r17,16
   237f0:	8c7fffc4 	addi	r17,r17,-1
   237f4:	1081ffcc 	andi	r2,r2,2047
   237f8:	3011883a 	mov	r8,r6
   237fc:	3c62703a 	and	r17,r7,r17
   23800:	b5c03fcc 	andi	r23,r22,255
   23804:	10006c26 	beq	r2,zero,239b8 <__divdf3+0x24c>
   23808:	00c1ffc4 	movi	r3,2047
   2380c:	10c06426 	beq	r2,r3,239a0 <__divdf3+0x234>
   23810:	88c00434 	orhi	r3,r17,16
   23814:	180690fa 	slli	r3,r3,3
   23818:	3022d77a 	srli	r17,r6,29
   2381c:	301090fa 	slli	r8,r6,3
   23820:	10bf0044 	addi	r2,r2,-1023
   23824:	88e2b03a 	or	r17,r17,r3
   23828:	000f883a 	mov	r7,zero
   2382c:	a58cf03a 	xor	r6,r20,r22
   23830:	3cc8b03a 	or	r4,r7,r19
   23834:	a8abc83a 	sub	r21,r21,r2
   23838:	008003c4 	movi	r2,15
   2383c:	3007883a 	mov	r3,r6
   23840:	34c03fcc 	andi	r19,r6,255
   23844:	11009036 	bltu	r2,r4,23a88 <__divdf3+0x31c>
   23848:	200890ba 	slli	r4,r4,2
   2384c:	008000b4 	movhi	r2,2
   23850:	108e1804 	addi	r2,r2,14432
   23854:	2089883a 	add	r4,r4,r2
   23858:	20800017 	ldw	r2,0(r4)
   2385c:	1000683a 	jmp	r2
   23860:	00023a88 	cmpgei	zero,zero,2282
   23864:	000238d8 	cmpnei	zero,zero,2275
   23868:	00023a78 	rdprs	zero,zero,2281
   2386c:	000238cc 	andi	zero,zero,2275
   23870:	00023a78 	rdprs	zero,zero,2281
   23874:	00023a4c 	andi	zero,zero,2281
   23878:	00023a78 	rdprs	zero,zero,2281
   2387c:	000238cc 	andi	zero,zero,2275
   23880:	000238d8 	cmpnei	zero,zero,2275
   23884:	000238d8 	cmpnei	zero,zero,2275
   23888:	00023a4c 	andi	zero,zero,2281
   2388c:	000238cc 	andi	zero,zero,2275
   23890:	000238bc 	xorhi	zero,zero,2274
   23894:	000238bc 	xorhi	zero,zero,2274
   23898:	000238bc 	xorhi	zero,zero,2274
   2389c:	00023d6c 	andhi	zero,zero,2293
   238a0:	2404b03a 	or	r2,r4,r16
   238a4:	1000661e 	bne	r2,zero,23a40 <__divdf3+0x2d4>
   238a8:	04c00204 	movi	r19,8
   238ac:	0021883a 	mov	r16,zero
   238b0:	0025883a 	mov	r18,zero
   238b4:	02400084 	movi	r9,2
   238b8:	003fca06 	br	237e4 <__alt_data_end+0xfffe43e4>
   238bc:	8023883a 	mov	r17,r16
   238c0:	9011883a 	mov	r8,r18
   238c4:	e02f883a 	mov	r23,fp
   238c8:	480f883a 	mov	r7,r9
   238cc:	00800084 	movi	r2,2
   238d0:	3881311e 	bne	r7,r2,23d98 <__divdf3+0x62c>
   238d4:	b827883a 	mov	r19,r23
   238d8:	98c0004c 	andi	r3,r19,1
   238dc:	0081ffc4 	movi	r2,2047
   238e0:	000b883a 	mov	r5,zero
   238e4:	0025883a 	mov	r18,zero
   238e8:	1004953a 	slli	r2,r2,20
   238ec:	18c03fcc 	andi	r3,r3,255
   238f0:	04400434 	movhi	r17,16
   238f4:	8c7fffc4 	addi	r17,r17,-1
   238f8:	180697fa 	slli	r3,r3,31
   238fc:	2c4a703a 	and	r5,r5,r17
   23900:	288ab03a 	or	r5,r5,r2
   23904:	28c6b03a 	or	r3,r5,r3
   23908:	9005883a 	mov	r2,r18
   2390c:	dfc00d17 	ldw	ra,52(sp)
   23910:	df000c17 	ldw	fp,48(sp)
   23914:	ddc00b17 	ldw	r23,44(sp)
   23918:	dd800a17 	ldw	r22,40(sp)
   2391c:	dd400917 	ldw	r21,36(sp)
   23920:	dd000817 	ldw	r20,32(sp)
   23924:	dcc00717 	ldw	r19,28(sp)
   23928:	dc800617 	ldw	r18,24(sp)
   2392c:	dc400517 	ldw	r17,20(sp)
   23930:	dc000417 	ldw	r16,16(sp)
   23934:	dec00e04 	addi	sp,sp,56
   23938:	f800283a 	ret
   2393c:	2404b03a 	or	r2,r4,r16
   23940:	2027883a 	mov	r19,r4
   23944:	10003926 	beq	r2,zero,23a2c <__divdf3+0x2c0>
   23948:	80012e26 	beq	r16,zero,23e04 <__divdf3+0x698>
   2394c:	8009883a 	mov	r4,r16
   23950:	d9800315 	stw	r6,12(sp)
   23954:	d9c00215 	stw	r7,8(sp)
   23958:	002564c0 	call	2564c <__clzsi2>
   2395c:	d9800317 	ldw	r6,12(sp)
   23960:	d9c00217 	ldw	r7,8(sp)
   23964:	113ffd44 	addi	r4,r2,-11
   23968:	00c00704 	movi	r3,28
   2396c:	19012116 	blt	r3,r4,23df4 <__divdf3+0x688>
   23970:	00c00744 	movi	r3,29
   23974:	147ffe04 	addi	r17,r2,-8
   23978:	1907c83a 	sub	r3,r3,r4
   2397c:	8460983a 	sll	r16,r16,r17
   23980:	98c6d83a 	srl	r3,r19,r3
   23984:	9c64983a 	sll	r18,r19,r17
   23988:	1c20b03a 	or	r16,r3,r16
   2398c:	1080fcc4 	addi	r2,r2,1011
   23990:	00abc83a 	sub	r21,zero,r2
   23994:	0027883a 	mov	r19,zero
   23998:	0013883a 	mov	r9,zero
   2399c:	003f9106 	br	237e4 <__alt_data_end+0xfffe43e4>
   239a0:	3446b03a 	or	r3,r6,r17
   239a4:	18001f1e 	bne	r3,zero,23a24 <__divdf3+0x2b8>
   239a8:	0023883a 	mov	r17,zero
   239ac:	0011883a 	mov	r8,zero
   239b0:	01c00084 	movi	r7,2
   239b4:	003f9d06 	br	2382c <__alt_data_end+0xfffe442c>
   239b8:	3446b03a 	or	r3,r6,r17
   239bc:	18001526 	beq	r3,zero,23a14 <__divdf3+0x2a8>
   239c0:	88011b26 	beq	r17,zero,23e30 <__divdf3+0x6c4>
   239c4:	8809883a 	mov	r4,r17
   239c8:	d9800315 	stw	r6,12(sp)
   239cc:	da400115 	stw	r9,4(sp)
   239d0:	002564c0 	call	2564c <__clzsi2>
   239d4:	d9800317 	ldw	r6,12(sp)
   239d8:	da400117 	ldw	r9,4(sp)
   239dc:	113ffd44 	addi	r4,r2,-11
   239e0:	00c00704 	movi	r3,28
   239e4:	19010e16 	blt	r3,r4,23e20 <__divdf3+0x6b4>
   239e8:	00c00744 	movi	r3,29
   239ec:	123ffe04 	addi	r8,r2,-8
   239f0:	1907c83a 	sub	r3,r3,r4
   239f4:	8a22983a 	sll	r17,r17,r8
   239f8:	30c6d83a 	srl	r3,r6,r3
   239fc:	3210983a 	sll	r8,r6,r8
   23a00:	1c62b03a 	or	r17,r3,r17
   23a04:	1080fcc4 	addi	r2,r2,1011
   23a08:	0085c83a 	sub	r2,zero,r2
   23a0c:	000f883a 	mov	r7,zero
   23a10:	003f8606 	br	2382c <__alt_data_end+0xfffe442c>
   23a14:	0023883a 	mov	r17,zero
   23a18:	0011883a 	mov	r8,zero
   23a1c:	01c00044 	movi	r7,1
   23a20:	003f8206 	br	2382c <__alt_data_end+0xfffe442c>
   23a24:	01c000c4 	movi	r7,3
   23a28:	003f8006 	br	2382c <__alt_data_end+0xfffe442c>
   23a2c:	04c00104 	movi	r19,4
   23a30:	0021883a 	mov	r16,zero
   23a34:	0025883a 	mov	r18,zero
   23a38:	02400044 	movi	r9,1
   23a3c:	003f6906 	br	237e4 <__alt_data_end+0xfffe43e4>
   23a40:	04c00304 	movi	r19,12
   23a44:	024000c4 	movi	r9,3
   23a48:	003f6606 	br	237e4 <__alt_data_end+0xfffe43e4>
   23a4c:	01400434 	movhi	r5,16
   23a50:	0007883a 	mov	r3,zero
   23a54:	297fffc4 	addi	r5,r5,-1
   23a58:	04bfffc4 	movi	r18,-1
   23a5c:	0081ffc4 	movi	r2,2047
   23a60:	003fa106 	br	238e8 <__alt_data_end+0xfffe44e8>
   23a64:	00c00044 	movi	r3,1
   23a68:	1887c83a 	sub	r3,r3,r2
   23a6c:	01000e04 	movi	r4,56
   23a70:	20c1210e 	bge	r4,r3,23ef8 <__divdf3+0x78c>
   23a74:	98c0004c 	andi	r3,r19,1
   23a78:	0005883a 	mov	r2,zero
   23a7c:	000b883a 	mov	r5,zero
   23a80:	0025883a 	mov	r18,zero
   23a84:	003f9806 	br	238e8 <__alt_data_end+0xfffe44e8>
   23a88:	8c00fd36 	bltu	r17,r16,23e80 <__divdf3+0x714>
   23a8c:	8440fb26 	beq	r16,r17,23e7c <__divdf3+0x710>
   23a90:	8007883a 	mov	r3,r16
   23a94:	ad7fffc4 	addi	r21,r21,-1
   23a98:	0021883a 	mov	r16,zero
   23a9c:	4004d63a 	srli	r2,r8,24
   23aa0:	8822923a 	slli	r17,r17,8
   23aa4:	1809883a 	mov	r4,r3
   23aa8:	402c923a 	slli	r22,r8,8
   23aac:	88b8b03a 	or	fp,r17,r2
   23ab0:	e028d43a 	srli	r20,fp,16
   23ab4:	d8c00015 	stw	r3,0(sp)
   23ab8:	e5ffffcc 	andi	r23,fp,65535
   23abc:	a00b883a 	mov	r5,r20
   23ac0:	0021abc0 	call	21abc <__udivsi3>
   23ac4:	d8c00017 	ldw	r3,0(sp)
   23ac8:	a00b883a 	mov	r5,r20
   23acc:	d8800315 	stw	r2,12(sp)
   23ad0:	1809883a 	mov	r4,r3
   23ad4:	0021b200 	call	21b20 <__umodsi3>
   23ad8:	d9800317 	ldw	r6,12(sp)
   23adc:	1006943a 	slli	r3,r2,16
   23ae0:	9004d43a 	srli	r2,r18,16
   23ae4:	b9a3383a 	mul	r17,r23,r6
   23ae8:	10c4b03a 	or	r2,r2,r3
   23aec:	1440062e 	bgeu	r2,r17,23b08 <__divdf3+0x39c>
   23af0:	1705883a 	add	r2,r2,fp
   23af4:	30ffffc4 	addi	r3,r6,-1
   23af8:	1700ee36 	bltu	r2,fp,23eb4 <__divdf3+0x748>
   23afc:	1440ed2e 	bgeu	r2,r17,23eb4 <__divdf3+0x748>
   23b00:	31bfff84 	addi	r6,r6,-2
   23b04:	1705883a 	add	r2,r2,fp
   23b08:	1463c83a 	sub	r17,r2,r17
   23b0c:	a00b883a 	mov	r5,r20
   23b10:	8809883a 	mov	r4,r17
   23b14:	d9800315 	stw	r6,12(sp)
   23b18:	0021abc0 	call	21abc <__udivsi3>
   23b1c:	a00b883a 	mov	r5,r20
   23b20:	8809883a 	mov	r4,r17
   23b24:	d8800215 	stw	r2,8(sp)
   23b28:	0021b200 	call	21b20 <__umodsi3>
   23b2c:	d9c00217 	ldw	r7,8(sp)
   23b30:	1004943a 	slli	r2,r2,16
   23b34:	94bfffcc 	andi	r18,r18,65535
   23b38:	b9d1383a 	mul	r8,r23,r7
   23b3c:	90a4b03a 	or	r18,r18,r2
   23b40:	d9800317 	ldw	r6,12(sp)
   23b44:	9200062e 	bgeu	r18,r8,23b60 <__divdf3+0x3f4>
   23b48:	9725883a 	add	r18,r18,fp
   23b4c:	38bfffc4 	addi	r2,r7,-1
   23b50:	9700d636 	bltu	r18,fp,23eac <__divdf3+0x740>
   23b54:	9200d52e 	bgeu	r18,r8,23eac <__divdf3+0x740>
   23b58:	39ffff84 	addi	r7,r7,-2
   23b5c:	9725883a 	add	r18,r18,fp
   23b60:	3004943a 	slli	r2,r6,16
   23b64:	b012d43a 	srli	r9,r22,16
   23b68:	b1bfffcc 	andi	r6,r22,65535
   23b6c:	11e2b03a 	or	r17,r2,r7
   23b70:	8806d43a 	srli	r3,r17,16
   23b74:	893fffcc 	andi	r4,r17,65535
   23b78:	218b383a 	mul	r5,r4,r6
   23b7c:	30c5383a 	mul	r2,r6,r3
   23b80:	2249383a 	mul	r4,r4,r9
   23b84:	280ed43a 	srli	r7,r5,16
   23b88:	9225c83a 	sub	r18,r18,r8
   23b8c:	2089883a 	add	r4,r4,r2
   23b90:	3909883a 	add	r4,r7,r4
   23b94:	1a47383a 	mul	r3,r3,r9
   23b98:	2080022e 	bgeu	r4,r2,23ba4 <__divdf3+0x438>
   23b9c:	00800074 	movhi	r2,1
   23ba0:	1887883a 	add	r3,r3,r2
   23ba4:	2004d43a 	srli	r2,r4,16
   23ba8:	2008943a 	slli	r4,r4,16
   23bac:	297fffcc 	andi	r5,r5,65535
   23bb0:	10c7883a 	add	r3,r2,r3
   23bb4:	2149883a 	add	r4,r4,r5
   23bb8:	90c0a536 	bltu	r18,r3,23e50 <__divdf3+0x6e4>
   23bbc:	90c0bf26 	beq	r18,r3,23ebc <__divdf3+0x750>
   23bc0:	90c7c83a 	sub	r3,r18,r3
   23bc4:	810fc83a 	sub	r7,r16,r4
   23bc8:	81e5803a 	cmpltu	r18,r16,r7
   23bcc:	1ca5c83a 	sub	r18,r3,r18
   23bd0:	e480c126 	beq	fp,r18,23ed8 <__divdf3+0x76c>
   23bd4:	a00b883a 	mov	r5,r20
   23bd8:	9009883a 	mov	r4,r18
   23bdc:	d9800315 	stw	r6,12(sp)
   23be0:	d9c00215 	stw	r7,8(sp)
   23be4:	da400115 	stw	r9,4(sp)
   23be8:	0021abc0 	call	21abc <__udivsi3>
   23bec:	a00b883a 	mov	r5,r20
   23bf0:	9009883a 	mov	r4,r18
   23bf4:	d8800015 	stw	r2,0(sp)
   23bf8:	0021b200 	call	21b20 <__umodsi3>
   23bfc:	d9c00217 	ldw	r7,8(sp)
   23c00:	da000017 	ldw	r8,0(sp)
   23c04:	1006943a 	slli	r3,r2,16
   23c08:	3804d43a 	srli	r2,r7,16
   23c0c:	ba21383a 	mul	r16,r23,r8
   23c10:	d9800317 	ldw	r6,12(sp)
   23c14:	10c4b03a 	or	r2,r2,r3
   23c18:	da400117 	ldw	r9,4(sp)
   23c1c:	1400062e 	bgeu	r2,r16,23c38 <__divdf3+0x4cc>
   23c20:	1705883a 	add	r2,r2,fp
   23c24:	40ffffc4 	addi	r3,r8,-1
   23c28:	1700ad36 	bltu	r2,fp,23ee0 <__divdf3+0x774>
   23c2c:	1400ac2e 	bgeu	r2,r16,23ee0 <__divdf3+0x774>
   23c30:	423fff84 	addi	r8,r8,-2
   23c34:	1705883a 	add	r2,r2,fp
   23c38:	1421c83a 	sub	r16,r2,r16
   23c3c:	a00b883a 	mov	r5,r20
   23c40:	8009883a 	mov	r4,r16
   23c44:	d9800315 	stw	r6,12(sp)
   23c48:	d9c00215 	stw	r7,8(sp)
   23c4c:	da000015 	stw	r8,0(sp)
   23c50:	da400115 	stw	r9,4(sp)
   23c54:	0021abc0 	call	21abc <__udivsi3>
   23c58:	8009883a 	mov	r4,r16
   23c5c:	a00b883a 	mov	r5,r20
   23c60:	1025883a 	mov	r18,r2
   23c64:	0021b200 	call	21b20 <__umodsi3>
   23c68:	d9c00217 	ldw	r7,8(sp)
   23c6c:	1004943a 	slli	r2,r2,16
   23c70:	bcaf383a 	mul	r23,r23,r18
   23c74:	393fffcc 	andi	r4,r7,65535
   23c78:	2088b03a 	or	r4,r4,r2
   23c7c:	d9800317 	ldw	r6,12(sp)
   23c80:	da000017 	ldw	r8,0(sp)
   23c84:	da400117 	ldw	r9,4(sp)
   23c88:	25c0062e 	bgeu	r4,r23,23ca4 <__divdf3+0x538>
   23c8c:	2709883a 	add	r4,r4,fp
   23c90:	90bfffc4 	addi	r2,r18,-1
   23c94:	27009436 	bltu	r4,fp,23ee8 <__divdf3+0x77c>
   23c98:	25c0932e 	bgeu	r4,r23,23ee8 <__divdf3+0x77c>
   23c9c:	94bfff84 	addi	r18,r18,-2
   23ca0:	2709883a 	add	r4,r4,fp
   23ca4:	4004943a 	slli	r2,r8,16
   23ca8:	25efc83a 	sub	r23,r4,r23
   23cac:	1490b03a 	or	r8,r2,r18
   23cb0:	4008d43a 	srli	r4,r8,16
   23cb4:	40ffffcc 	andi	r3,r8,65535
   23cb8:	30c5383a 	mul	r2,r6,r3
   23cbc:	1a47383a 	mul	r3,r3,r9
   23cc0:	310d383a 	mul	r6,r6,r4
   23cc4:	100ad43a 	srli	r5,r2,16
   23cc8:	4913383a 	mul	r9,r9,r4
   23ccc:	1987883a 	add	r3,r3,r6
   23cd0:	28c7883a 	add	r3,r5,r3
   23cd4:	1980022e 	bgeu	r3,r6,23ce0 <__divdf3+0x574>
   23cd8:	01000074 	movhi	r4,1
   23cdc:	4913883a 	add	r9,r9,r4
   23ce0:	1808d43a 	srli	r4,r3,16
   23ce4:	1806943a 	slli	r3,r3,16
   23ce8:	10bfffcc 	andi	r2,r2,65535
   23cec:	2253883a 	add	r9,r4,r9
   23cf0:	1887883a 	add	r3,r3,r2
   23cf4:	ba403836 	bltu	r23,r9,23dd8 <__divdf3+0x66c>
   23cf8:	ba403626 	beq	r23,r9,23dd4 <__divdf3+0x668>
   23cfc:	42000054 	ori	r8,r8,1
   23d00:	a880ffc4 	addi	r2,r21,1023
   23d04:	00bf570e 	bge	zero,r2,23a64 <__alt_data_end+0xfffe4664>
   23d08:	40c001cc 	andi	r3,r8,7
   23d0c:	18000726 	beq	r3,zero,23d2c <__divdf3+0x5c0>
   23d10:	40c003cc 	andi	r3,r8,15
   23d14:	01000104 	movi	r4,4
   23d18:	19000426 	beq	r3,r4,23d2c <__divdf3+0x5c0>
   23d1c:	4107883a 	add	r3,r8,r4
   23d20:	1a11803a 	cmpltu	r8,r3,r8
   23d24:	8a23883a 	add	r17,r17,r8
   23d28:	1811883a 	mov	r8,r3
   23d2c:	88c0402c 	andhi	r3,r17,256
   23d30:	18000426 	beq	r3,zero,23d44 <__divdf3+0x5d8>
   23d34:	00ffc034 	movhi	r3,65280
   23d38:	18ffffc4 	addi	r3,r3,-1
   23d3c:	a8810004 	addi	r2,r21,1024
   23d40:	88e2703a 	and	r17,r17,r3
   23d44:	00c1ff84 	movi	r3,2046
   23d48:	18bee316 	blt	r3,r2,238d8 <__alt_data_end+0xfffe44d8>
   23d4c:	8824977a 	slli	r18,r17,29
   23d50:	4010d0fa 	srli	r8,r8,3
   23d54:	8822927a 	slli	r17,r17,9
   23d58:	1081ffcc 	andi	r2,r2,2047
   23d5c:	9224b03a 	or	r18,r18,r8
   23d60:	880ad33a 	srli	r5,r17,12
   23d64:	98c0004c 	andi	r3,r19,1
   23d68:	003edf06 	br	238e8 <__alt_data_end+0xfffe44e8>
   23d6c:	8080022c 	andhi	r2,r16,8
   23d70:	10001226 	beq	r2,zero,23dbc <__divdf3+0x650>
   23d74:	8880022c 	andhi	r2,r17,8
   23d78:	1000101e 	bne	r2,zero,23dbc <__divdf3+0x650>
   23d7c:	00800434 	movhi	r2,16
   23d80:	89400234 	orhi	r5,r17,8
   23d84:	10bfffc4 	addi	r2,r2,-1
   23d88:	b007883a 	mov	r3,r22
   23d8c:	288a703a 	and	r5,r5,r2
   23d90:	4025883a 	mov	r18,r8
   23d94:	003f3106 	br	23a5c <__alt_data_end+0xfffe465c>
   23d98:	008000c4 	movi	r2,3
   23d9c:	3880a626 	beq	r7,r2,24038 <__divdf3+0x8cc>
   23da0:	00800044 	movi	r2,1
   23da4:	3880521e 	bne	r7,r2,23ef0 <__divdf3+0x784>
   23da8:	b807883a 	mov	r3,r23
   23dac:	0005883a 	mov	r2,zero
   23db0:	000b883a 	mov	r5,zero
   23db4:	0025883a 	mov	r18,zero
   23db8:	003ecb06 	br	238e8 <__alt_data_end+0xfffe44e8>
   23dbc:	00800434 	movhi	r2,16
   23dc0:	81400234 	orhi	r5,r16,8
   23dc4:	10bfffc4 	addi	r2,r2,-1
   23dc8:	a007883a 	mov	r3,r20
   23dcc:	288a703a 	and	r5,r5,r2
   23dd0:	003f2206 	br	23a5c <__alt_data_end+0xfffe465c>
   23dd4:	183fca26 	beq	r3,zero,23d00 <__alt_data_end+0xfffe4900>
   23dd8:	e5ef883a 	add	r23,fp,r23
   23ddc:	40bfffc4 	addi	r2,r8,-1
   23de0:	bf00392e 	bgeu	r23,fp,23ec8 <__divdf3+0x75c>
   23de4:	1011883a 	mov	r8,r2
   23de8:	ba7fc41e 	bne	r23,r9,23cfc <__alt_data_end+0xfffe48fc>
   23dec:	b0ffc31e 	bne	r22,r3,23cfc <__alt_data_end+0xfffe48fc>
   23df0:	003fc306 	br	23d00 <__alt_data_end+0xfffe4900>
   23df4:	143ff604 	addi	r16,r2,-40
   23df8:	9c20983a 	sll	r16,r19,r16
   23dfc:	0025883a 	mov	r18,zero
   23e00:	003ee206 	br	2398c <__alt_data_end+0xfffe458c>
   23e04:	d9800315 	stw	r6,12(sp)
   23e08:	d9c00215 	stw	r7,8(sp)
   23e0c:	002564c0 	call	2564c <__clzsi2>
   23e10:	10800804 	addi	r2,r2,32
   23e14:	d9c00217 	ldw	r7,8(sp)
   23e18:	d9800317 	ldw	r6,12(sp)
   23e1c:	003ed106 	br	23964 <__alt_data_end+0xfffe4564>
   23e20:	147ff604 	addi	r17,r2,-40
   23e24:	3462983a 	sll	r17,r6,r17
   23e28:	0011883a 	mov	r8,zero
   23e2c:	003ef506 	br	23a04 <__alt_data_end+0xfffe4604>
   23e30:	3009883a 	mov	r4,r6
   23e34:	d9800315 	stw	r6,12(sp)
   23e38:	da400115 	stw	r9,4(sp)
   23e3c:	002564c0 	call	2564c <__clzsi2>
   23e40:	10800804 	addi	r2,r2,32
   23e44:	da400117 	ldw	r9,4(sp)
   23e48:	d9800317 	ldw	r6,12(sp)
   23e4c:	003ee306 	br	239dc <__alt_data_end+0xfffe45dc>
   23e50:	85a1883a 	add	r16,r16,r22
   23e54:	8585803a 	cmpltu	r2,r16,r22
   23e58:	1705883a 	add	r2,r2,fp
   23e5c:	14a5883a 	add	r18,r2,r18
   23e60:	88bfffc4 	addi	r2,r17,-1
   23e64:	e4800c2e 	bgeu	fp,r18,23e98 <__divdf3+0x72c>
   23e68:	90c03e36 	bltu	r18,r3,23f64 <__divdf3+0x7f8>
   23e6c:	1c806926 	beq	r3,r18,24014 <__divdf3+0x8a8>
   23e70:	90c7c83a 	sub	r3,r18,r3
   23e74:	1023883a 	mov	r17,r2
   23e78:	003f5206 	br	23bc4 <__alt_data_end+0xfffe47c4>
   23e7c:	923f0436 	bltu	r18,r8,23a90 <__alt_data_end+0xfffe4690>
   23e80:	800897fa 	slli	r4,r16,31
   23e84:	9004d07a 	srli	r2,r18,1
   23e88:	8006d07a 	srli	r3,r16,1
   23e8c:	902097fa 	slli	r16,r18,31
   23e90:	20a4b03a 	or	r18,r4,r2
   23e94:	003f0106 	br	23a9c <__alt_data_end+0xfffe469c>
   23e98:	e4bff51e 	bne	fp,r18,23e70 <__alt_data_end+0xfffe4a70>
   23e9c:	85bff22e 	bgeu	r16,r22,23e68 <__alt_data_end+0xfffe4a68>
   23ea0:	e0c7c83a 	sub	r3,fp,r3
   23ea4:	1023883a 	mov	r17,r2
   23ea8:	003f4606 	br	23bc4 <__alt_data_end+0xfffe47c4>
   23eac:	100f883a 	mov	r7,r2
   23eb0:	003f2b06 	br	23b60 <__alt_data_end+0xfffe4760>
   23eb4:	180d883a 	mov	r6,r3
   23eb8:	003f1306 	br	23b08 <__alt_data_end+0xfffe4708>
   23ebc:	813fe436 	bltu	r16,r4,23e50 <__alt_data_end+0xfffe4a50>
   23ec0:	0007883a 	mov	r3,zero
   23ec4:	003f3f06 	br	23bc4 <__alt_data_end+0xfffe47c4>
   23ec8:	ba402c36 	bltu	r23,r9,23f7c <__divdf3+0x810>
   23ecc:	4dc05426 	beq	r9,r23,24020 <__divdf3+0x8b4>
   23ed0:	1011883a 	mov	r8,r2
   23ed4:	003f8906 	br	23cfc <__alt_data_end+0xfffe48fc>
   23ed8:	023fffc4 	movi	r8,-1
   23edc:	003f8806 	br	23d00 <__alt_data_end+0xfffe4900>
   23ee0:	1811883a 	mov	r8,r3
   23ee4:	003f5406 	br	23c38 <__alt_data_end+0xfffe4838>
   23ee8:	1025883a 	mov	r18,r2
   23eec:	003f6d06 	br	23ca4 <__alt_data_end+0xfffe48a4>
   23ef0:	b827883a 	mov	r19,r23
   23ef4:	003f8206 	br	23d00 <__alt_data_end+0xfffe4900>
   23ef8:	010007c4 	movi	r4,31
   23efc:	20c02616 	blt	r4,r3,23f98 <__divdf3+0x82c>
   23f00:	00800804 	movi	r2,32
   23f04:	10c5c83a 	sub	r2,r2,r3
   23f08:	888a983a 	sll	r5,r17,r2
   23f0c:	40c8d83a 	srl	r4,r8,r3
   23f10:	4084983a 	sll	r2,r8,r2
   23f14:	88e2d83a 	srl	r17,r17,r3
   23f18:	2906b03a 	or	r3,r5,r4
   23f1c:	1004c03a 	cmpne	r2,r2,zero
   23f20:	1886b03a 	or	r3,r3,r2
   23f24:	188001cc 	andi	r2,r3,7
   23f28:	10000726 	beq	r2,zero,23f48 <__divdf3+0x7dc>
   23f2c:	188003cc 	andi	r2,r3,15
   23f30:	01000104 	movi	r4,4
   23f34:	11000426 	beq	r2,r4,23f48 <__divdf3+0x7dc>
   23f38:	1805883a 	mov	r2,r3
   23f3c:	10c00104 	addi	r3,r2,4
   23f40:	1885803a 	cmpltu	r2,r3,r2
   23f44:	88a3883a 	add	r17,r17,r2
   23f48:	8880202c 	andhi	r2,r17,128
   23f4c:	10002726 	beq	r2,zero,23fec <__divdf3+0x880>
   23f50:	98c0004c 	andi	r3,r19,1
   23f54:	00800044 	movi	r2,1
   23f58:	000b883a 	mov	r5,zero
   23f5c:	0025883a 	mov	r18,zero
   23f60:	003e6106 	br	238e8 <__alt_data_end+0xfffe44e8>
   23f64:	85a1883a 	add	r16,r16,r22
   23f68:	8585803a 	cmpltu	r2,r16,r22
   23f6c:	1705883a 	add	r2,r2,fp
   23f70:	14a5883a 	add	r18,r2,r18
   23f74:	8c7fff84 	addi	r17,r17,-2
   23f78:	003f1106 	br	23bc0 <__alt_data_end+0xfffe47c0>
   23f7c:	b589883a 	add	r4,r22,r22
   23f80:	25ad803a 	cmpltu	r22,r4,r22
   23f84:	b739883a 	add	fp,r22,fp
   23f88:	40bfff84 	addi	r2,r8,-2
   23f8c:	bf2f883a 	add	r23,r23,fp
   23f90:	202d883a 	mov	r22,r4
   23f94:	003f9306 	br	23de4 <__alt_data_end+0xfffe49e4>
   23f98:	013ff844 	movi	r4,-31
   23f9c:	2085c83a 	sub	r2,r4,r2
   23fa0:	8888d83a 	srl	r4,r17,r2
   23fa4:	00800804 	movi	r2,32
   23fa8:	18802126 	beq	r3,r2,24030 <__divdf3+0x8c4>
   23fac:	00801004 	movi	r2,64
   23fb0:	10c5c83a 	sub	r2,r2,r3
   23fb4:	8884983a 	sll	r2,r17,r2
   23fb8:	1204b03a 	or	r2,r2,r8
   23fbc:	1004c03a 	cmpne	r2,r2,zero
   23fc0:	2084b03a 	or	r2,r4,r2
   23fc4:	144001cc 	andi	r17,r2,7
   23fc8:	88000d1e 	bne	r17,zero,24000 <__divdf3+0x894>
   23fcc:	000b883a 	mov	r5,zero
   23fd0:	1024d0fa 	srli	r18,r2,3
   23fd4:	98c0004c 	andi	r3,r19,1
   23fd8:	0005883a 	mov	r2,zero
   23fdc:	9464b03a 	or	r18,r18,r17
   23fe0:	003e4106 	br	238e8 <__alt_data_end+0xfffe44e8>
   23fe4:	1007883a 	mov	r3,r2
   23fe8:	0023883a 	mov	r17,zero
   23fec:	880a927a 	slli	r5,r17,9
   23ff0:	1805883a 	mov	r2,r3
   23ff4:	8822977a 	slli	r17,r17,29
   23ff8:	280ad33a 	srli	r5,r5,12
   23ffc:	003ff406 	br	23fd0 <__alt_data_end+0xfffe4bd0>
   24000:	10c003cc 	andi	r3,r2,15
   24004:	01000104 	movi	r4,4
   24008:	193ff626 	beq	r3,r4,23fe4 <__alt_data_end+0xfffe4be4>
   2400c:	0023883a 	mov	r17,zero
   24010:	003fca06 	br	23f3c <__alt_data_end+0xfffe4b3c>
   24014:	813fd336 	bltu	r16,r4,23f64 <__alt_data_end+0xfffe4b64>
   24018:	1023883a 	mov	r17,r2
   2401c:	003fa806 	br	23ec0 <__alt_data_end+0xfffe4ac0>
   24020:	b0ffd636 	bltu	r22,r3,23f7c <__alt_data_end+0xfffe4b7c>
   24024:	1011883a 	mov	r8,r2
   24028:	b0ff341e 	bne	r22,r3,23cfc <__alt_data_end+0xfffe48fc>
   2402c:	003f3406 	br	23d00 <__alt_data_end+0xfffe4900>
   24030:	0005883a 	mov	r2,zero
   24034:	003fe006 	br	23fb8 <__alt_data_end+0xfffe4bb8>
   24038:	00800434 	movhi	r2,16
   2403c:	89400234 	orhi	r5,r17,8
   24040:	10bfffc4 	addi	r2,r2,-1
   24044:	b807883a 	mov	r3,r23
   24048:	288a703a 	and	r5,r5,r2
   2404c:	4025883a 	mov	r18,r8
   24050:	003e8206 	br	23a5c <__alt_data_end+0xfffe465c>

00024054 <__gedf2>:
   24054:	2804d53a 	srli	r2,r5,20
   24058:	3806d53a 	srli	r3,r7,20
   2405c:	02000434 	movhi	r8,16
   24060:	423fffc4 	addi	r8,r8,-1
   24064:	1081ffcc 	andi	r2,r2,2047
   24068:	0241ffc4 	movi	r9,2047
   2406c:	2a14703a 	and	r10,r5,r8
   24070:	18c1ffcc 	andi	r3,r3,2047
   24074:	3a10703a 	and	r8,r7,r8
   24078:	280ad7fa 	srli	r5,r5,31
   2407c:	380ed7fa 	srli	r7,r7,31
   24080:	12401d26 	beq	r2,r9,240f8 <__gedf2+0xa4>
   24084:	0241ffc4 	movi	r9,2047
   24088:	1a401226 	beq	r3,r9,240d4 <__gedf2+0x80>
   2408c:	1000081e 	bne	r2,zero,240b0 <__gedf2+0x5c>
   24090:	2296b03a 	or	r11,r4,r10
   24094:	5813003a 	cmpeq	r9,r11,zero
   24098:	1800091e 	bne	r3,zero,240c0 <__gedf2+0x6c>
   2409c:	3218b03a 	or	r12,r6,r8
   240a0:	6000071e 	bne	r12,zero,240c0 <__gedf2+0x6c>
   240a4:	0005883a 	mov	r2,zero
   240a8:	5800101e 	bne	r11,zero,240ec <__gedf2+0x98>
   240ac:	f800283a 	ret
   240b0:	18000c1e 	bne	r3,zero,240e4 <__gedf2+0x90>
   240b4:	3212b03a 	or	r9,r6,r8
   240b8:	48000c26 	beq	r9,zero,240ec <__gedf2+0x98>
   240bc:	0013883a 	mov	r9,zero
   240c0:	39c03fcc 	andi	r7,r7,255
   240c4:	48000826 	beq	r9,zero,240e8 <__gedf2+0x94>
   240c8:	38000926 	beq	r7,zero,240f0 <__gedf2+0x9c>
   240cc:	00800044 	movi	r2,1
   240d0:	f800283a 	ret
   240d4:	3212b03a 	or	r9,r6,r8
   240d8:	483fec26 	beq	r9,zero,2408c <__alt_data_end+0xfffe4c8c>
   240dc:	00bfff84 	movi	r2,-2
   240e0:	f800283a 	ret
   240e4:	39c03fcc 	andi	r7,r7,255
   240e8:	29c00626 	beq	r5,r7,24104 <__gedf2+0xb0>
   240ec:	283ff726 	beq	r5,zero,240cc <__alt_data_end+0xfffe4ccc>
   240f0:	00bfffc4 	movi	r2,-1
   240f4:	f800283a 	ret
   240f8:	2292b03a 	or	r9,r4,r10
   240fc:	483fe126 	beq	r9,zero,24084 <__alt_data_end+0xfffe4c84>
   24100:	003ff606 	br	240dc <__alt_data_end+0xfffe4cdc>
   24104:	18bff916 	blt	r3,r2,240ec <__alt_data_end+0xfffe4cec>
   24108:	10c00316 	blt	r2,r3,24118 <__gedf2+0xc4>
   2410c:	42bff736 	bltu	r8,r10,240ec <__alt_data_end+0xfffe4cec>
   24110:	52000326 	beq	r10,r8,24120 <__gedf2+0xcc>
   24114:	5200042e 	bgeu	r10,r8,24128 <__gedf2+0xd4>
   24118:	283fec1e 	bne	r5,zero,240cc <__alt_data_end+0xfffe4ccc>
   2411c:	003ff406 	br	240f0 <__alt_data_end+0xfffe4cf0>
   24120:	313ff236 	bltu	r6,r4,240ec <__alt_data_end+0xfffe4cec>
   24124:	21bffc36 	bltu	r4,r6,24118 <__alt_data_end+0xfffe4d18>
   24128:	0005883a 	mov	r2,zero
   2412c:	f800283a 	ret

00024130 <__ledf2>:
   24130:	2804d53a 	srli	r2,r5,20
   24134:	3810d53a 	srli	r8,r7,20
   24138:	00c00434 	movhi	r3,16
   2413c:	18ffffc4 	addi	r3,r3,-1
   24140:	1081ffcc 	andi	r2,r2,2047
   24144:	0241ffc4 	movi	r9,2047
   24148:	28d4703a 	and	r10,r5,r3
   2414c:	4201ffcc 	andi	r8,r8,2047
   24150:	38c6703a 	and	r3,r7,r3
   24154:	280ad7fa 	srli	r5,r5,31
   24158:	380ed7fa 	srli	r7,r7,31
   2415c:	12401f26 	beq	r2,r9,241dc <__ledf2+0xac>
   24160:	0241ffc4 	movi	r9,2047
   24164:	42401426 	beq	r8,r9,241b8 <__ledf2+0x88>
   24168:	1000091e 	bne	r2,zero,24190 <__ledf2+0x60>
   2416c:	2296b03a 	or	r11,r4,r10
   24170:	5813003a 	cmpeq	r9,r11,zero
   24174:	29403fcc 	andi	r5,r5,255
   24178:	40000a1e 	bne	r8,zero,241a4 <__ledf2+0x74>
   2417c:	30d8b03a 	or	r12,r6,r3
   24180:	6000081e 	bne	r12,zero,241a4 <__ledf2+0x74>
   24184:	0005883a 	mov	r2,zero
   24188:	5800111e 	bne	r11,zero,241d0 <__ledf2+0xa0>
   2418c:	f800283a 	ret
   24190:	29403fcc 	andi	r5,r5,255
   24194:	40000c1e 	bne	r8,zero,241c8 <__ledf2+0x98>
   24198:	30d2b03a 	or	r9,r6,r3
   2419c:	48000c26 	beq	r9,zero,241d0 <__ledf2+0xa0>
   241a0:	0013883a 	mov	r9,zero
   241a4:	39c03fcc 	andi	r7,r7,255
   241a8:	48000826 	beq	r9,zero,241cc <__ledf2+0x9c>
   241ac:	38001126 	beq	r7,zero,241f4 <__ledf2+0xc4>
   241b0:	00800044 	movi	r2,1
   241b4:	f800283a 	ret
   241b8:	30d2b03a 	or	r9,r6,r3
   241bc:	483fea26 	beq	r9,zero,24168 <__alt_data_end+0xfffe4d68>
   241c0:	00800084 	movi	r2,2
   241c4:	f800283a 	ret
   241c8:	39c03fcc 	andi	r7,r7,255
   241cc:	39400726 	beq	r7,r5,241ec <__ledf2+0xbc>
   241d0:	2800081e 	bne	r5,zero,241f4 <__ledf2+0xc4>
   241d4:	00800044 	movi	r2,1
   241d8:	f800283a 	ret
   241dc:	2292b03a 	or	r9,r4,r10
   241e0:	483fdf26 	beq	r9,zero,24160 <__alt_data_end+0xfffe4d60>
   241e4:	00800084 	movi	r2,2
   241e8:	f800283a 	ret
   241ec:	4080030e 	bge	r8,r2,241fc <__ledf2+0xcc>
   241f0:	383fef26 	beq	r7,zero,241b0 <__alt_data_end+0xfffe4db0>
   241f4:	00bfffc4 	movi	r2,-1
   241f8:	f800283a 	ret
   241fc:	123feb16 	blt	r2,r8,241ac <__alt_data_end+0xfffe4dac>
   24200:	1abff336 	bltu	r3,r10,241d0 <__alt_data_end+0xfffe4dd0>
   24204:	50c00326 	beq	r10,r3,24214 <__ledf2+0xe4>
   24208:	50c0042e 	bgeu	r10,r3,2421c <__ledf2+0xec>
   2420c:	283fe81e 	bne	r5,zero,241b0 <__alt_data_end+0xfffe4db0>
   24210:	003ff806 	br	241f4 <__alt_data_end+0xfffe4df4>
   24214:	313fee36 	bltu	r6,r4,241d0 <__alt_data_end+0xfffe4dd0>
   24218:	21bffc36 	bltu	r4,r6,2420c <__alt_data_end+0xfffe4e0c>
   2421c:	0005883a 	mov	r2,zero
   24220:	f800283a 	ret

00024224 <__muldf3>:
   24224:	defff304 	addi	sp,sp,-52
   24228:	2804d53a 	srli	r2,r5,20
   2422c:	dd800915 	stw	r22,36(sp)
   24230:	282cd7fa 	srli	r22,r5,31
   24234:	dc000315 	stw	r16,12(sp)
   24238:	04000434 	movhi	r16,16
   2423c:	dd400815 	stw	r21,32(sp)
   24240:	dc800515 	stw	r18,20(sp)
   24244:	843fffc4 	addi	r16,r16,-1
   24248:	dfc00c15 	stw	ra,48(sp)
   2424c:	df000b15 	stw	fp,44(sp)
   24250:	ddc00a15 	stw	r23,40(sp)
   24254:	dd000715 	stw	r20,28(sp)
   24258:	dcc00615 	stw	r19,24(sp)
   2425c:	dc400415 	stw	r17,16(sp)
   24260:	1481ffcc 	andi	r18,r2,2047
   24264:	2c20703a 	and	r16,r5,r16
   24268:	b02b883a 	mov	r21,r22
   2426c:	b2403fcc 	andi	r9,r22,255
   24270:	90006026 	beq	r18,zero,243f4 <__muldf3+0x1d0>
   24274:	0081ffc4 	movi	r2,2047
   24278:	2029883a 	mov	r20,r4
   2427c:	90803626 	beq	r18,r2,24358 <__muldf3+0x134>
   24280:	80800434 	orhi	r2,r16,16
   24284:	100490fa 	slli	r2,r2,3
   24288:	2020d77a 	srli	r16,r4,29
   2428c:	202890fa 	slli	r20,r4,3
   24290:	94bf0044 	addi	r18,r18,-1023
   24294:	80a0b03a 	or	r16,r16,r2
   24298:	0027883a 	mov	r19,zero
   2429c:	0039883a 	mov	fp,zero
   242a0:	3804d53a 	srli	r2,r7,20
   242a4:	382ed7fa 	srli	r23,r7,31
   242a8:	04400434 	movhi	r17,16
   242ac:	8c7fffc4 	addi	r17,r17,-1
   242b0:	1081ffcc 	andi	r2,r2,2047
   242b4:	3011883a 	mov	r8,r6
   242b8:	3c62703a 	and	r17,r7,r17
   242bc:	ba803fcc 	andi	r10,r23,255
   242c0:	10006d26 	beq	r2,zero,24478 <__muldf3+0x254>
   242c4:	00c1ffc4 	movi	r3,2047
   242c8:	10c06526 	beq	r2,r3,24460 <__muldf3+0x23c>
   242cc:	88c00434 	orhi	r3,r17,16
   242d0:	180690fa 	slli	r3,r3,3
   242d4:	3022d77a 	srli	r17,r6,29
   242d8:	301090fa 	slli	r8,r6,3
   242dc:	10bf0044 	addi	r2,r2,-1023
   242e0:	88e2b03a 	or	r17,r17,r3
   242e4:	000b883a 	mov	r5,zero
   242e8:	9085883a 	add	r2,r18,r2
   242ec:	2cc8b03a 	or	r4,r5,r19
   242f0:	00c003c4 	movi	r3,15
   242f4:	bdacf03a 	xor	r22,r23,r22
   242f8:	12c00044 	addi	r11,r2,1
   242fc:	19009936 	bltu	r3,r4,24564 <__muldf3+0x340>
   24300:	200890ba 	slli	r4,r4,2
   24304:	00c000b4 	movhi	r3,2
   24308:	18d0c604 	addi	r3,r3,17176
   2430c:	20c9883a 	add	r4,r4,r3
   24310:	20c00017 	ldw	r3,0(r4)
   24314:	1800683a 	jmp	r3
   24318:	00024564 	muli	zero,zero,2325
   2431c:	00024378 	rdprs	zero,zero,2317
   24320:	00024378 	rdprs	zero,zero,2317
   24324:	00024374 	movhi	zero,2317
   24328:	00024540 	call	2454 <__alt_mem_SRAM1-0x1dbac>
   2432c:	00024540 	call	2454 <__alt_mem_SRAM1-0x1dbac>
   24330:	00024528 	cmpgeui	zero,zero,2324
   24334:	00024374 	movhi	zero,2317
   24338:	00024540 	call	2454 <__alt_mem_SRAM1-0x1dbac>
   2433c:	00024528 	cmpgeui	zero,zero,2324
   24340:	00024540 	call	2454 <__alt_mem_SRAM1-0x1dbac>
   24344:	00024374 	movhi	zero,2317
   24348:	00024550 	cmplti	zero,zero,2325
   2434c:	00024550 	cmplti	zero,zero,2325
   24350:	00024550 	cmplti	zero,zero,2325
   24354:	0002476c 	andhi	zero,zero,2333
   24358:	2404b03a 	or	r2,r4,r16
   2435c:	10006f1e 	bne	r2,zero,2451c <__muldf3+0x2f8>
   24360:	04c00204 	movi	r19,8
   24364:	0021883a 	mov	r16,zero
   24368:	0029883a 	mov	r20,zero
   2436c:	07000084 	movi	fp,2
   24370:	003fcb06 	br	242a0 <__alt_data_end+0xfffe4ea0>
   24374:	502d883a 	mov	r22,r10
   24378:	00800084 	movi	r2,2
   2437c:	28805726 	beq	r5,r2,244dc <__muldf3+0x2b8>
   24380:	008000c4 	movi	r2,3
   24384:	28816626 	beq	r5,r2,24920 <__muldf3+0x6fc>
   24388:	00800044 	movi	r2,1
   2438c:	2881411e 	bne	r5,r2,24894 <__muldf3+0x670>
   24390:	b02b883a 	mov	r21,r22
   24394:	0005883a 	mov	r2,zero
   24398:	000b883a 	mov	r5,zero
   2439c:	0029883a 	mov	r20,zero
   243a0:	1004953a 	slli	r2,r2,20
   243a4:	a8c03fcc 	andi	r3,r21,255
   243a8:	04400434 	movhi	r17,16
   243ac:	8c7fffc4 	addi	r17,r17,-1
   243b0:	180697fa 	slli	r3,r3,31
   243b4:	2c4a703a 	and	r5,r5,r17
   243b8:	288ab03a 	or	r5,r5,r2
   243bc:	28c6b03a 	or	r3,r5,r3
   243c0:	a005883a 	mov	r2,r20
   243c4:	dfc00c17 	ldw	ra,48(sp)
   243c8:	df000b17 	ldw	fp,44(sp)
   243cc:	ddc00a17 	ldw	r23,40(sp)
   243d0:	dd800917 	ldw	r22,36(sp)
   243d4:	dd400817 	ldw	r21,32(sp)
   243d8:	dd000717 	ldw	r20,28(sp)
   243dc:	dcc00617 	ldw	r19,24(sp)
   243e0:	dc800517 	ldw	r18,20(sp)
   243e4:	dc400417 	ldw	r17,16(sp)
   243e8:	dc000317 	ldw	r16,12(sp)
   243ec:	dec00d04 	addi	sp,sp,52
   243f0:	f800283a 	ret
   243f4:	2404b03a 	or	r2,r4,r16
   243f8:	2027883a 	mov	r19,r4
   243fc:	10004226 	beq	r2,zero,24508 <__muldf3+0x2e4>
   24400:	8000fc26 	beq	r16,zero,247f4 <__muldf3+0x5d0>
   24404:	8009883a 	mov	r4,r16
   24408:	d9800215 	stw	r6,8(sp)
   2440c:	d9c00015 	stw	r7,0(sp)
   24410:	da400115 	stw	r9,4(sp)
   24414:	002564c0 	call	2564c <__clzsi2>
   24418:	d9800217 	ldw	r6,8(sp)
   2441c:	d9c00017 	ldw	r7,0(sp)
   24420:	da400117 	ldw	r9,4(sp)
   24424:	113ffd44 	addi	r4,r2,-11
   24428:	00c00704 	movi	r3,28
   2442c:	1900ed16 	blt	r3,r4,247e4 <__muldf3+0x5c0>
   24430:	00c00744 	movi	r3,29
   24434:	147ffe04 	addi	r17,r2,-8
   24438:	1907c83a 	sub	r3,r3,r4
   2443c:	8460983a 	sll	r16,r16,r17
   24440:	98c6d83a 	srl	r3,r19,r3
   24444:	9c68983a 	sll	r20,r19,r17
   24448:	1c20b03a 	or	r16,r3,r16
   2444c:	1080fcc4 	addi	r2,r2,1011
   24450:	00a5c83a 	sub	r18,zero,r2
   24454:	0027883a 	mov	r19,zero
   24458:	0039883a 	mov	fp,zero
   2445c:	003f9006 	br	242a0 <__alt_data_end+0xfffe4ea0>
   24460:	3446b03a 	or	r3,r6,r17
   24464:	1800261e 	bne	r3,zero,24500 <__muldf3+0x2dc>
   24468:	0023883a 	mov	r17,zero
   2446c:	0011883a 	mov	r8,zero
   24470:	01400084 	movi	r5,2
   24474:	003f9c06 	br	242e8 <__alt_data_end+0xfffe4ee8>
   24478:	3446b03a 	or	r3,r6,r17
   2447c:	18001c26 	beq	r3,zero,244f0 <__muldf3+0x2cc>
   24480:	8800ce26 	beq	r17,zero,247bc <__muldf3+0x598>
   24484:	8809883a 	mov	r4,r17
   24488:	d9800215 	stw	r6,8(sp)
   2448c:	da400115 	stw	r9,4(sp)
   24490:	da800015 	stw	r10,0(sp)
   24494:	002564c0 	call	2564c <__clzsi2>
   24498:	d9800217 	ldw	r6,8(sp)
   2449c:	da400117 	ldw	r9,4(sp)
   244a0:	da800017 	ldw	r10,0(sp)
   244a4:	113ffd44 	addi	r4,r2,-11
   244a8:	00c00704 	movi	r3,28
   244ac:	1900bf16 	blt	r3,r4,247ac <__muldf3+0x588>
   244b0:	00c00744 	movi	r3,29
   244b4:	123ffe04 	addi	r8,r2,-8
   244b8:	1907c83a 	sub	r3,r3,r4
   244bc:	8a22983a 	sll	r17,r17,r8
   244c0:	30c6d83a 	srl	r3,r6,r3
   244c4:	3210983a 	sll	r8,r6,r8
   244c8:	1c62b03a 	or	r17,r3,r17
   244cc:	1080fcc4 	addi	r2,r2,1011
   244d0:	0085c83a 	sub	r2,zero,r2
   244d4:	000b883a 	mov	r5,zero
   244d8:	003f8306 	br	242e8 <__alt_data_end+0xfffe4ee8>
   244dc:	b02b883a 	mov	r21,r22
   244e0:	0081ffc4 	movi	r2,2047
   244e4:	000b883a 	mov	r5,zero
   244e8:	0029883a 	mov	r20,zero
   244ec:	003fac06 	br	243a0 <__alt_data_end+0xfffe4fa0>
   244f0:	0023883a 	mov	r17,zero
   244f4:	0011883a 	mov	r8,zero
   244f8:	01400044 	movi	r5,1
   244fc:	003f7a06 	br	242e8 <__alt_data_end+0xfffe4ee8>
   24500:	014000c4 	movi	r5,3
   24504:	003f7806 	br	242e8 <__alt_data_end+0xfffe4ee8>
   24508:	04c00104 	movi	r19,4
   2450c:	0021883a 	mov	r16,zero
   24510:	0029883a 	mov	r20,zero
   24514:	07000044 	movi	fp,1
   24518:	003f6106 	br	242a0 <__alt_data_end+0xfffe4ea0>
   2451c:	04c00304 	movi	r19,12
   24520:	070000c4 	movi	fp,3
   24524:	003f5e06 	br	242a0 <__alt_data_end+0xfffe4ea0>
   24528:	01400434 	movhi	r5,16
   2452c:	002b883a 	mov	r21,zero
   24530:	297fffc4 	addi	r5,r5,-1
   24534:	053fffc4 	movi	r20,-1
   24538:	0081ffc4 	movi	r2,2047
   2453c:	003f9806 	br	243a0 <__alt_data_end+0xfffe4fa0>
   24540:	8023883a 	mov	r17,r16
   24544:	a011883a 	mov	r8,r20
   24548:	e00b883a 	mov	r5,fp
   2454c:	003f8a06 	br	24378 <__alt_data_end+0xfffe4f78>
   24550:	8023883a 	mov	r17,r16
   24554:	a011883a 	mov	r8,r20
   24558:	482d883a 	mov	r22,r9
   2455c:	e00b883a 	mov	r5,fp
   24560:	003f8506 	br	24378 <__alt_data_end+0xfffe4f78>
   24564:	a00ad43a 	srli	r5,r20,16
   24568:	401ad43a 	srli	r13,r8,16
   2456c:	a53fffcc 	andi	r20,r20,65535
   24570:	423fffcc 	andi	r8,r8,65535
   24574:	4519383a 	mul	r12,r8,r20
   24578:	4147383a 	mul	r3,r8,r5
   2457c:	6d09383a 	mul	r4,r13,r20
   24580:	600cd43a 	srli	r6,r12,16
   24584:	2b5d383a 	mul	r14,r5,r13
   24588:	20c9883a 	add	r4,r4,r3
   2458c:	310d883a 	add	r6,r6,r4
   24590:	30c0022e 	bgeu	r6,r3,2459c <__muldf3+0x378>
   24594:	00c00074 	movhi	r3,1
   24598:	70dd883a 	add	r14,r14,r3
   2459c:	8826d43a 	srli	r19,r17,16
   245a0:	8bffffcc 	andi	r15,r17,65535
   245a4:	7d23383a 	mul	r17,r15,r20
   245a8:	7949383a 	mul	r4,r15,r5
   245ac:	9d29383a 	mul	r20,r19,r20
   245b0:	8814d43a 	srli	r10,r17,16
   245b4:	3012943a 	slli	r9,r6,16
   245b8:	a129883a 	add	r20,r20,r4
   245bc:	633fffcc 	andi	r12,r12,65535
   245c0:	5515883a 	add	r10,r10,r20
   245c4:	3006d43a 	srli	r3,r6,16
   245c8:	4b13883a 	add	r9,r9,r12
   245cc:	2ccb383a 	mul	r5,r5,r19
   245d0:	5100022e 	bgeu	r10,r4,245dc <__muldf3+0x3b8>
   245d4:	01000074 	movhi	r4,1
   245d8:	290b883a 	add	r5,r5,r4
   245dc:	802ad43a 	srli	r21,r16,16
   245e0:	843fffcc 	andi	r16,r16,65535
   245e4:	440d383a 	mul	r6,r8,r16
   245e8:	4565383a 	mul	r18,r8,r21
   245ec:	8349383a 	mul	r4,r16,r13
   245f0:	500e943a 	slli	r7,r10,16
   245f4:	3010d43a 	srli	r8,r6,16
   245f8:	5028d43a 	srli	r20,r10,16
   245fc:	2489883a 	add	r4,r4,r18
   24600:	8abfffcc 	andi	r10,r17,65535
   24604:	3a95883a 	add	r10,r7,r10
   24608:	4119883a 	add	r12,r8,r4
   2460c:	a169883a 	add	r20,r20,r5
   24610:	1a87883a 	add	r3,r3,r10
   24614:	6d5b383a 	mul	r13,r13,r21
   24618:	6480022e 	bgeu	r12,r18,24624 <__muldf3+0x400>
   2461c:	01000074 	movhi	r4,1
   24620:	691b883a 	add	r13,r13,r4
   24624:	7c25383a 	mul	r18,r15,r16
   24628:	7d4b383a 	mul	r5,r15,r21
   2462c:	84cf383a 	mul	r7,r16,r19
   24630:	901ed43a 	srli	r15,r18,16
   24634:	6008d43a 	srli	r4,r12,16
   24638:	6010943a 	slli	r8,r12,16
   2463c:	394f883a 	add	r7,r7,r5
   24640:	333fffcc 	andi	r12,r6,65535
   24644:	79df883a 	add	r15,r15,r7
   24648:	235b883a 	add	r13,r4,r13
   2464c:	9d63383a 	mul	r17,r19,r21
   24650:	4309883a 	add	r4,r8,r12
   24654:	7940022e 	bgeu	r15,r5,24660 <__muldf3+0x43c>
   24658:	01400074 	movhi	r5,1
   2465c:	8963883a 	add	r17,r17,r5
   24660:	780a943a 	slli	r5,r15,16
   24664:	91bfffcc 	andi	r6,r18,65535
   24668:	70c7883a 	add	r3,r14,r3
   2466c:	298d883a 	add	r6,r5,r6
   24670:	1a8f803a 	cmpltu	r7,r3,r10
   24674:	350b883a 	add	r5,r6,r20
   24678:	20c7883a 	add	r3,r4,r3
   2467c:	3955883a 	add	r10,r7,r5
   24680:	1909803a 	cmpltu	r4,r3,r4
   24684:	6a91883a 	add	r8,r13,r10
   24688:	780cd43a 	srli	r6,r15,16
   2468c:	2219883a 	add	r12,r4,r8
   24690:	2d0b803a 	cmpltu	r5,r5,r20
   24694:	51cf803a 	cmpltu	r7,r10,r7
   24698:	29ceb03a 	or	r7,r5,r7
   2469c:	4351803a 	cmpltu	r8,r8,r13
   246a0:	610b803a 	cmpltu	r5,r12,r4
   246a4:	4148b03a 	or	r4,r8,r5
   246a8:	398f883a 	add	r7,r7,r6
   246ac:	3909883a 	add	r4,r7,r4
   246b0:	1810927a 	slli	r8,r3,9
   246b4:	2449883a 	add	r4,r4,r17
   246b8:	2008927a 	slli	r4,r4,9
   246bc:	6022d5fa 	srli	r17,r12,23
   246c0:	1806d5fa 	srli	r3,r3,23
   246c4:	4252b03a 	or	r9,r8,r9
   246c8:	600a927a 	slli	r5,r12,9
   246cc:	4810c03a 	cmpne	r8,r9,zero
   246d0:	2462b03a 	or	r17,r4,r17
   246d4:	40c6b03a 	or	r3,r8,r3
   246d8:	8900402c 	andhi	r4,r17,256
   246dc:	1950b03a 	or	r8,r3,r5
   246e0:	20000726 	beq	r4,zero,24700 <__muldf3+0x4dc>
   246e4:	4006d07a 	srli	r3,r8,1
   246e8:	880497fa 	slli	r2,r17,31
   246ec:	4200004c 	andi	r8,r8,1
   246f0:	8822d07a 	srli	r17,r17,1
   246f4:	1a10b03a 	or	r8,r3,r8
   246f8:	1210b03a 	or	r8,r2,r8
   246fc:	5805883a 	mov	r2,r11
   24700:	1140ffc4 	addi	r5,r2,1023
   24704:	0140440e 	bge	zero,r5,24818 <__muldf3+0x5f4>
   24708:	40c001cc 	andi	r3,r8,7
   2470c:	18000726 	beq	r3,zero,2472c <__muldf3+0x508>
   24710:	40c003cc 	andi	r3,r8,15
   24714:	01000104 	movi	r4,4
   24718:	19000426 	beq	r3,r4,2472c <__muldf3+0x508>
   2471c:	4107883a 	add	r3,r8,r4
   24720:	1a11803a 	cmpltu	r8,r3,r8
   24724:	8a23883a 	add	r17,r17,r8
   24728:	1811883a 	mov	r8,r3
   2472c:	88c0402c 	andhi	r3,r17,256
   24730:	18000426 	beq	r3,zero,24744 <__muldf3+0x520>
   24734:	11410004 	addi	r5,r2,1024
   24738:	00bfc034 	movhi	r2,65280
   2473c:	10bfffc4 	addi	r2,r2,-1
   24740:	88a2703a 	and	r17,r17,r2
   24744:	0081ff84 	movi	r2,2046
   24748:	117f6416 	blt	r2,r5,244dc <__alt_data_end+0xfffe50dc>
   2474c:	8828977a 	slli	r20,r17,29
   24750:	4010d0fa 	srli	r8,r8,3
   24754:	8822927a 	slli	r17,r17,9
   24758:	2881ffcc 	andi	r2,r5,2047
   2475c:	a228b03a 	or	r20,r20,r8
   24760:	880ad33a 	srli	r5,r17,12
   24764:	b02b883a 	mov	r21,r22
   24768:	003f0d06 	br	243a0 <__alt_data_end+0xfffe4fa0>
   2476c:	8080022c 	andhi	r2,r16,8
   24770:	10000926 	beq	r2,zero,24798 <__muldf3+0x574>
   24774:	8880022c 	andhi	r2,r17,8
   24778:	1000071e 	bne	r2,zero,24798 <__muldf3+0x574>
   2477c:	00800434 	movhi	r2,16
   24780:	89400234 	orhi	r5,r17,8
   24784:	10bfffc4 	addi	r2,r2,-1
   24788:	b82b883a 	mov	r21,r23
   2478c:	288a703a 	and	r5,r5,r2
   24790:	4029883a 	mov	r20,r8
   24794:	003f6806 	br	24538 <__alt_data_end+0xfffe5138>
   24798:	00800434 	movhi	r2,16
   2479c:	81400234 	orhi	r5,r16,8
   247a0:	10bfffc4 	addi	r2,r2,-1
   247a4:	288a703a 	and	r5,r5,r2
   247a8:	003f6306 	br	24538 <__alt_data_end+0xfffe5138>
   247ac:	147ff604 	addi	r17,r2,-40
   247b0:	3462983a 	sll	r17,r6,r17
   247b4:	0011883a 	mov	r8,zero
   247b8:	003f4406 	br	244cc <__alt_data_end+0xfffe50cc>
   247bc:	3009883a 	mov	r4,r6
   247c0:	d9800215 	stw	r6,8(sp)
   247c4:	da400115 	stw	r9,4(sp)
   247c8:	da800015 	stw	r10,0(sp)
   247cc:	002564c0 	call	2564c <__clzsi2>
   247d0:	10800804 	addi	r2,r2,32
   247d4:	da800017 	ldw	r10,0(sp)
   247d8:	da400117 	ldw	r9,4(sp)
   247dc:	d9800217 	ldw	r6,8(sp)
   247e0:	003f3006 	br	244a4 <__alt_data_end+0xfffe50a4>
   247e4:	143ff604 	addi	r16,r2,-40
   247e8:	9c20983a 	sll	r16,r19,r16
   247ec:	0029883a 	mov	r20,zero
   247f0:	003f1606 	br	2444c <__alt_data_end+0xfffe504c>
   247f4:	d9800215 	stw	r6,8(sp)
   247f8:	d9c00015 	stw	r7,0(sp)
   247fc:	da400115 	stw	r9,4(sp)
   24800:	002564c0 	call	2564c <__clzsi2>
   24804:	10800804 	addi	r2,r2,32
   24808:	da400117 	ldw	r9,4(sp)
   2480c:	d9c00017 	ldw	r7,0(sp)
   24810:	d9800217 	ldw	r6,8(sp)
   24814:	003f0306 	br	24424 <__alt_data_end+0xfffe5024>
   24818:	00c00044 	movi	r3,1
   2481c:	1947c83a 	sub	r3,r3,r5
   24820:	00800e04 	movi	r2,56
   24824:	10feda16 	blt	r2,r3,24390 <__alt_data_end+0xfffe4f90>
   24828:	008007c4 	movi	r2,31
   2482c:	10c01b16 	blt	r2,r3,2489c <__muldf3+0x678>
   24830:	00800804 	movi	r2,32
   24834:	10c5c83a 	sub	r2,r2,r3
   24838:	888a983a 	sll	r5,r17,r2
   2483c:	40c8d83a 	srl	r4,r8,r3
   24840:	4084983a 	sll	r2,r8,r2
   24844:	88e2d83a 	srl	r17,r17,r3
   24848:	2906b03a 	or	r3,r5,r4
   2484c:	1004c03a 	cmpne	r2,r2,zero
   24850:	1886b03a 	or	r3,r3,r2
   24854:	188001cc 	andi	r2,r3,7
   24858:	10000726 	beq	r2,zero,24878 <__muldf3+0x654>
   2485c:	188003cc 	andi	r2,r3,15
   24860:	01000104 	movi	r4,4
   24864:	11000426 	beq	r2,r4,24878 <__muldf3+0x654>
   24868:	1805883a 	mov	r2,r3
   2486c:	10c00104 	addi	r3,r2,4
   24870:	1885803a 	cmpltu	r2,r3,r2
   24874:	88a3883a 	add	r17,r17,r2
   24878:	8880202c 	andhi	r2,r17,128
   2487c:	10001c26 	beq	r2,zero,248f0 <__muldf3+0x6cc>
   24880:	b02b883a 	mov	r21,r22
   24884:	00800044 	movi	r2,1
   24888:	000b883a 	mov	r5,zero
   2488c:	0029883a 	mov	r20,zero
   24890:	003ec306 	br	243a0 <__alt_data_end+0xfffe4fa0>
   24894:	5805883a 	mov	r2,r11
   24898:	003f9906 	br	24700 <__alt_data_end+0xfffe5300>
   2489c:	00bff844 	movi	r2,-31
   248a0:	1145c83a 	sub	r2,r2,r5
   248a4:	8888d83a 	srl	r4,r17,r2
   248a8:	00800804 	movi	r2,32
   248ac:	18801a26 	beq	r3,r2,24918 <__muldf3+0x6f4>
   248b0:	00801004 	movi	r2,64
   248b4:	10c5c83a 	sub	r2,r2,r3
   248b8:	8884983a 	sll	r2,r17,r2
   248bc:	1204b03a 	or	r2,r2,r8
   248c0:	1004c03a 	cmpne	r2,r2,zero
   248c4:	2084b03a 	or	r2,r4,r2
   248c8:	144001cc 	andi	r17,r2,7
   248cc:	88000d1e 	bne	r17,zero,24904 <__muldf3+0x6e0>
   248d0:	000b883a 	mov	r5,zero
   248d4:	1028d0fa 	srli	r20,r2,3
   248d8:	b02b883a 	mov	r21,r22
   248dc:	0005883a 	mov	r2,zero
   248e0:	a468b03a 	or	r20,r20,r17
   248e4:	003eae06 	br	243a0 <__alt_data_end+0xfffe4fa0>
   248e8:	1007883a 	mov	r3,r2
   248ec:	0023883a 	mov	r17,zero
   248f0:	880a927a 	slli	r5,r17,9
   248f4:	1805883a 	mov	r2,r3
   248f8:	8822977a 	slli	r17,r17,29
   248fc:	280ad33a 	srli	r5,r5,12
   24900:	003ff406 	br	248d4 <__alt_data_end+0xfffe54d4>
   24904:	10c003cc 	andi	r3,r2,15
   24908:	01000104 	movi	r4,4
   2490c:	193ff626 	beq	r3,r4,248e8 <__alt_data_end+0xfffe54e8>
   24910:	0023883a 	mov	r17,zero
   24914:	003fd506 	br	2486c <__alt_data_end+0xfffe546c>
   24918:	0005883a 	mov	r2,zero
   2491c:	003fe706 	br	248bc <__alt_data_end+0xfffe54bc>
   24920:	00800434 	movhi	r2,16
   24924:	89400234 	orhi	r5,r17,8
   24928:	10bfffc4 	addi	r2,r2,-1
   2492c:	b02b883a 	mov	r21,r22
   24930:	288a703a 	and	r5,r5,r2
   24934:	4029883a 	mov	r20,r8
   24938:	003eff06 	br	24538 <__alt_data_end+0xfffe5138>

0002493c <__subdf3>:
   2493c:	02000434 	movhi	r8,16
   24940:	423fffc4 	addi	r8,r8,-1
   24944:	defffb04 	addi	sp,sp,-20
   24948:	2a14703a 	and	r10,r5,r8
   2494c:	3812d53a 	srli	r9,r7,20
   24950:	3a10703a 	and	r8,r7,r8
   24954:	2006d77a 	srli	r3,r4,29
   24958:	3004d77a 	srli	r2,r6,29
   2495c:	dc000015 	stw	r16,0(sp)
   24960:	501490fa 	slli	r10,r10,3
   24964:	2820d53a 	srli	r16,r5,20
   24968:	401090fa 	slli	r8,r8,3
   2496c:	dc800215 	stw	r18,8(sp)
   24970:	dc400115 	stw	r17,4(sp)
   24974:	dfc00415 	stw	ra,16(sp)
   24978:	202290fa 	slli	r17,r4,3
   2497c:	dcc00315 	stw	r19,12(sp)
   24980:	4a41ffcc 	andi	r9,r9,2047
   24984:	0101ffc4 	movi	r4,2047
   24988:	2824d7fa 	srli	r18,r5,31
   2498c:	8401ffcc 	andi	r16,r16,2047
   24990:	50c6b03a 	or	r3,r10,r3
   24994:	380ed7fa 	srli	r7,r7,31
   24998:	408ab03a 	or	r5,r8,r2
   2499c:	300c90fa 	slli	r6,r6,3
   249a0:	49009626 	beq	r9,r4,24bfc <__subdf3+0x2c0>
   249a4:	39c0005c 	xori	r7,r7,1
   249a8:	8245c83a 	sub	r2,r16,r9
   249ac:	3c807426 	beq	r7,r18,24b80 <__subdf3+0x244>
   249b0:	0080af0e 	bge	zero,r2,24c70 <__subdf3+0x334>
   249b4:	48002a1e 	bne	r9,zero,24a60 <__subdf3+0x124>
   249b8:	2988b03a 	or	r4,r5,r6
   249bc:	20009a1e 	bne	r4,zero,24c28 <__subdf3+0x2ec>
   249c0:	888001cc 	andi	r2,r17,7
   249c4:	10000726 	beq	r2,zero,249e4 <__subdf3+0xa8>
   249c8:	888003cc 	andi	r2,r17,15
   249cc:	01000104 	movi	r4,4
   249d0:	11000426 	beq	r2,r4,249e4 <__subdf3+0xa8>
   249d4:	890b883a 	add	r5,r17,r4
   249d8:	2c63803a 	cmpltu	r17,r5,r17
   249dc:	1c47883a 	add	r3,r3,r17
   249e0:	2823883a 	mov	r17,r5
   249e4:	1880202c 	andhi	r2,r3,128
   249e8:	10005926 	beq	r2,zero,24b50 <__subdf3+0x214>
   249ec:	84000044 	addi	r16,r16,1
   249f0:	0081ffc4 	movi	r2,2047
   249f4:	8080be26 	beq	r16,r2,24cf0 <__subdf3+0x3b4>
   249f8:	017fe034 	movhi	r5,65408
   249fc:	297fffc4 	addi	r5,r5,-1
   24a00:	1946703a 	and	r3,r3,r5
   24a04:	1804977a 	slli	r2,r3,29
   24a08:	1806927a 	slli	r3,r3,9
   24a0c:	8822d0fa 	srli	r17,r17,3
   24a10:	8401ffcc 	andi	r16,r16,2047
   24a14:	180ad33a 	srli	r5,r3,12
   24a18:	9100004c 	andi	r4,r18,1
   24a1c:	1444b03a 	or	r2,r2,r17
   24a20:	80c1ffcc 	andi	r3,r16,2047
   24a24:	1820953a 	slli	r16,r3,20
   24a28:	20c03fcc 	andi	r3,r4,255
   24a2c:	180897fa 	slli	r4,r3,31
   24a30:	00c00434 	movhi	r3,16
   24a34:	18ffffc4 	addi	r3,r3,-1
   24a38:	28c6703a 	and	r3,r5,r3
   24a3c:	1c06b03a 	or	r3,r3,r16
   24a40:	1906b03a 	or	r3,r3,r4
   24a44:	dfc00417 	ldw	ra,16(sp)
   24a48:	dcc00317 	ldw	r19,12(sp)
   24a4c:	dc800217 	ldw	r18,8(sp)
   24a50:	dc400117 	ldw	r17,4(sp)
   24a54:	dc000017 	ldw	r16,0(sp)
   24a58:	dec00504 	addi	sp,sp,20
   24a5c:	f800283a 	ret
   24a60:	0101ffc4 	movi	r4,2047
   24a64:	813fd626 	beq	r16,r4,249c0 <__alt_data_end+0xfffe55c0>
   24a68:	29402034 	orhi	r5,r5,128
   24a6c:	01000e04 	movi	r4,56
   24a70:	2080a316 	blt	r4,r2,24d00 <__subdf3+0x3c4>
   24a74:	010007c4 	movi	r4,31
   24a78:	2080c616 	blt	r4,r2,24d94 <__subdf3+0x458>
   24a7c:	01000804 	movi	r4,32
   24a80:	2089c83a 	sub	r4,r4,r2
   24a84:	2910983a 	sll	r8,r5,r4
   24a88:	308ed83a 	srl	r7,r6,r2
   24a8c:	3108983a 	sll	r4,r6,r4
   24a90:	2884d83a 	srl	r2,r5,r2
   24a94:	41ccb03a 	or	r6,r8,r7
   24a98:	2008c03a 	cmpne	r4,r4,zero
   24a9c:	310cb03a 	or	r6,r6,r4
   24aa0:	898dc83a 	sub	r6,r17,r6
   24aa4:	89a3803a 	cmpltu	r17,r17,r6
   24aa8:	1887c83a 	sub	r3,r3,r2
   24aac:	1c47c83a 	sub	r3,r3,r17
   24ab0:	3023883a 	mov	r17,r6
   24ab4:	1880202c 	andhi	r2,r3,128
   24ab8:	10002326 	beq	r2,zero,24b48 <__subdf3+0x20c>
   24abc:	04c02034 	movhi	r19,128
   24ac0:	9cffffc4 	addi	r19,r19,-1
   24ac4:	1ce6703a 	and	r19,r3,r19
   24ac8:	98007a26 	beq	r19,zero,24cb4 <__subdf3+0x378>
   24acc:	9809883a 	mov	r4,r19
   24ad0:	002564c0 	call	2564c <__clzsi2>
   24ad4:	113ffe04 	addi	r4,r2,-8
   24ad8:	00c007c4 	movi	r3,31
   24adc:	19007b16 	blt	r3,r4,24ccc <__subdf3+0x390>
   24ae0:	00800804 	movi	r2,32
   24ae4:	1105c83a 	sub	r2,r2,r4
   24ae8:	8884d83a 	srl	r2,r17,r2
   24aec:	9906983a 	sll	r3,r19,r4
   24af0:	8922983a 	sll	r17,r17,r4
   24af4:	10c4b03a 	or	r2,r2,r3
   24af8:	24007816 	blt	r4,r16,24cdc <__subdf3+0x3a0>
   24afc:	2421c83a 	sub	r16,r4,r16
   24b00:	80c00044 	addi	r3,r16,1
   24b04:	010007c4 	movi	r4,31
   24b08:	20c09516 	blt	r4,r3,24d60 <__subdf3+0x424>
   24b0c:	01400804 	movi	r5,32
   24b10:	28cbc83a 	sub	r5,r5,r3
   24b14:	88c8d83a 	srl	r4,r17,r3
   24b18:	8962983a 	sll	r17,r17,r5
   24b1c:	114a983a 	sll	r5,r2,r5
   24b20:	10c6d83a 	srl	r3,r2,r3
   24b24:	8804c03a 	cmpne	r2,r17,zero
   24b28:	290ab03a 	or	r5,r5,r4
   24b2c:	28a2b03a 	or	r17,r5,r2
   24b30:	0021883a 	mov	r16,zero
   24b34:	003fa206 	br	249c0 <__alt_data_end+0xfffe55c0>
   24b38:	2090b03a 	or	r8,r4,r2
   24b3c:	40018e26 	beq	r8,zero,25178 <__subdf3+0x83c>
   24b40:	1007883a 	mov	r3,r2
   24b44:	2023883a 	mov	r17,r4
   24b48:	888001cc 	andi	r2,r17,7
   24b4c:	103f9e1e 	bne	r2,zero,249c8 <__alt_data_end+0xfffe55c8>
   24b50:	1804977a 	slli	r2,r3,29
   24b54:	8822d0fa 	srli	r17,r17,3
   24b58:	1810d0fa 	srli	r8,r3,3
   24b5c:	9100004c 	andi	r4,r18,1
   24b60:	1444b03a 	or	r2,r2,r17
   24b64:	00c1ffc4 	movi	r3,2047
   24b68:	80c02826 	beq	r16,r3,24c0c <__subdf3+0x2d0>
   24b6c:	01400434 	movhi	r5,16
   24b70:	297fffc4 	addi	r5,r5,-1
   24b74:	80e0703a 	and	r16,r16,r3
   24b78:	414a703a 	and	r5,r8,r5
   24b7c:	003fa806 	br	24a20 <__alt_data_end+0xfffe5620>
   24b80:	0080630e 	bge	zero,r2,24d10 <__subdf3+0x3d4>
   24b84:	48003026 	beq	r9,zero,24c48 <__subdf3+0x30c>
   24b88:	0101ffc4 	movi	r4,2047
   24b8c:	813f8c26 	beq	r16,r4,249c0 <__alt_data_end+0xfffe55c0>
   24b90:	29402034 	orhi	r5,r5,128
   24b94:	01000e04 	movi	r4,56
   24b98:	2080a90e 	bge	r4,r2,24e40 <__subdf3+0x504>
   24b9c:	298cb03a 	or	r6,r5,r6
   24ba0:	3012c03a 	cmpne	r9,r6,zero
   24ba4:	0005883a 	mov	r2,zero
   24ba8:	4c53883a 	add	r9,r9,r17
   24bac:	4c63803a 	cmpltu	r17,r9,r17
   24bb0:	10c7883a 	add	r3,r2,r3
   24bb4:	88c7883a 	add	r3,r17,r3
   24bb8:	4823883a 	mov	r17,r9
   24bbc:	1880202c 	andhi	r2,r3,128
   24bc0:	1000d026 	beq	r2,zero,24f04 <__subdf3+0x5c8>
   24bc4:	84000044 	addi	r16,r16,1
   24bc8:	0081ffc4 	movi	r2,2047
   24bcc:	8080fe26 	beq	r16,r2,24fc8 <__subdf3+0x68c>
   24bd0:	00bfe034 	movhi	r2,65408
   24bd4:	10bfffc4 	addi	r2,r2,-1
   24bd8:	1886703a 	and	r3,r3,r2
   24bdc:	880ad07a 	srli	r5,r17,1
   24be0:	180497fa 	slli	r2,r3,31
   24be4:	8900004c 	andi	r4,r17,1
   24be8:	2922b03a 	or	r17,r5,r4
   24bec:	1806d07a 	srli	r3,r3,1
   24bf0:	1462b03a 	or	r17,r2,r17
   24bf4:	3825883a 	mov	r18,r7
   24bf8:	003f7106 	br	249c0 <__alt_data_end+0xfffe55c0>
   24bfc:	2984b03a 	or	r2,r5,r6
   24c00:	103f6826 	beq	r2,zero,249a4 <__alt_data_end+0xfffe55a4>
   24c04:	39c03fcc 	andi	r7,r7,255
   24c08:	003f6706 	br	249a8 <__alt_data_end+0xfffe55a8>
   24c0c:	4086b03a 	or	r3,r8,r2
   24c10:	18015226 	beq	r3,zero,2515c <__subdf3+0x820>
   24c14:	00c00434 	movhi	r3,16
   24c18:	41400234 	orhi	r5,r8,8
   24c1c:	18ffffc4 	addi	r3,r3,-1
   24c20:	28ca703a 	and	r5,r5,r3
   24c24:	003f7e06 	br	24a20 <__alt_data_end+0xfffe5620>
   24c28:	10bfffc4 	addi	r2,r2,-1
   24c2c:	1000491e 	bne	r2,zero,24d54 <__subdf3+0x418>
   24c30:	898fc83a 	sub	r7,r17,r6
   24c34:	89e3803a 	cmpltu	r17,r17,r7
   24c38:	1947c83a 	sub	r3,r3,r5
   24c3c:	1c47c83a 	sub	r3,r3,r17
   24c40:	3823883a 	mov	r17,r7
   24c44:	003f9b06 	br	24ab4 <__alt_data_end+0xfffe56b4>
   24c48:	2988b03a 	or	r4,r5,r6
   24c4c:	203f5c26 	beq	r4,zero,249c0 <__alt_data_end+0xfffe55c0>
   24c50:	10bfffc4 	addi	r2,r2,-1
   24c54:	1000931e 	bne	r2,zero,24ea4 <__subdf3+0x568>
   24c58:	898d883a 	add	r6,r17,r6
   24c5c:	3463803a 	cmpltu	r17,r6,r17
   24c60:	1947883a 	add	r3,r3,r5
   24c64:	88c7883a 	add	r3,r17,r3
   24c68:	3023883a 	mov	r17,r6
   24c6c:	003fd306 	br	24bbc <__alt_data_end+0xfffe57bc>
   24c70:	1000541e 	bne	r2,zero,24dc4 <__subdf3+0x488>
   24c74:	80800044 	addi	r2,r16,1
   24c78:	1081ffcc 	andi	r2,r2,2047
   24c7c:	01000044 	movi	r4,1
   24c80:	2080a20e 	bge	r4,r2,24f0c <__subdf3+0x5d0>
   24c84:	8989c83a 	sub	r4,r17,r6
   24c88:	8905803a 	cmpltu	r2,r17,r4
   24c8c:	1967c83a 	sub	r19,r3,r5
   24c90:	98a7c83a 	sub	r19,r19,r2
   24c94:	9880202c 	andhi	r2,r19,128
   24c98:	10006326 	beq	r2,zero,24e28 <__subdf3+0x4ec>
   24c9c:	3463c83a 	sub	r17,r6,r17
   24ca0:	28c7c83a 	sub	r3,r5,r3
   24ca4:	344d803a 	cmpltu	r6,r6,r17
   24ca8:	19a7c83a 	sub	r19,r3,r6
   24cac:	3825883a 	mov	r18,r7
   24cb0:	983f861e 	bne	r19,zero,24acc <__alt_data_end+0xfffe56cc>
   24cb4:	8809883a 	mov	r4,r17
   24cb8:	002564c0 	call	2564c <__clzsi2>
   24cbc:	10800804 	addi	r2,r2,32
   24cc0:	113ffe04 	addi	r4,r2,-8
   24cc4:	00c007c4 	movi	r3,31
   24cc8:	193f850e 	bge	r3,r4,24ae0 <__alt_data_end+0xfffe56e0>
   24ccc:	10bff604 	addi	r2,r2,-40
   24cd0:	8884983a 	sll	r2,r17,r2
   24cd4:	0023883a 	mov	r17,zero
   24cd8:	243f880e 	bge	r4,r16,24afc <__alt_data_end+0xfffe56fc>
   24cdc:	00ffe034 	movhi	r3,65408
   24ce0:	18ffffc4 	addi	r3,r3,-1
   24ce4:	8121c83a 	sub	r16,r16,r4
   24ce8:	10c6703a 	and	r3,r2,r3
   24cec:	003f3406 	br	249c0 <__alt_data_end+0xfffe55c0>
   24cf0:	9100004c 	andi	r4,r18,1
   24cf4:	000b883a 	mov	r5,zero
   24cf8:	0005883a 	mov	r2,zero
   24cfc:	003f4806 	br	24a20 <__alt_data_end+0xfffe5620>
   24d00:	298cb03a 	or	r6,r5,r6
   24d04:	300cc03a 	cmpne	r6,r6,zero
   24d08:	0005883a 	mov	r2,zero
   24d0c:	003f6406 	br	24aa0 <__alt_data_end+0xfffe56a0>
   24d10:	10009a1e 	bne	r2,zero,24f7c <__subdf3+0x640>
   24d14:	82400044 	addi	r9,r16,1
   24d18:	4881ffcc 	andi	r2,r9,2047
   24d1c:	02800044 	movi	r10,1
   24d20:	5080670e 	bge	r10,r2,24ec0 <__subdf3+0x584>
   24d24:	0081ffc4 	movi	r2,2047
   24d28:	4880af26 	beq	r9,r2,24fe8 <__subdf3+0x6ac>
   24d2c:	898d883a 	add	r6,r17,r6
   24d30:	1945883a 	add	r2,r3,r5
   24d34:	3447803a 	cmpltu	r3,r6,r17
   24d38:	1887883a 	add	r3,r3,r2
   24d3c:	182297fa 	slli	r17,r3,31
   24d40:	300cd07a 	srli	r6,r6,1
   24d44:	1806d07a 	srli	r3,r3,1
   24d48:	4821883a 	mov	r16,r9
   24d4c:	89a2b03a 	or	r17,r17,r6
   24d50:	003f1b06 	br	249c0 <__alt_data_end+0xfffe55c0>
   24d54:	0101ffc4 	movi	r4,2047
   24d58:	813f441e 	bne	r16,r4,24a6c <__alt_data_end+0xfffe566c>
   24d5c:	003f1806 	br	249c0 <__alt_data_end+0xfffe55c0>
   24d60:	843ff844 	addi	r16,r16,-31
   24d64:	01400804 	movi	r5,32
   24d68:	1408d83a 	srl	r4,r2,r16
   24d6c:	19405026 	beq	r3,r5,24eb0 <__subdf3+0x574>
   24d70:	01401004 	movi	r5,64
   24d74:	28c7c83a 	sub	r3,r5,r3
   24d78:	10c4983a 	sll	r2,r2,r3
   24d7c:	88a2b03a 	or	r17,r17,r2
   24d80:	8822c03a 	cmpne	r17,r17,zero
   24d84:	2462b03a 	or	r17,r4,r17
   24d88:	0007883a 	mov	r3,zero
   24d8c:	0021883a 	mov	r16,zero
   24d90:	003f6d06 	br	24b48 <__alt_data_end+0xfffe5748>
   24d94:	11fff804 	addi	r7,r2,-32
   24d98:	01000804 	movi	r4,32
   24d9c:	29ced83a 	srl	r7,r5,r7
   24da0:	11004526 	beq	r2,r4,24eb8 <__subdf3+0x57c>
   24da4:	01001004 	movi	r4,64
   24da8:	2089c83a 	sub	r4,r4,r2
   24dac:	2904983a 	sll	r2,r5,r4
   24db0:	118cb03a 	or	r6,r2,r6
   24db4:	300cc03a 	cmpne	r6,r6,zero
   24db8:	398cb03a 	or	r6,r7,r6
   24dbc:	0005883a 	mov	r2,zero
   24dc0:	003f3706 	br	24aa0 <__alt_data_end+0xfffe56a0>
   24dc4:	80002a26 	beq	r16,zero,24e70 <__subdf3+0x534>
   24dc8:	0101ffc4 	movi	r4,2047
   24dcc:	49006626 	beq	r9,r4,24f68 <__subdf3+0x62c>
   24dd0:	0085c83a 	sub	r2,zero,r2
   24dd4:	18c02034 	orhi	r3,r3,128
   24dd8:	01000e04 	movi	r4,56
   24ddc:	20807e16 	blt	r4,r2,24fd8 <__subdf3+0x69c>
   24de0:	010007c4 	movi	r4,31
   24de4:	2080e716 	blt	r4,r2,25184 <__subdf3+0x848>
   24de8:	01000804 	movi	r4,32
   24dec:	2089c83a 	sub	r4,r4,r2
   24df0:	1914983a 	sll	r10,r3,r4
   24df4:	8890d83a 	srl	r8,r17,r2
   24df8:	8908983a 	sll	r4,r17,r4
   24dfc:	1884d83a 	srl	r2,r3,r2
   24e00:	5222b03a 	or	r17,r10,r8
   24e04:	2006c03a 	cmpne	r3,r4,zero
   24e08:	88e2b03a 	or	r17,r17,r3
   24e0c:	3463c83a 	sub	r17,r6,r17
   24e10:	2885c83a 	sub	r2,r5,r2
   24e14:	344d803a 	cmpltu	r6,r6,r17
   24e18:	1187c83a 	sub	r3,r2,r6
   24e1c:	4821883a 	mov	r16,r9
   24e20:	3825883a 	mov	r18,r7
   24e24:	003f2306 	br	24ab4 <__alt_data_end+0xfffe56b4>
   24e28:	24d0b03a 	or	r8,r4,r19
   24e2c:	40001b1e 	bne	r8,zero,24e9c <__subdf3+0x560>
   24e30:	0005883a 	mov	r2,zero
   24e34:	0009883a 	mov	r4,zero
   24e38:	0021883a 	mov	r16,zero
   24e3c:	003f4906 	br	24b64 <__alt_data_end+0xfffe5764>
   24e40:	010007c4 	movi	r4,31
   24e44:	20803a16 	blt	r4,r2,24f30 <__subdf3+0x5f4>
   24e48:	01000804 	movi	r4,32
   24e4c:	2089c83a 	sub	r4,r4,r2
   24e50:	2912983a 	sll	r9,r5,r4
   24e54:	3090d83a 	srl	r8,r6,r2
   24e58:	3108983a 	sll	r4,r6,r4
   24e5c:	2884d83a 	srl	r2,r5,r2
   24e60:	4a12b03a 	or	r9,r9,r8
   24e64:	2008c03a 	cmpne	r4,r4,zero
   24e68:	4912b03a 	or	r9,r9,r4
   24e6c:	003f4e06 	br	24ba8 <__alt_data_end+0xfffe57a8>
   24e70:	1c48b03a 	or	r4,r3,r17
   24e74:	20003c26 	beq	r4,zero,24f68 <__subdf3+0x62c>
   24e78:	0084303a 	nor	r2,zero,r2
   24e7c:	1000381e 	bne	r2,zero,24f60 <__subdf3+0x624>
   24e80:	3463c83a 	sub	r17,r6,r17
   24e84:	28c5c83a 	sub	r2,r5,r3
   24e88:	344d803a 	cmpltu	r6,r6,r17
   24e8c:	1187c83a 	sub	r3,r2,r6
   24e90:	4821883a 	mov	r16,r9
   24e94:	3825883a 	mov	r18,r7
   24e98:	003f0606 	br	24ab4 <__alt_data_end+0xfffe56b4>
   24e9c:	2023883a 	mov	r17,r4
   24ea0:	003f0906 	br	24ac8 <__alt_data_end+0xfffe56c8>
   24ea4:	0101ffc4 	movi	r4,2047
   24ea8:	813f3a1e 	bne	r16,r4,24b94 <__alt_data_end+0xfffe5794>
   24eac:	003ec406 	br	249c0 <__alt_data_end+0xfffe55c0>
   24eb0:	0005883a 	mov	r2,zero
   24eb4:	003fb106 	br	24d7c <__alt_data_end+0xfffe597c>
   24eb8:	0005883a 	mov	r2,zero
   24ebc:	003fbc06 	br	24db0 <__alt_data_end+0xfffe59b0>
   24ec0:	1c44b03a 	or	r2,r3,r17
   24ec4:	80008e1e 	bne	r16,zero,25100 <__subdf3+0x7c4>
   24ec8:	1000c826 	beq	r2,zero,251ec <__subdf3+0x8b0>
   24ecc:	2984b03a 	or	r2,r5,r6
   24ed0:	103ebb26 	beq	r2,zero,249c0 <__alt_data_end+0xfffe55c0>
   24ed4:	8989883a 	add	r4,r17,r6
   24ed8:	1945883a 	add	r2,r3,r5
   24edc:	2447803a 	cmpltu	r3,r4,r17
   24ee0:	1887883a 	add	r3,r3,r2
   24ee4:	1880202c 	andhi	r2,r3,128
   24ee8:	2023883a 	mov	r17,r4
   24eec:	103f1626 	beq	r2,zero,24b48 <__alt_data_end+0xfffe5748>
   24ef0:	00bfe034 	movhi	r2,65408
   24ef4:	10bfffc4 	addi	r2,r2,-1
   24ef8:	5021883a 	mov	r16,r10
   24efc:	1886703a 	and	r3,r3,r2
   24f00:	003eaf06 	br	249c0 <__alt_data_end+0xfffe55c0>
   24f04:	3825883a 	mov	r18,r7
   24f08:	003f0f06 	br	24b48 <__alt_data_end+0xfffe5748>
   24f0c:	1c44b03a 	or	r2,r3,r17
   24f10:	8000251e 	bne	r16,zero,24fa8 <__subdf3+0x66c>
   24f14:	1000661e 	bne	r2,zero,250b0 <__subdf3+0x774>
   24f18:	2990b03a 	or	r8,r5,r6
   24f1c:	40009626 	beq	r8,zero,25178 <__subdf3+0x83c>
   24f20:	2807883a 	mov	r3,r5
   24f24:	3023883a 	mov	r17,r6
   24f28:	3825883a 	mov	r18,r7
   24f2c:	003ea406 	br	249c0 <__alt_data_end+0xfffe55c0>
   24f30:	127ff804 	addi	r9,r2,-32
   24f34:	01000804 	movi	r4,32
   24f38:	2a52d83a 	srl	r9,r5,r9
   24f3c:	11008c26 	beq	r2,r4,25170 <__subdf3+0x834>
   24f40:	01001004 	movi	r4,64
   24f44:	2085c83a 	sub	r2,r4,r2
   24f48:	2884983a 	sll	r2,r5,r2
   24f4c:	118cb03a 	or	r6,r2,r6
   24f50:	300cc03a 	cmpne	r6,r6,zero
   24f54:	4992b03a 	or	r9,r9,r6
   24f58:	0005883a 	mov	r2,zero
   24f5c:	003f1206 	br	24ba8 <__alt_data_end+0xfffe57a8>
   24f60:	0101ffc4 	movi	r4,2047
   24f64:	493f9c1e 	bne	r9,r4,24dd8 <__alt_data_end+0xfffe59d8>
   24f68:	2807883a 	mov	r3,r5
   24f6c:	3023883a 	mov	r17,r6
   24f70:	4821883a 	mov	r16,r9
   24f74:	3825883a 	mov	r18,r7
   24f78:	003e9106 	br	249c0 <__alt_data_end+0xfffe55c0>
   24f7c:	80001f1e 	bne	r16,zero,24ffc <__subdf3+0x6c0>
   24f80:	1c48b03a 	or	r4,r3,r17
   24f84:	20005a26 	beq	r4,zero,250f0 <__subdf3+0x7b4>
   24f88:	0084303a 	nor	r2,zero,r2
   24f8c:	1000561e 	bne	r2,zero,250e8 <__subdf3+0x7ac>
   24f90:	89a3883a 	add	r17,r17,r6
   24f94:	1945883a 	add	r2,r3,r5
   24f98:	898d803a 	cmpltu	r6,r17,r6
   24f9c:	3087883a 	add	r3,r6,r2
   24fa0:	4821883a 	mov	r16,r9
   24fa4:	003f0506 	br	24bbc <__alt_data_end+0xfffe57bc>
   24fa8:	10002b1e 	bne	r2,zero,25058 <__subdf3+0x71c>
   24fac:	2984b03a 	or	r2,r5,r6
   24fb0:	10008026 	beq	r2,zero,251b4 <__subdf3+0x878>
   24fb4:	2807883a 	mov	r3,r5
   24fb8:	3023883a 	mov	r17,r6
   24fbc:	3825883a 	mov	r18,r7
   24fc0:	0401ffc4 	movi	r16,2047
   24fc4:	003e7e06 	br	249c0 <__alt_data_end+0xfffe55c0>
   24fc8:	3809883a 	mov	r4,r7
   24fcc:	0011883a 	mov	r8,zero
   24fd0:	0005883a 	mov	r2,zero
   24fd4:	003ee306 	br	24b64 <__alt_data_end+0xfffe5764>
   24fd8:	1c62b03a 	or	r17,r3,r17
   24fdc:	8822c03a 	cmpne	r17,r17,zero
   24fe0:	0005883a 	mov	r2,zero
   24fe4:	003f8906 	br	24e0c <__alt_data_end+0xfffe5a0c>
   24fe8:	3809883a 	mov	r4,r7
   24fec:	4821883a 	mov	r16,r9
   24ff0:	0011883a 	mov	r8,zero
   24ff4:	0005883a 	mov	r2,zero
   24ff8:	003eda06 	br	24b64 <__alt_data_end+0xfffe5764>
   24ffc:	0101ffc4 	movi	r4,2047
   25000:	49003b26 	beq	r9,r4,250f0 <__subdf3+0x7b4>
   25004:	0085c83a 	sub	r2,zero,r2
   25008:	18c02034 	orhi	r3,r3,128
   2500c:	01000e04 	movi	r4,56
   25010:	20806e16 	blt	r4,r2,251cc <__subdf3+0x890>
   25014:	010007c4 	movi	r4,31
   25018:	20807716 	blt	r4,r2,251f8 <__subdf3+0x8bc>
   2501c:	01000804 	movi	r4,32
   25020:	2089c83a 	sub	r4,r4,r2
   25024:	1914983a 	sll	r10,r3,r4
   25028:	8890d83a 	srl	r8,r17,r2
   2502c:	8908983a 	sll	r4,r17,r4
   25030:	1884d83a 	srl	r2,r3,r2
   25034:	5222b03a 	or	r17,r10,r8
   25038:	2006c03a 	cmpne	r3,r4,zero
   2503c:	88e2b03a 	or	r17,r17,r3
   25040:	89a3883a 	add	r17,r17,r6
   25044:	1145883a 	add	r2,r2,r5
   25048:	898d803a 	cmpltu	r6,r17,r6
   2504c:	3087883a 	add	r3,r6,r2
   25050:	4821883a 	mov	r16,r9
   25054:	003ed906 	br	24bbc <__alt_data_end+0xfffe57bc>
   25058:	2984b03a 	or	r2,r5,r6
   2505c:	10004226 	beq	r2,zero,25168 <__subdf3+0x82c>
   25060:	1808d0fa 	srli	r4,r3,3
   25064:	8822d0fa 	srli	r17,r17,3
   25068:	1806977a 	slli	r3,r3,29
   2506c:	2080022c 	andhi	r2,r4,8
   25070:	1c62b03a 	or	r17,r3,r17
   25074:	10000826 	beq	r2,zero,25098 <__subdf3+0x75c>
   25078:	2812d0fa 	srli	r9,r5,3
   2507c:	4880022c 	andhi	r2,r9,8
   25080:	1000051e 	bne	r2,zero,25098 <__subdf3+0x75c>
   25084:	300cd0fa 	srli	r6,r6,3
   25088:	2804977a 	slli	r2,r5,29
   2508c:	4809883a 	mov	r4,r9
   25090:	3825883a 	mov	r18,r7
   25094:	11a2b03a 	or	r17,r2,r6
   25098:	8806d77a 	srli	r3,r17,29
   2509c:	200890fa 	slli	r4,r4,3
   250a0:	882290fa 	slli	r17,r17,3
   250a4:	0401ffc4 	movi	r16,2047
   250a8:	1906b03a 	or	r3,r3,r4
   250ac:	003e4406 	br	249c0 <__alt_data_end+0xfffe55c0>
   250b0:	2984b03a 	or	r2,r5,r6
   250b4:	103e4226 	beq	r2,zero,249c0 <__alt_data_end+0xfffe55c0>
   250b8:	8989c83a 	sub	r4,r17,r6
   250bc:	8911803a 	cmpltu	r8,r17,r4
   250c0:	1945c83a 	sub	r2,r3,r5
   250c4:	1205c83a 	sub	r2,r2,r8
   250c8:	1200202c 	andhi	r8,r2,128
   250cc:	403e9a26 	beq	r8,zero,24b38 <__alt_data_end+0xfffe5738>
   250d0:	3463c83a 	sub	r17,r6,r17
   250d4:	28c5c83a 	sub	r2,r5,r3
   250d8:	344d803a 	cmpltu	r6,r6,r17
   250dc:	1187c83a 	sub	r3,r2,r6
   250e0:	3825883a 	mov	r18,r7
   250e4:	003e3606 	br	249c0 <__alt_data_end+0xfffe55c0>
   250e8:	0101ffc4 	movi	r4,2047
   250ec:	493fc71e 	bne	r9,r4,2500c <__alt_data_end+0xfffe5c0c>
   250f0:	2807883a 	mov	r3,r5
   250f4:	3023883a 	mov	r17,r6
   250f8:	4821883a 	mov	r16,r9
   250fc:	003e3006 	br	249c0 <__alt_data_end+0xfffe55c0>
   25100:	10003626 	beq	r2,zero,251dc <__subdf3+0x8a0>
   25104:	2984b03a 	or	r2,r5,r6
   25108:	10001726 	beq	r2,zero,25168 <__subdf3+0x82c>
   2510c:	1808d0fa 	srli	r4,r3,3
   25110:	8822d0fa 	srli	r17,r17,3
   25114:	1806977a 	slli	r3,r3,29
   25118:	2080022c 	andhi	r2,r4,8
   2511c:	1c62b03a 	or	r17,r3,r17
   25120:	10000726 	beq	r2,zero,25140 <__subdf3+0x804>
   25124:	2812d0fa 	srli	r9,r5,3
   25128:	4880022c 	andhi	r2,r9,8
   2512c:	1000041e 	bne	r2,zero,25140 <__subdf3+0x804>
   25130:	300cd0fa 	srli	r6,r6,3
   25134:	2804977a 	slli	r2,r5,29
   25138:	4809883a 	mov	r4,r9
   2513c:	11a2b03a 	or	r17,r2,r6
   25140:	8806d77a 	srli	r3,r17,29
   25144:	200890fa 	slli	r4,r4,3
   25148:	882290fa 	slli	r17,r17,3
   2514c:	3825883a 	mov	r18,r7
   25150:	1906b03a 	or	r3,r3,r4
   25154:	0401ffc4 	movi	r16,2047
   25158:	003e1906 	br	249c0 <__alt_data_end+0xfffe55c0>
   2515c:	000b883a 	mov	r5,zero
   25160:	0005883a 	mov	r2,zero
   25164:	003e2e06 	br	24a20 <__alt_data_end+0xfffe5620>
   25168:	0401ffc4 	movi	r16,2047
   2516c:	003e1406 	br	249c0 <__alt_data_end+0xfffe55c0>
   25170:	0005883a 	mov	r2,zero
   25174:	003f7506 	br	24f4c <__alt_data_end+0xfffe5b4c>
   25178:	0005883a 	mov	r2,zero
   2517c:	0009883a 	mov	r4,zero
   25180:	003e7806 	br	24b64 <__alt_data_end+0xfffe5764>
   25184:	123ff804 	addi	r8,r2,-32
   25188:	01000804 	movi	r4,32
   2518c:	1a10d83a 	srl	r8,r3,r8
   25190:	11002526 	beq	r2,r4,25228 <__subdf3+0x8ec>
   25194:	01001004 	movi	r4,64
   25198:	2085c83a 	sub	r2,r4,r2
   2519c:	1884983a 	sll	r2,r3,r2
   251a0:	1444b03a 	or	r2,r2,r17
   251a4:	1004c03a 	cmpne	r2,r2,zero
   251a8:	40a2b03a 	or	r17,r8,r2
   251ac:	0005883a 	mov	r2,zero
   251b0:	003f1606 	br	24e0c <__alt_data_end+0xfffe5a0c>
   251b4:	02000434 	movhi	r8,16
   251b8:	0009883a 	mov	r4,zero
   251bc:	423fffc4 	addi	r8,r8,-1
   251c0:	00bfffc4 	movi	r2,-1
   251c4:	0401ffc4 	movi	r16,2047
   251c8:	003e6606 	br	24b64 <__alt_data_end+0xfffe5764>
   251cc:	1c62b03a 	or	r17,r3,r17
   251d0:	8822c03a 	cmpne	r17,r17,zero
   251d4:	0005883a 	mov	r2,zero
   251d8:	003f9906 	br	25040 <__alt_data_end+0xfffe5c40>
   251dc:	2807883a 	mov	r3,r5
   251e0:	3023883a 	mov	r17,r6
   251e4:	0401ffc4 	movi	r16,2047
   251e8:	003df506 	br	249c0 <__alt_data_end+0xfffe55c0>
   251ec:	2807883a 	mov	r3,r5
   251f0:	3023883a 	mov	r17,r6
   251f4:	003df206 	br	249c0 <__alt_data_end+0xfffe55c0>
   251f8:	123ff804 	addi	r8,r2,-32
   251fc:	01000804 	movi	r4,32
   25200:	1a10d83a 	srl	r8,r3,r8
   25204:	11000a26 	beq	r2,r4,25230 <__subdf3+0x8f4>
   25208:	01001004 	movi	r4,64
   2520c:	2085c83a 	sub	r2,r4,r2
   25210:	1884983a 	sll	r2,r3,r2
   25214:	1444b03a 	or	r2,r2,r17
   25218:	1004c03a 	cmpne	r2,r2,zero
   2521c:	40a2b03a 	or	r17,r8,r2
   25220:	0005883a 	mov	r2,zero
   25224:	003f8606 	br	25040 <__alt_data_end+0xfffe5c40>
   25228:	0005883a 	mov	r2,zero
   2522c:	003fdc06 	br	251a0 <__alt_data_end+0xfffe5da0>
   25230:	0005883a 	mov	r2,zero
   25234:	003ff706 	br	25214 <__alt_data_end+0xfffe5e14>

00025238 <__fixdfsi>:
   25238:	280cd53a 	srli	r6,r5,20
   2523c:	00c00434 	movhi	r3,16
   25240:	18ffffc4 	addi	r3,r3,-1
   25244:	3181ffcc 	andi	r6,r6,2047
   25248:	01c0ff84 	movi	r7,1022
   2524c:	28c6703a 	and	r3,r5,r3
   25250:	280ad7fa 	srli	r5,r5,31
   25254:	3980120e 	bge	r7,r6,252a0 <__fixdfsi+0x68>
   25258:	00810744 	movi	r2,1053
   2525c:	11800c16 	blt	r2,r6,25290 <__fixdfsi+0x58>
   25260:	00810cc4 	movi	r2,1075
   25264:	1185c83a 	sub	r2,r2,r6
   25268:	01c007c4 	movi	r7,31
   2526c:	18c00434 	orhi	r3,r3,16
   25270:	38800d16 	blt	r7,r2,252a8 <__fixdfsi+0x70>
   25274:	31befb44 	addi	r6,r6,-1043
   25278:	2084d83a 	srl	r2,r4,r2
   2527c:	1986983a 	sll	r3,r3,r6
   25280:	1884b03a 	or	r2,r3,r2
   25284:	28000726 	beq	r5,zero,252a4 <__fixdfsi+0x6c>
   25288:	0085c83a 	sub	r2,zero,r2
   2528c:	f800283a 	ret
   25290:	00a00034 	movhi	r2,32768
   25294:	10bfffc4 	addi	r2,r2,-1
   25298:	2885883a 	add	r2,r5,r2
   2529c:	f800283a 	ret
   252a0:	0005883a 	mov	r2,zero
   252a4:	f800283a 	ret
   252a8:	008104c4 	movi	r2,1043
   252ac:	1185c83a 	sub	r2,r2,r6
   252b0:	1884d83a 	srl	r2,r3,r2
   252b4:	003ff306 	br	25284 <__alt_data_end+0xfffe5e84>

000252b8 <__floatsidf>:
   252b8:	defffd04 	addi	sp,sp,-12
   252bc:	dfc00215 	stw	ra,8(sp)
   252c0:	dc400115 	stw	r17,4(sp)
   252c4:	dc000015 	stw	r16,0(sp)
   252c8:	20002b26 	beq	r4,zero,25378 <__floatsidf+0xc0>
   252cc:	2023883a 	mov	r17,r4
   252d0:	2020d7fa 	srli	r16,r4,31
   252d4:	20002d16 	blt	r4,zero,2538c <__floatsidf+0xd4>
   252d8:	8809883a 	mov	r4,r17
   252dc:	002564c0 	call	2564c <__clzsi2>
   252e0:	01410784 	movi	r5,1054
   252e4:	288bc83a 	sub	r5,r5,r2
   252e8:	01010cc4 	movi	r4,1075
   252ec:	2149c83a 	sub	r4,r4,r5
   252f0:	00c007c4 	movi	r3,31
   252f4:	1900160e 	bge	r3,r4,25350 <__floatsidf+0x98>
   252f8:	00c104c4 	movi	r3,1043
   252fc:	1947c83a 	sub	r3,r3,r5
   25300:	88c6983a 	sll	r3,r17,r3
   25304:	00800434 	movhi	r2,16
   25308:	10bfffc4 	addi	r2,r2,-1
   2530c:	1886703a 	and	r3,r3,r2
   25310:	2941ffcc 	andi	r5,r5,2047
   25314:	800d883a 	mov	r6,r16
   25318:	0005883a 	mov	r2,zero
   2531c:	280a953a 	slli	r5,r5,20
   25320:	31803fcc 	andi	r6,r6,255
   25324:	01000434 	movhi	r4,16
   25328:	300c97fa 	slli	r6,r6,31
   2532c:	213fffc4 	addi	r4,r4,-1
   25330:	1906703a 	and	r3,r3,r4
   25334:	1946b03a 	or	r3,r3,r5
   25338:	1986b03a 	or	r3,r3,r6
   2533c:	dfc00217 	ldw	ra,8(sp)
   25340:	dc400117 	ldw	r17,4(sp)
   25344:	dc000017 	ldw	r16,0(sp)
   25348:	dec00304 	addi	sp,sp,12
   2534c:	f800283a 	ret
   25350:	00c002c4 	movi	r3,11
   25354:	1887c83a 	sub	r3,r3,r2
   25358:	88c6d83a 	srl	r3,r17,r3
   2535c:	8904983a 	sll	r2,r17,r4
   25360:	01000434 	movhi	r4,16
   25364:	213fffc4 	addi	r4,r4,-1
   25368:	2941ffcc 	andi	r5,r5,2047
   2536c:	1906703a 	and	r3,r3,r4
   25370:	800d883a 	mov	r6,r16
   25374:	003fe906 	br	2531c <__alt_data_end+0xfffe5f1c>
   25378:	000d883a 	mov	r6,zero
   2537c:	000b883a 	mov	r5,zero
   25380:	0007883a 	mov	r3,zero
   25384:	0005883a 	mov	r2,zero
   25388:	003fe406 	br	2531c <__alt_data_end+0xfffe5f1c>
   2538c:	0123c83a 	sub	r17,zero,r4
   25390:	003fd106 	br	252d8 <__alt_data_end+0xfffe5ed8>

00025394 <__extendsfdf2>:
   25394:	200ad5fa 	srli	r5,r4,23
   25398:	defffd04 	addi	sp,sp,-12
   2539c:	dc400115 	stw	r17,4(sp)
   253a0:	29403fcc 	andi	r5,r5,255
   253a4:	29800044 	addi	r6,r5,1
   253a8:	04402034 	movhi	r17,128
   253ac:	dc000015 	stw	r16,0(sp)
   253b0:	8c7fffc4 	addi	r17,r17,-1
   253b4:	dfc00215 	stw	ra,8(sp)
   253b8:	31803fcc 	andi	r6,r6,255
   253bc:	00800044 	movi	r2,1
   253c0:	8922703a 	and	r17,r17,r4
   253c4:	2020d7fa 	srli	r16,r4,31
   253c8:	1180110e 	bge	r2,r6,25410 <__extendsfdf2+0x7c>
   253cc:	880cd0fa 	srli	r6,r17,3
   253d0:	8822977a 	slli	r17,r17,29
   253d4:	2940e004 	addi	r5,r5,896
   253d8:	2941ffcc 	andi	r5,r5,2047
   253dc:	2804953a 	slli	r2,r5,20
   253e0:	01400434 	movhi	r5,16
   253e4:	800697fa 	slli	r3,r16,31
   253e8:	297fffc4 	addi	r5,r5,-1
   253ec:	314a703a 	and	r5,r6,r5
   253f0:	288ab03a 	or	r5,r5,r2
   253f4:	28c6b03a 	or	r3,r5,r3
   253f8:	8805883a 	mov	r2,r17
   253fc:	dfc00217 	ldw	ra,8(sp)
   25400:	dc400117 	ldw	r17,4(sp)
   25404:	dc000017 	ldw	r16,0(sp)
   25408:	dec00304 	addi	sp,sp,12
   2540c:	f800283a 	ret
   25410:	2800111e 	bne	r5,zero,25458 <__extendsfdf2+0xc4>
   25414:	88001c26 	beq	r17,zero,25488 <__extendsfdf2+0xf4>
   25418:	8809883a 	mov	r4,r17
   2541c:	002564c0 	call	2564c <__clzsi2>
   25420:	00c00284 	movi	r3,10
   25424:	18801b16 	blt	r3,r2,25494 <__extendsfdf2+0x100>
   25428:	018002c4 	movi	r6,11
   2542c:	308dc83a 	sub	r6,r6,r2
   25430:	11000544 	addi	r4,r2,21
   25434:	8986d83a 	srl	r3,r17,r6
   25438:	8922983a 	sll	r17,r17,r4
   2543c:	0180e244 	movi	r6,905
   25440:	01400434 	movhi	r5,16
   25444:	3085c83a 	sub	r2,r6,r2
   25448:	297fffc4 	addi	r5,r5,-1
   2544c:	194c703a 	and	r6,r3,r5
   25450:	1141ffcc 	andi	r5,r2,2047
   25454:	003fe006 	br	253d8 <__alt_data_end+0xfffe5fd8>
   25458:	88000826 	beq	r17,zero,2547c <__extendsfdf2+0xe8>
   2545c:	880cd0fa 	srli	r6,r17,3
   25460:	00800434 	movhi	r2,16
   25464:	10bfffc4 	addi	r2,r2,-1
   25468:	31800234 	orhi	r6,r6,8
   2546c:	8822977a 	slli	r17,r17,29
   25470:	308c703a 	and	r6,r6,r2
   25474:	0141ffc4 	movi	r5,2047
   25478:	003fd706 	br	253d8 <__alt_data_end+0xfffe5fd8>
   2547c:	0141ffc4 	movi	r5,2047
   25480:	000d883a 	mov	r6,zero
   25484:	003fd406 	br	253d8 <__alt_data_end+0xfffe5fd8>
   25488:	000b883a 	mov	r5,zero
   2548c:	000d883a 	mov	r6,zero
   25490:	003fd106 	br	253d8 <__alt_data_end+0xfffe5fd8>
   25494:	11bffd44 	addi	r6,r2,-11
   25498:	8986983a 	sll	r3,r17,r6
   2549c:	0023883a 	mov	r17,zero
   254a0:	003fe606 	br	2543c <__alt_data_end+0xfffe603c>

000254a4 <__truncdfsf2>:
   254a4:	2810d53a 	srli	r8,r5,20
   254a8:	01c00434 	movhi	r7,16
   254ac:	39ffffc4 	addi	r7,r7,-1
   254b0:	29ce703a 	and	r7,r5,r7
   254b4:	4201ffcc 	andi	r8,r8,2047
   254b8:	380e90fa 	slli	r7,r7,3
   254bc:	200cd77a 	srli	r6,r4,29
   254c0:	42400044 	addi	r9,r8,1
   254c4:	4a41ffcc 	andi	r9,r9,2047
   254c8:	00c00044 	movi	r3,1
   254cc:	280ad7fa 	srli	r5,r5,31
   254d0:	31ceb03a 	or	r7,r6,r7
   254d4:	200490fa 	slli	r2,r4,3
   254d8:	1a40230e 	bge	r3,r9,25568 <__truncdfsf2+0xc4>
   254dc:	40ff2004 	addi	r3,r8,-896
   254e0:	01803f84 	movi	r6,254
   254e4:	30c01516 	blt	r6,r3,2553c <__truncdfsf2+0x98>
   254e8:	00c0380e 	bge	zero,r3,255cc <__truncdfsf2+0x128>
   254ec:	200c91ba 	slli	r6,r4,6
   254f0:	380e90fa 	slli	r7,r7,3
   254f4:	1004d77a 	srli	r2,r2,29
   254f8:	300cc03a 	cmpne	r6,r6,zero
   254fc:	31ccb03a 	or	r6,r6,r7
   25500:	308cb03a 	or	r6,r6,r2
   25504:	308001cc 	andi	r2,r6,7
   25508:	10000426 	beq	r2,zero,2551c <__truncdfsf2+0x78>
   2550c:	308003cc 	andi	r2,r6,15
   25510:	01000104 	movi	r4,4
   25514:	11000126 	beq	r2,r4,2551c <__truncdfsf2+0x78>
   25518:	31800104 	addi	r6,r6,4
   2551c:	3081002c 	andhi	r2,r6,1024
   25520:	10001626 	beq	r2,zero,2557c <__truncdfsf2+0xd8>
   25524:	18c00044 	addi	r3,r3,1
   25528:	00803fc4 	movi	r2,255
   2552c:	18800326 	beq	r3,r2,2553c <__truncdfsf2+0x98>
   25530:	300c91ba 	slli	r6,r6,6
   25534:	300cd27a 	srli	r6,r6,9
   25538:	00000206 	br	25544 <__truncdfsf2+0xa0>
   2553c:	00ffffc4 	movi	r3,-1
   25540:	000d883a 	mov	r6,zero
   25544:	18c03fcc 	andi	r3,r3,255
   25548:	180895fa 	slli	r4,r3,23
   2554c:	00c02034 	movhi	r3,128
   25550:	280a97fa 	slli	r5,r5,31
   25554:	18ffffc4 	addi	r3,r3,-1
   25558:	30c6703a 	and	r3,r6,r3
   2555c:	1906b03a 	or	r3,r3,r4
   25560:	1944b03a 	or	r2,r3,r5
   25564:	f800283a 	ret
   25568:	40000b1e 	bne	r8,zero,25598 <__truncdfsf2+0xf4>
   2556c:	388cb03a 	or	r6,r7,r2
   25570:	0007883a 	mov	r3,zero
   25574:	30000426 	beq	r6,zero,25588 <__truncdfsf2+0xe4>
   25578:	01800144 	movi	r6,5
   2557c:	00803fc4 	movi	r2,255
   25580:	300cd0fa 	srli	r6,r6,3
   25584:	18800a26 	beq	r3,r2,255b0 <__truncdfsf2+0x10c>
   25588:	00802034 	movhi	r2,128
   2558c:	10bfffc4 	addi	r2,r2,-1
   25590:	308c703a 	and	r6,r6,r2
   25594:	003feb06 	br	25544 <__alt_data_end+0xfffe6144>
   25598:	3888b03a 	or	r4,r7,r2
   2559c:	203fe726 	beq	r4,zero,2553c <__alt_data_end+0xfffe613c>
   255a0:	380c90fa 	slli	r6,r7,3
   255a4:	00c03fc4 	movi	r3,255
   255a8:	31808034 	orhi	r6,r6,512
   255ac:	003fd506 	br	25504 <__alt_data_end+0xfffe6104>
   255b0:	303fe226 	beq	r6,zero,2553c <__alt_data_end+0xfffe613c>
   255b4:	00802034 	movhi	r2,128
   255b8:	31801034 	orhi	r6,r6,64
   255bc:	10bfffc4 	addi	r2,r2,-1
   255c0:	00ffffc4 	movi	r3,-1
   255c4:	308c703a 	and	r6,r6,r2
   255c8:	003fde06 	br	25544 <__alt_data_end+0xfffe6144>
   255cc:	013ffa44 	movi	r4,-23
   255d0:	19000e16 	blt	r3,r4,2560c <__truncdfsf2+0x168>
   255d4:	01000784 	movi	r4,30
   255d8:	20c9c83a 	sub	r4,r4,r3
   255dc:	018007c4 	movi	r6,31
   255e0:	39c02034 	orhi	r7,r7,128
   255e4:	31000b16 	blt	r6,r4,25614 <__truncdfsf2+0x170>
   255e8:	423f2084 	addi	r8,r8,-894
   255ec:	120c983a 	sll	r6,r2,r8
   255f0:	3a0e983a 	sll	r7,r7,r8
   255f4:	1104d83a 	srl	r2,r2,r4
   255f8:	300cc03a 	cmpne	r6,r6,zero
   255fc:	31ceb03a 	or	r7,r6,r7
   25600:	388cb03a 	or	r6,r7,r2
   25604:	0007883a 	mov	r3,zero
   25608:	003fbe06 	br	25504 <__alt_data_end+0xfffe6104>
   2560c:	0007883a 	mov	r3,zero
   25610:	003fd906 	br	25578 <__alt_data_end+0xfffe6178>
   25614:	01bfff84 	movi	r6,-2
   25618:	30cdc83a 	sub	r6,r6,r3
   2561c:	00c00804 	movi	r3,32
   25620:	398cd83a 	srl	r6,r7,r6
   25624:	20c00726 	beq	r4,r3,25644 <__truncdfsf2+0x1a0>
   25628:	423f2884 	addi	r8,r8,-862
   2562c:	3a0e983a 	sll	r7,r7,r8
   25630:	3884b03a 	or	r2,r7,r2
   25634:	1004c03a 	cmpne	r2,r2,zero
   25638:	118cb03a 	or	r6,r2,r6
   2563c:	0007883a 	mov	r3,zero
   25640:	003fb006 	br	25504 <__alt_data_end+0xfffe6104>
   25644:	000f883a 	mov	r7,zero
   25648:	003ff906 	br	25630 <__alt_data_end+0xfffe6230>

0002564c <__clzsi2>:
   2564c:	00bfffd4 	movui	r2,65535
   25650:	11000536 	bltu	r2,r4,25668 <__clzsi2+0x1c>
   25654:	00803fc4 	movi	r2,255
   25658:	11000f36 	bltu	r2,r4,25698 <__clzsi2+0x4c>
   2565c:	00800804 	movi	r2,32
   25660:	0007883a 	mov	r3,zero
   25664:	00000506 	br	2567c <__clzsi2+0x30>
   25668:	00804034 	movhi	r2,256
   2566c:	10bfffc4 	addi	r2,r2,-1
   25670:	11000c2e 	bgeu	r2,r4,256a4 <__clzsi2+0x58>
   25674:	00800204 	movi	r2,8
   25678:	00c00604 	movi	r3,24
   2567c:	20c8d83a 	srl	r4,r4,r3
   25680:	00c000f4 	movhi	r3,3
   25684:	18c8a604 	addi	r3,r3,8856
   25688:	1909883a 	add	r4,r3,r4
   2568c:	20c00003 	ldbu	r3,0(r4)
   25690:	10c5c83a 	sub	r2,r2,r3
   25694:	f800283a 	ret
   25698:	00800604 	movi	r2,24
   2569c:	00c00204 	movi	r3,8
   256a0:	003ff606 	br	2567c <__alt_data_end+0xfffe627c>
   256a4:	00800404 	movi	r2,16
   256a8:	1007883a 	mov	r3,r2
   256ac:	003ff306 	br	2567c <__alt_data_end+0xfffe627c>

000256b0 <__errno>:
   256b0:	008000f4 	movhi	r2,3
   256b4:	10901e04 	addi	r2,r2,16504
   256b8:	10800017 	ldw	r2,0(r2)
   256bc:	f800283a 	ret

000256c0 <_printf_r>:
   256c0:	defffd04 	addi	sp,sp,-12
   256c4:	2805883a 	mov	r2,r5
   256c8:	dfc00015 	stw	ra,0(sp)
   256cc:	d9800115 	stw	r6,4(sp)
   256d0:	d9c00215 	stw	r7,8(sp)
   256d4:	21400217 	ldw	r5,8(r4)
   256d8:	d9c00104 	addi	r7,sp,4
   256dc:	100d883a 	mov	r6,r2
   256e0:	002572c0 	call	2572c <___vfprintf_internal_r>
   256e4:	dfc00017 	ldw	ra,0(sp)
   256e8:	dec00304 	addi	sp,sp,12
   256ec:	f800283a 	ret

000256f0 <printf>:
   256f0:	defffc04 	addi	sp,sp,-16
   256f4:	dfc00015 	stw	ra,0(sp)
   256f8:	d9400115 	stw	r5,4(sp)
   256fc:	d9800215 	stw	r6,8(sp)
   25700:	d9c00315 	stw	r7,12(sp)
   25704:	008000f4 	movhi	r2,3
   25708:	10901e04 	addi	r2,r2,16504
   2570c:	10800017 	ldw	r2,0(r2)
   25710:	200b883a 	mov	r5,r4
   25714:	d9800104 	addi	r6,sp,4
   25718:	11000217 	ldw	r4,8(r2)
   2571c:	00279240 	call	27924 <__vfprintf_internal>
   25720:	dfc00017 	ldw	ra,0(sp)
   25724:	dec00404 	addi	sp,sp,16
   25728:	f800283a 	ret

0002572c <___vfprintf_internal_r>:
   2572c:	deffb804 	addi	sp,sp,-288
   25730:	dfc04715 	stw	ra,284(sp)
   25734:	ddc04515 	stw	r23,276(sp)
   25738:	dd404315 	stw	r21,268(sp)
   2573c:	d9002c15 	stw	r4,176(sp)
   25740:	282f883a 	mov	r23,r5
   25744:	302b883a 	mov	r21,r6
   25748:	d9c02d15 	stw	r7,180(sp)
   2574c:	df004615 	stw	fp,280(sp)
   25750:	dd804415 	stw	r22,272(sp)
   25754:	dd004215 	stw	r20,264(sp)
   25758:	dcc04115 	stw	r19,260(sp)
   2575c:	dc804015 	stw	r18,256(sp)
   25760:	dc403f15 	stw	r17,252(sp)
   25764:	dc003e15 	stw	r16,248(sp)
   25768:	002a0880 	call	2a088 <_localeconv_r>
   2576c:	10800017 	ldw	r2,0(r2)
   25770:	1009883a 	mov	r4,r2
   25774:	d8803415 	stw	r2,208(sp)
   25778:	002c0b00 	call	2c0b0 <strlen>
   2577c:	d8803715 	stw	r2,220(sp)
   25780:	d8802c17 	ldw	r2,176(sp)
   25784:	10000226 	beq	r2,zero,25790 <___vfprintf_internal_r+0x64>
   25788:	10800e17 	ldw	r2,56(r2)
   2578c:	1000f926 	beq	r2,zero,25b74 <___vfprintf_internal_r+0x448>
   25790:	b880030b 	ldhu	r2,12(r23)
   25794:	10c8000c 	andi	r3,r2,8192
   25798:	1800061e 	bne	r3,zero,257b4 <___vfprintf_internal_r+0x88>
   2579c:	b9001917 	ldw	r4,100(r23)
   257a0:	00f7ffc4 	movi	r3,-8193
   257a4:	10880014 	ori	r2,r2,8192
   257a8:	20c6703a 	and	r3,r4,r3
   257ac:	b880030d 	sth	r2,12(r23)
   257b0:	b8c01915 	stw	r3,100(r23)
   257b4:	10c0020c 	andi	r3,r2,8
   257b8:	1800c126 	beq	r3,zero,25ac0 <___vfprintf_internal_r+0x394>
   257bc:	b8c00417 	ldw	r3,16(r23)
   257c0:	1800bf26 	beq	r3,zero,25ac0 <___vfprintf_internal_r+0x394>
   257c4:	1080068c 	andi	r2,r2,26
   257c8:	00c00284 	movi	r3,10
   257cc:	10c0c426 	beq	r2,r3,25ae0 <___vfprintf_internal_r+0x3b4>
   257d0:	d8c00404 	addi	r3,sp,16
   257d4:	050000f4 	movhi	r20,3
   257d8:	d9001e04 	addi	r4,sp,120
   257dc:	a508f784 	addi	r20,r20,9182
   257e0:	d8c01e15 	stw	r3,120(sp)
   257e4:	d8002015 	stw	zero,128(sp)
   257e8:	d8001f15 	stw	zero,124(sp)
   257ec:	d8003315 	stw	zero,204(sp)
   257f0:	d8003615 	stw	zero,216(sp)
   257f4:	d8003815 	stw	zero,224(sp)
   257f8:	1811883a 	mov	r8,r3
   257fc:	d8003915 	stw	zero,228(sp)
   25800:	d8003a15 	stw	zero,232(sp)
   25804:	d8002f15 	stw	zero,188(sp)
   25808:	d9002815 	stw	r4,160(sp)
   2580c:	a8800007 	ldb	r2,0(r21)
   25810:	10027b26 	beq	r2,zero,26200 <___vfprintf_internal_r+0xad4>
   25814:	00c00944 	movi	r3,37
   25818:	a821883a 	mov	r16,r21
   2581c:	10c0021e 	bne	r2,r3,25828 <___vfprintf_internal_r+0xfc>
   25820:	00001406 	br	25874 <___vfprintf_internal_r+0x148>
   25824:	10c00326 	beq	r2,r3,25834 <___vfprintf_internal_r+0x108>
   25828:	84000044 	addi	r16,r16,1
   2582c:	80800007 	ldb	r2,0(r16)
   25830:	103ffc1e 	bne	r2,zero,25824 <__alt_data_end+0xfffe6424>
   25834:	8563c83a 	sub	r17,r16,r21
   25838:	88000e26 	beq	r17,zero,25874 <___vfprintf_internal_r+0x148>
   2583c:	d8c02017 	ldw	r3,128(sp)
   25840:	d8801f17 	ldw	r2,124(sp)
   25844:	45400015 	stw	r21,0(r8)
   25848:	1c47883a 	add	r3,r3,r17
   2584c:	10800044 	addi	r2,r2,1
   25850:	d8c02015 	stw	r3,128(sp)
   25854:	44400115 	stw	r17,4(r8)
   25858:	d8801f15 	stw	r2,124(sp)
   2585c:	00c001c4 	movi	r3,7
   25860:	1880a716 	blt	r3,r2,25b00 <___vfprintf_internal_r+0x3d4>
   25864:	42000204 	addi	r8,r8,8
   25868:	d9402f17 	ldw	r5,188(sp)
   2586c:	2c4b883a 	add	r5,r5,r17
   25870:	d9402f15 	stw	r5,188(sp)
   25874:	80800007 	ldb	r2,0(r16)
   25878:	1000a826 	beq	r2,zero,25b1c <___vfprintf_internal_r+0x3f0>
   2587c:	84400047 	ldb	r17,1(r16)
   25880:	00bfffc4 	movi	r2,-1
   25884:	85400044 	addi	r21,r16,1
   25888:	d8002785 	stb	zero,158(sp)
   2588c:	0007883a 	mov	r3,zero
   25890:	000f883a 	mov	r7,zero
   25894:	d8802915 	stw	r2,164(sp)
   25898:	d8003115 	stw	zero,196(sp)
   2589c:	0025883a 	mov	r18,zero
   258a0:	01401604 	movi	r5,88
   258a4:	01800244 	movi	r6,9
   258a8:	02800a84 	movi	r10,42
   258ac:	02401b04 	movi	r9,108
   258b0:	ad400044 	addi	r21,r21,1
   258b4:	88bff804 	addi	r2,r17,-32
   258b8:	28830436 	bltu	r5,r2,264cc <___vfprintf_internal_r+0xda0>
   258bc:	100490ba 	slli	r2,r2,2
   258c0:	010000b4 	movhi	r4,2
   258c4:	21163504 	addi	r4,r4,22740
   258c8:	1105883a 	add	r2,r2,r4
   258cc:	10800017 	ldw	r2,0(r2)
   258d0:	1000683a 	jmp	r2
   258d4:	000263ec 	andhi	zero,zero,2447
   258d8:	000264cc 	andi	zero,zero,2451
   258dc:	000264cc 	andi	zero,zero,2451
   258e0:	0002640c 	andi	zero,zero,2448
   258e4:	000264cc 	andi	zero,zero,2451
   258e8:	000264cc 	andi	zero,zero,2451
   258ec:	000264cc 	andi	zero,zero,2451
   258f0:	000264cc 	andi	zero,zero,2451
   258f4:	000264cc 	andi	zero,zero,2451
   258f8:	000264cc 	andi	zero,zero,2451
   258fc:	00025b80 	call	25b8 <__alt_mem_SRAM1-0x1da48>
   25900:	00026328 	cmpgeui	zero,zero,2444
   25904:	000264cc 	andi	zero,zero,2451
   25908:	00025a48 	cmpgei	zero,zero,2409
   2590c:	00025ba8 	cmpgeui	zero,zero,2414
   25910:	000264cc 	andi	zero,zero,2451
   25914:	00025be8 	cmpgeui	zero,zero,2415
   25918:	00025bf4 	movhi	zero,2415
   2591c:	00025bf4 	movhi	zero,2415
   25920:	00025bf4 	movhi	zero,2415
   25924:	00025bf4 	movhi	zero,2415
   25928:	00025bf4 	movhi	zero,2415
   2592c:	00025bf4 	movhi	zero,2415
   25930:	00025bf4 	movhi	zero,2415
   25934:	00025bf4 	movhi	zero,2415
   25938:	00025bf4 	movhi	zero,2415
   2593c:	000264cc 	andi	zero,zero,2451
   25940:	000264cc 	andi	zero,zero,2451
   25944:	000264cc 	andi	zero,zero,2451
   25948:	000264cc 	andi	zero,zero,2451
   2594c:	000264cc 	andi	zero,zero,2451
   25950:	000264cc 	andi	zero,zero,2451
   25954:	000264cc 	andi	zero,zero,2451
   25958:	000264cc 	andi	zero,zero,2451
   2595c:	000264cc 	andi	zero,zero,2451
   25960:	000264cc 	andi	zero,zero,2451
   25964:	00025c28 	cmpgeui	zero,zero,2416
   25968:	00025ce4 	muli	zero,zero,2419
   2596c:	000264cc 	andi	zero,zero,2451
   25970:	00025ce4 	muli	zero,zero,2419
   25974:	000264cc 	andi	zero,zero,2451
   25978:	000264cc 	andi	zero,zero,2451
   2597c:	000264cc 	andi	zero,zero,2451
   25980:	000264cc 	andi	zero,zero,2451
   25984:	00025d84 	movi	zero,2422
   25988:	000264cc 	andi	zero,zero,2451
   2598c:	000264cc 	andi	zero,zero,2451
   25990:	00025d90 	cmplti	zero,zero,2422
   25994:	000264cc 	andi	zero,zero,2451
   25998:	000264cc 	andi	zero,zero,2451
   2599c:	000264cc 	andi	zero,zero,2451
   259a0:	000264cc 	andi	zero,zero,2451
   259a4:	000264cc 	andi	zero,zero,2451
   259a8:	00026208 	cmpgei	zero,zero,2440
   259ac:	000264cc 	andi	zero,zero,2451
   259b0:	000264cc 	andi	zero,zero,2451
   259b4:	00026268 	cmpgeui	zero,zero,2441
   259b8:	000264cc 	andi	zero,zero,2451
   259bc:	000264cc 	andi	zero,zero,2451
   259c0:	000264cc 	andi	zero,zero,2451
   259c4:	000264cc 	andi	zero,zero,2451
   259c8:	000264cc 	andi	zero,zero,2451
   259cc:	000264cc 	andi	zero,zero,2451
   259d0:	000264cc 	andi	zero,zero,2451
   259d4:	000264cc 	andi	zero,zero,2451
   259d8:	000264cc 	andi	zero,zero,2451
   259dc:	000264cc 	andi	zero,zero,2451
   259e0:	00026478 	rdprs	zero,zero,2449
   259e4:	00026418 	cmpnei	zero,zero,2448
   259e8:	00025ce4 	muli	zero,zero,2419
   259ec:	00025ce4 	muli	zero,zero,2419
   259f0:	00025ce4 	muli	zero,zero,2419
   259f4:	00026428 	cmpgeui	zero,zero,2448
   259f8:	00026418 	cmpnei	zero,zero,2448
   259fc:	000264cc 	andi	zero,zero,2451
   25a00:	000264cc 	andi	zero,zero,2451
   25a04:	00026434 	movhi	zero,2448
   25a08:	000264cc 	andi	zero,zero,2451
   25a0c:	00026444 	movi	zero,2449
   25a10:	00026318 	cmpnei	zero,zero,2444
   25a14:	00025a54 	movui	zero,2409
   25a18:	00026338 	rdprs	zero,zero,2444
   25a1c:	000264cc 	andi	zero,zero,2451
   25a20:	00026344 	movi	zero,2445
   25a24:	000264cc 	andi	zero,zero,2451
   25a28:	000263a0 	cmpeqi	zero,zero,2446
   25a2c:	000264cc 	andi	zero,zero,2451
   25a30:	000264cc 	andi	zero,zero,2451
   25a34:	000263b0 	cmpltui	zero,zero,2446
   25a38:	d9003117 	ldw	r4,196(sp)
   25a3c:	d8802d15 	stw	r2,180(sp)
   25a40:	0109c83a 	sub	r4,zero,r4
   25a44:	d9003115 	stw	r4,196(sp)
   25a48:	94800114 	ori	r18,r18,4
   25a4c:	ac400007 	ldb	r17,0(r21)
   25a50:	003f9706 	br	258b0 <__alt_data_end+0xfffe64b0>
   25a54:	00800c04 	movi	r2,48
   25a58:	d9002d17 	ldw	r4,180(sp)
   25a5c:	d9402917 	ldw	r5,164(sp)
   25a60:	d8802705 	stb	r2,156(sp)
   25a64:	00801e04 	movi	r2,120
   25a68:	d8802745 	stb	r2,157(sp)
   25a6c:	d8002785 	stb	zero,158(sp)
   25a70:	20c00104 	addi	r3,r4,4
   25a74:	24c00017 	ldw	r19,0(r4)
   25a78:	002d883a 	mov	r22,zero
   25a7c:	90800094 	ori	r2,r18,2
   25a80:	28029a16 	blt	r5,zero,264ec <___vfprintf_internal_r+0xdc0>
   25a84:	00bfdfc4 	movi	r2,-129
   25a88:	90a4703a 	and	r18,r18,r2
   25a8c:	d8c02d15 	stw	r3,180(sp)
   25a90:	94800094 	ori	r18,r18,2
   25a94:	9802871e 	bne	r19,zero,264b4 <___vfprintf_internal_r+0xd88>
   25a98:	008000f4 	movhi	r2,3
   25a9c:	1088f004 	addi	r2,r2,9152
   25aa0:	d8803915 	stw	r2,228(sp)
   25aa4:	04401e04 	movi	r17,120
   25aa8:	d8802917 	ldw	r2,164(sp)
   25aac:	0039883a 	mov	fp,zero
   25ab0:	1001e926 	beq	r2,zero,26258 <___vfprintf_internal_r+0xb2c>
   25ab4:	0027883a 	mov	r19,zero
   25ab8:	002d883a 	mov	r22,zero
   25abc:	00020506 	br	262d4 <___vfprintf_internal_r+0xba8>
   25ac0:	d9002c17 	ldw	r4,176(sp)
   25ac4:	b80b883a 	mov	r5,r23
   25ac8:	00279fc0 	call	279fc <__swsetup_r>
   25acc:	1005ac1e 	bne	r2,zero,27180 <___vfprintf_internal_r+0x1a54>
   25ad0:	b880030b 	ldhu	r2,12(r23)
   25ad4:	00c00284 	movi	r3,10
   25ad8:	1080068c 	andi	r2,r2,26
   25adc:	10ff3c1e 	bne	r2,r3,257d0 <__alt_data_end+0xfffe63d0>
   25ae0:	b880038f 	ldh	r2,14(r23)
   25ae4:	103f3a16 	blt	r2,zero,257d0 <__alt_data_end+0xfffe63d0>
   25ae8:	d9c02d17 	ldw	r7,180(sp)
   25aec:	d9002c17 	ldw	r4,176(sp)
   25af0:	a80d883a 	mov	r6,r21
   25af4:	b80b883a 	mov	r5,r23
   25af8:	00279400 	call	27940 <__sbprintf>
   25afc:	00001106 	br	25b44 <___vfprintf_internal_r+0x418>
   25b00:	d9002c17 	ldw	r4,176(sp)
   25b04:	d9801e04 	addi	r6,sp,120
   25b08:	b80b883a 	mov	r5,r23
   25b0c:	002c2440 	call	2c244 <__sprint_r>
   25b10:	1000081e 	bne	r2,zero,25b34 <___vfprintf_internal_r+0x408>
   25b14:	da000404 	addi	r8,sp,16
   25b18:	003f5306 	br	25868 <__alt_data_end+0xfffe6468>
   25b1c:	d8802017 	ldw	r2,128(sp)
   25b20:	10000426 	beq	r2,zero,25b34 <___vfprintf_internal_r+0x408>
   25b24:	d9002c17 	ldw	r4,176(sp)
   25b28:	d9801e04 	addi	r6,sp,120
   25b2c:	b80b883a 	mov	r5,r23
   25b30:	002c2440 	call	2c244 <__sprint_r>
   25b34:	b880030b 	ldhu	r2,12(r23)
   25b38:	1080100c 	andi	r2,r2,64
   25b3c:	1005901e 	bne	r2,zero,27180 <___vfprintf_internal_r+0x1a54>
   25b40:	d8802f17 	ldw	r2,188(sp)
   25b44:	dfc04717 	ldw	ra,284(sp)
   25b48:	df004617 	ldw	fp,280(sp)
   25b4c:	ddc04517 	ldw	r23,276(sp)
   25b50:	dd804417 	ldw	r22,272(sp)
   25b54:	dd404317 	ldw	r21,268(sp)
   25b58:	dd004217 	ldw	r20,264(sp)
   25b5c:	dcc04117 	ldw	r19,260(sp)
   25b60:	dc804017 	ldw	r18,256(sp)
   25b64:	dc403f17 	ldw	r17,252(sp)
   25b68:	dc003e17 	ldw	r16,248(sp)
   25b6c:	dec04804 	addi	sp,sp,288
   25b70:	f800283a 	ret
   25b74:	d9002c17 	ldw	r4,176(sp)
   25b78:	00299d00 	call	299d0 <__sinit>
   25b7c:	003f0406 	br	25790 <__alt_data_end+0xfffe6390>
   25b80:	d8802d17 	ldw	r2,180(sp)
   25b84:	d9002d17 	ldw	r4,180(sp)
   25b88:	10800017 	ldw	r2,0(r2)
   25b8c:	d8803115 	stw	r2,196(sp)
   25b90:	20800104 	addi	r2,r4,4
   25b94:	d9003117 	ldw	r4,196(sp)
   25b98:	203fa716 	blt	r4,zero,25a38 <__alt_data_end+0xfffe6638>
   25b9c:	d8802d15 	stw	r2,180(sp)
   25ba0:	ac400007 	ldb	r17,0(r21)
   25ba4:	003f4206 	br	258b0 <__alt_data_end+0xfffe64b0>
   25ba8:	ac400007 	ldb	r17,0(r21)
   25bac:	aac00044 	addi	r11,r21,1
   25bb0:	8a872826 	beq	r17,r10,27854 <___vfprintf_internal_r+0x2128>
   25bb4:	88bff404 	addi	r2,r17,-48
   25bb8:	0009883a 	mov	r4,zero
   25bbc:	30867d36 	bltu	r6,r2,275b4 <___vfprintf_internal_r+0x1e88>
   25bc0:	5c400007 	ldb	r17,0(r11)
   25bc4:	210002a4 	muli	r4,r4,10
   25bc8:	5d400044 	addi	r21,r11,1
   25bcc:	a817883a 	mov	r11,r21
   25bd0:	2089883a 	add	r4,r4,r2
   25bd4:	88bff404 	addi	r2,r17,-48
   25bd8:	30bff92e 	bgeu	r6,r2,25bc0 <__alt_data_end+0xfffe67c0>
   25bdc:	2005c916 	blt	r4,zero,27304 <___vfprintf_internal_r+0x1bd8>
   25be0:	d9002915 	stw	r4,164(sp)
   25be4:	003f3306 	br	258b4 <__alt_data_end+0xfffe64b4>
   25be8:	94802014 	ori	r18,r18,128
   25bec:	ac400007 	ldb	r17,0(r21)
   25bf0:	003f2f06 	br	258b0 <__alt_data_end+0xfffe64b0>
   25bf4:	a809883a 	mov	r4,r21
   25bf8:	d8003115 	stw	zero,196(sp)
   25bfc:	88bff404 	addi	r2,r17,-48
   25c00:	0017883a 	mov	r11,zero
   25c04:	24400007 	ldb	r17,0(r4)
   25c08:	5ac002a4 	muli	r11,r11,10
   25c0c:	ad400044 	addi	r21,r21,1
   25c10:	a809883a 	mov	r4,r21
   25c14:	12d7883a 	add	r11,r2,r11
   25c18:	88bff404 	addi	r2,r17,-48
   25c1c:	30bff92e 	bgeu	r6,r2,25c04 <__alt_data_end+0xfffe6804>
   25c20:	dac03115 	stw	r11,196(sp)
   25c24:	003f2306 	br	258b4 <__alt_data_end+0xfffe64b4>
   25c28:	18c03fcc 	andi	r3,r3,255
   25c2c:	18072b1e 	bne	r3,zero,278dc <___vfprintf_internal_r+0x21b0>
   25c30:	94800414 	ori	r18,r18,16
   25c34:	9080080c 	andi	r2,r18,32
   25c38:	10037b26 	beq	r2,zero,26a28 <___vfprintf_internal_r+0x12fc>
   25c3c:	d9402d17 	ldw	r5,180(sp)
   25c40:	28800117 	ldw	r2,4(r5)
   25c44:	2cc00017 	ldw	r19,0(r5)
   25c48:	29400204 	addi	r5,r5,8
   25c4c:	d9402d15 	stw	r5,180(sp)
   25c50:	102d883a 	mov	r22,r2
   25c54:	10044b16 	blt	r2,zero,26d84 <___vfprintf_internal_r+0x1658>
   25c58:	d9402917 	ldw	r5,164(sp)
   25c5c:	df002783 	ldbu	fp,158(sp)
   25c60:	2803bc16 	blt	r5,zero,26b54 <___vfprintf_internal_r+0x1428>
   25c64:	00ffdfc4 	movi	r3,-129
   25c68:	9d84b03a 	or	r2,r19,r22
   25c6c:	90e4703a 	and	r18,r18,r3
   25c70:	10017726 	beq	r2,zero,26250 <___vfprintf_internal_r+0xb24>
   25c74:	b0038326 	beq	r22,zero,26a84 <___vfprintf_internal_r+0x1358>
   25c78:	dc402a15 	stw	r17,168(sp)
   25c7c:	dc001e04 	addi	r16,sp,120
   25c80:	b023883a 	mov	r17,r22
   25c84:	402d883a 	mov	r22,r8
   25c88:	9809883a 	mov	r4,r19
   25c8c:	880b883a 	mov	r5,r17
   25c90:	01800284 	movi	r6,10
   25c94:	000f883a 	mov	r7,zero
   25c98:	002f1b80 	call	2f1b8 <__umoddi3>
   25c9c:	10800c04 	addi	r2,r2,48
   25ca0:	843fffc4 	addi	r16,r16,-1
   25ca4:	9809883a 	mov	r4,r19
   25ca8:	880b883a 	mov	r5,r17
   25cac:	80800005 	stb	r2,0(r16)
   25cb0:	01800284 	movi	r6,10
   25cb4:	000f883a 	mov	r7,zero
   25cb8:	002ec400 	call	2ec40 <__udivdi3>
   25cbc:	1027883a 	mov	r19,r2
   25cc0:	10c4b03a 	or	r2,r2,r3
   25cc4:	1823883a 	mov	r17,r3
   25cc8:	103fef1e 	bne	r2,zero,25c88 <__alt_data_end+0xfffe6888>
   25ccc:	d8c02817 	ldw	r3,160(sp)
   25cd0:	dc402a17 	ldw	r17,168(sp)
   25cd4:	b011883a 	mov	r8,r22
   25cd8:	1c07c83a 	sub	r3,r3,r16
   25cdc:	d8c02e15 	stw	r3,184(sp)
   25ce0:	00005906 	br	25e48 <___vfprintf_internal_r+0x71c>
   25ce4:	18c03fcc 	andi	r3,r3,255
   25ce8:	1806fa1e 	bne	r3,zero,278d4 <___vfprintf_internal_r+0x21a8>
   25cec:	9080020c 	andi	r2,r18,8
   25cf0:	10048a26 	beq	r2,zero,26f1c <___vfprintf_internal_r+0x17f0>
   25cf4:	d8c02d17 	ldw	r3,180(sp)
   25cf8:	d9002d17 	ldw	r4,180(sp)
   25cfc:	d9402d17 	ldw	r5,180(sp)
   25d00:	18c00017 	ldw	r3,0(r3)
   25d04:	21000117 	ldw	r4,4(r4)
   25d08:	29400204 	addi	r5,r5,8
   25d0c:	d8c03615 	stw	r3,216(sp)
   25d10:	d9003815 	stw	r4,224(sp)
   25d14:	d9402d15 	stw	r5,180(sp)
   25d18:	d9003617 	ldw	r4,216(sp)
   25d1c:	d9403817 	ldw	r5,224(sp)
   25d20:	da003d15 	stw	r8,244(sp)
   25d24:	04000044 	movi	r16,1
   25d28:	002bdd00 	call	2bdd0 <__fpclassifyd>
   25d2c:	da003d17 	ldw	r8,244(sp)
   25d30:	14041f1e 	bne	r2,r16,26db0 <___vfprintf_internal_r+0x1684>
   25d34:	d9003617 	ldw	r4,216(sp)
   25d38:	d9403817 	ldw	r5,224(sp)
   25d3c:	000d883a 	mov	r6,zero
   25d40:	000f883a 	mov	r7,zero
   25d44:	00241300 	call	24130 <__ledf2>
   25d48:	da003d17 	ldw	r8,244(sp)
   25d4c:	1005be16 	blt	r2,zero,27448 <___vfprintf_internal_r+0x1d1c>
   25d50:	df002783 	ldbu	fp,158(sp)
   25d54:	008011c4 	movi	r2,71
   25d58:	1445330e 	bge	r2,r17,27228 <___vfprintf_internal_r+0x1afc>
   25d5c:	040000f4 	movhi	r16,3
   25d60:	8408e804 	addi	r16,r16,9120
   25d64:	00c000c4 	movi	r3,3
   25d68:	00bfdfc4 	movi	r2,-129
   25d6c:	d8c02a15 	stw	r3,168(sp)
   25d70:	90a4703a 	and	r18,r18,r2
   25d74:	d8c02e15 	stw	r3,184(sp)
   25d78:	d8002915 	stw	zero,164(sp)
   25d7c:	d8003215 	stw	zero,200(sp)
   25d80:	00003706 	br	25e60 <___vfprintf_internal_r+0x734>
   25d84:	94800214 	ori	r18,r18,8
   25d88:	ac400007 	ldb	r17,0(r21)
   25d8c:	003ec806 	br	258b0 <__alt_data_end+0xfffe64b0>
   25d90:	18c03fcc 	andi	r3,r3,255
   25d94:	1806db1e 	bne	r3,zero,27904 <___vfprintf_internal_r+0x21d8>
   25d98:	94800414 	ori	r18,r18,16
   25d9c:	9080080c 	andi	r2,r18,32
   25da0:	1002d826 	beq	r2,zero,26904 <___vfprintf_internal_r+0x11d8>
   25da4:	d9402d17 	ldw	r5,180(sp)
   25da8:	d8c02917 	ldw	r3,164(sp)
   25dac:	d8002785 	stb	zero,158(sp)
   25db0:	28800204 	addi	r2,r5,8
   25db4:	2cc00017 	ldw	r19,0(r5)
   25db8:	2d800117 	ldw	r22,4(r5)
   25dbc:	18048f16 	blt	r3,zero,26ffc <___vfprintf_internal_r+0x18d0>
   25dc0:	013fdfc4 	movi	r4,-129
   25dc4:	9d86b03a 	or	r3,r19,r22
   25dc8:	d8802d15 	stw	r2,180(sp)
   25dcc:	9124703a 	and	r18,r18,r4
   25dd0:	1802d91e 	bne	r3,zero,26938 <___vfprintf_internal_r+0x120c>
   25dd4:	d8c02917 	ldw	r3,164(sp)
   25dd8:	0039883a 	mov	fp,zero
   25ddc:	1805c326 	beq	r3,zero,274ec <___vfprintf_internal_r+0x1dc0>
   25de0:	0027883a 	mov	r19,zero
   25de4:	002d883a 	mov	r22,zero
   25de8:	dc001e04 	addi	r16,sp,120
   25dec:	9806d0fa 	srli	r3,r19,3
   25df0:	b008977a 	slli	r4,r22,29
   25df4:	b02cd0fa 	srli	r22,r22,3
   25df8:	9cc001cc 	andi	r19,r19,7
   25dfc:	98800c04 	addi	r2,r19,48
   25e00:	843fffc4 	addi	r16,r16,-1
   25e04:	20e6b03a 	or	r19,r4,r3
   25e08:	80800005 	stb	r2,0(r16)
   25e0c:	9d86b03a 	or	r3,r19,r22
   25e10:	183ff61e 	bne	r3,zero,25dec <__alt_data_end+0xfffe69ec>
   25e14:	90c0004c 	andi	r3,r18,1
   25e18:	18013b26 	beq	r3,zero,26308 <___vfprintf_internal_r+0xbdc>
   25e1c:	10803fcc 	andi	r2,r2,255
   25e20:	1080201c 	xori	r2,r2,128
   25e24:	10bfe004 	addi	r2,r2,-128
   25e28:	00c00c04 	movi	r3,48
   25e2c:	10c13626 	beq	r2,r3,26308 <___vfprintf_internal_r+0xbdc>
   25e30:	80ffffc5 	stb	r3,-1(r16)
   25e34:	d8c02817 	ldw	r3,160(sp)
   25e38:	80bfffc4 	addi	r2,r16,-1
   25e3c:	1021883a 	mov	r16,r2
   25e40:	1887c83a 	sub	r3,r3,r2
   25e44:	d8c02e15 	stw	r3,184(sp)
   25e48:	d8802e17 	ldw	r2,184(sp)
   25e4c:	d9002917 	ldw	r4,164(sp)
   25e50:	1100010e 	bge	r2,r4,25e58 <___vfprintf_internal_r+0x72c>
   25e54:	2005883a 	mov	r2,r4
   25e58:	d8802a15 	stw	r2,168(sp)
   25e5c:	d8003215 	stw	zero,200(sp)
   25e60:	e7003fcc 	andi	fp,fp,255
   25e64:	e700201c 	xori	fp,fp,128
   25e68:	e73fe004 	addi	fp,fp,-128
   25e6c:	e0000326 	beq	fp,zero,25e7c <___vfprintf_internal_r+0x750>
   25e70:	d8c02a17 	ldw	r3,168(sp)
   25e74:	18c00044 	addi	r3,r3,1
   25e78:	d8c02a15 	stw	r3,168(sp)
   25e7c:	90c0008c 	andi	r3,r18,2
   25e80:	d8c02b15 	stw	r3,172(sp)
   25e84:	18000326 	beq	r3,zero,25e94 <___vfprintf_internal_r+0x768>
   25e88:	d8c02a17 	ldw	r3,168(sp)
   25e8c:	18c00084 	addi	r3,r3,2
   25e90:	d8c02a15 	stw	r3,168(sp)
   25e94:	90c0210c 	andi	r3,r18,132
   25e98:	d8c03015 	stw	r3,192(sp)
   25e9c:	1801a31e 	bne	r3,zero,2652c <___vfprintf_internal_r+0xe00>
   25ea0:	d9003117 	ldw	r4,196(sp)
   25ea4:	d8c02a17 	ldw	r3,168(sp)
   25ea8:	20e7c83a 	sub	r19,r4,r3
   25eac:	04c19f0e 	bge	zero,r19,2652c <___vfprintf_internal_r+0xe00>
   25eb0:	02400404 	movi	r9,16
   25eb4:	d8c02017 	ldw	r3,128(sp)
   25eb8:	d8801f17 	ldw	r2,124(sp)
   25ebc:	4cc50d0e 	bge	r9,r19,272f4 <___vfprintf_internal_r+0x1bc8>
   25ec0:	014000f4 	movhi	r5,3
   25ec4:	2948fb84 	addi	r5,r5,9198
   25ec8:	dc403b15 	stw	r17,236(sp)
   25ecc:	d9403515 	stw	r5,212(sp)
   25ed0:	9823883a 	mov	r17,r19
   25ed4:	482d883a 	mov	r22,r9
   25ed8:	9027883a 	mov	r19,r18
   25edc:	070001c4 	movi	fp,7
   25ee0:	8025883a 	mov	r18,r16
   25ee4:	dc002c17 	ldw	r16,176(sp)
   25ee8:	00000306 	br	25ef8 <___vfprintf_internal_r+0x7cc>
   25eec:	8c7ffc04 	addi	r17,r17,-16
   25ef0:	42000204 	addi	r8,r8,8
   25ef4:	b440130e 	bge	r22,r17,25f44 <___vfprintf_internal_r+0x818>
   25ef8:	010000f4 	movhi	r4,3
   25efc:	18c00404 	addi	r3,r3,16
   25f00:	10800044 	addi	r2,r2,1
   25f04:	2108fb84 	addi	r4,r4,9198
   25f08:	41000015 	stw	r4,0(r8)
   25f0c:	45800115 	stw	r22,4(r8)
   25f10:	d8c02015 	stw	r3,128(sp)
   25f14:	d8801f15 	stw	r2,124(sp)
   25f18:	e0bff40e 	bge	fp,r2,25eec <__alt_data_end+0xfffe6aec>
   25f1c:	d9801e04 	addi	r6,sp,120
   25f20:	b80b883a 	mov	r5,r23
   25f24:	8009883a 	mov	r4,r16
   25f28:	002c2440 	call	2c244 <__sprint_r>
   25f2c:	103f011e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   25f30:	8c7ffc04 	addi	r17,r17,-16
   25f34:	d8c02017 	ldw	r3,128(sp)
   25f38:	d8801f17 	ldw	r2,124(sp)
   25f3c:	da000404 	addi	r8,sp,16
   25f40:	b47fed16 	blt	r22,r17,25ef8 <__alt_data_end+0xfffe6af8>
   25f44:	9021883a 	mov	r16,r18
   25f48:	9825883a 	mov	r18,r19
   25f4c:	8827883a 	mov	r19,r17
   25f50:	dc403b17 	ldw	r17,236(sp)
   25f54:	d9403517 	ldw	r5,212(sp)
   25f58:	98c7883a 	add	r3,r19,r3
   25f5c:	10800044 	addi	r2,r2,1
   25f60:	41400015 	stw	r5,0(r8)
   25f64:	44c00115 	stw	r19,4(r8)
   25f68:	d8c02015 	stw	r3,128(sp)
   25f6c:	d8801f15 	stw	r2,124(sp)
   25f70:	010001c4 	movi	r4,7
   25f74:	2082a316 	blt	r4,r2,26a04 <___vfprintf_internal_r+0x12d8>
   25f78:	df002787 	ldb	fp,158(sp)
   25f7c:	42000204 	addi	r8,r8,8
   25f80:	e0000c26 	beq	fp,zero,25fb4 <___vfprintf_internal_r+0x888>
   25f84:	d8801f17 	ldw	r2,124(sp)
   25f88:	d9002784 	addi	r4,sp,158
   25f8c:	18c00044 	addi	r3,r3,1
   25f90:	10800044 	addi	r2,r2,1
   25f94:	41000015 	stw	r4,0(r8)
   25f98:	01000044 	movi	r4,1
   25f9c:	41000115 	stw	r4,4(r8)
   25fa0:	d8c02015 	stw	r3,128(sp)
   25fa4:	d8801f15 	stw	r2,124(sp)
   25fa8:	010001c4 	movi	r4,7
   25fac:	20823c16 	blt	r4,r2,268a0 <___vfprintf_internal_r+0x1174>
   25fb0:	42000204 	addi	r8,r8,8
   25fb4:	d8802b17 	ldw	r2,172(sp)
   25fb8:	10000c26 	beq	r2,zero,25fec <___vfprintf_internal_r+0x8c0>
   25fbc:	d8801f17 	ldw	r2,124(sp)
   25fc0:	d9002704 	addi	r4,sp,156
   25fc4:	18c00084 	addi	r3,r3,2
   25fc8:	10800044 	addi	r2,r2,1
   25fcc:	41000015 	stw	r4,0(r8)
   25fd0:	01000084 	movi	r4,2
   25fd4:	41000115 	stw	r4,4(r8)
   25fd8:	d8c02015 	stw	r3,128(sp)
   25fdc:	d8801f15 	stw	r2,124(sp)
   25fe0:	010001c4 	movi	r4,7
   25fe4:	20823616 	blt	r4,r2,268c0 <___vfprintf_internal_r+0x1194>
   25fe8:	42000204 	addi	r8,r8,8
   25fec:	d9003017 	ldw	r4,192(sp)
   25ff0:	00802004 	movi	r2,128
   25ff4:	20819926 	beq	r4,r2,2665c <___vfprintf_internal_r+0xf30>
   25ff8:	d9402917 	ldw	r5,164(sp)
   25ffc:	d8802e17 	ldw	r2,184(sp)
   26000:	28adc83a 	sub	r22,r5,r2
   26004:	0580310e 	bge	zero,r22,260cc <___vfprintf_internal_r+0x9a0>
   26008:	07000404 	movi	fp,16
   2600c:	d8801f17 	ldw	r2,124(sp)
   26010:	e584140e 	bge	fp,r22,27064 <___vfprintf_internal_r+0x1938>
   26014:	014000f4 	movhi	r5,3
   26018:	2948f784 	addi	r5,r5,9182
   2601c:	dc402915 	stw	r17,164(sp)
   26020:	d9402b15 	stw	r5,172(sp)
   26024:	b023883a 	mov	r17,r22
   26028:	04c001c4 	movi	r19,7
   2602c:	a82d883a 	mov	r22,r21
   26030:	902b883a 	mov	r21,r18
   26034:	8025883a 	mov	r18,r16
   26038:	dc002c17 	ldw	r16,176(sp)
   2603c:	00000306 	br	2604c <___vfprintf_internal_r+0x920>
   26040:	8c7ffc04 	addi	r17,r17,-16
   26044:	42000204 	addi	r8,r8,8
   26048:	e440110e 	bge	fp,r17,26090 <___vfprintf_internal_r+0x964>
   2604c:	18c00404 	addi	r3,r3,16
   26050:	10800044 	addi	r2,r2,1
   26054:	45000015 	stw	r20,0(r8)
   26058:	47000115 	stw	fp,4(r8)
   2605c:	d8c02015 	stw	r3,128(sp)
   26060:	d8801f15 	stw	r2,124(sp)
   26064:	98bff60e 	bge	r19,r2,26040 <__alt_data_end+0xfffe6c40>
   26068:	d9801e04 	addi	r6,sp,120
   2606c:	b80b883a 	mov	r5,r23
   26070:	8009883a 	mov	r4,r16
   26074:	002c2440 	call	2c244 <__sprint_r>
   26078:	103eae1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   2607c:	8c7ffc04 	addi	r17,r17,-16
   26080:	d8c02017 	ldw	r3,128(sp)
   26084:	d8801f17 	ldw	r2,124(sp)
   26088:	da000404 	addi	r8,sp,16
   2608c:	e47fef16 	blt	fp,r17,2604c <__alt_data_end+0xfffe6c4c>
   26090:	9021883a 	mov	r16,r18
   26094:	a825883a 	mov	r18,r21
   26098:	b02b883a 	mov	r21,r22
   2609c:	882d883a 	mov	r22,r17
   260a0:	dc402917 	ldw	r17,164(sp)
   260a4:	d9002b17 	ldw	r4,172(sp)
   260a8:	1d87883a 	add	r3,r3,r22
   260ac:	10800044 	addi	r2,r2,1
   260b0:	41000015 	stw	r4,0(r8)
   260b4:	45800115 	stw	r22,4(r8)
   260b8:	d8c02015 	stw	r3,128(sp)
   260bc:	d8801f15 	stw	r2,124(sp)
   260c0:	010001c4 	movi	r4,7
   260c4:	2081ee16 	blt	r4,r2,26880 <___vfprintf_internal_r+0x1154>
   260c8:	42000204 	addi	r8,r8,8
   260cc:	9080400c 	andi	r2,r18,256
   260d0:	1001181e 	bne	r2,zero,26534 <___vfprintf_internal_r+0xe08>
   260d4:	d9402e17 	ldw	r5,184(sp)
   260d8:	d8801f17 	ldw	r2,124(sp)
   260dc:	44000015 	stw	r16,0(r8)
   260e0:	1947883a 	add	r3,r3,r5
   260e4:	10800044 	addi	r2,r2,1
   260e8:	41400115 	stw	r5,4(r8)
   260ec:	d8c02015 	stw	r3,128(sp)
   260f0:	d8801f15 	stw	r2,124(sp)
   260f4:	010001c4 	movi	r4,7
   260f8:	2081d316 	blt	r4,r2,26848 <___vfprintf_internal_r+0x111c>
   260fc:	42000204 	addi	r8,r8,8
   26100:	9480010c 	andi	r18,r18,4
   26104:	90003226 	beq	r18,zero,261d0 <___vfprintf_internal_r+0xaa4>
   26108:	d9403117 	ldw	r5,196(sp)
   2610c:	d8802a17 	ldw	r2,168(sp)
   26110:	28a1c83a 	sub	r16,r5,r2
   26114:	04002e0e 	bge	zero,r16,261d0 <___vfprintf_internal_r+0xaa4>
   26118:	04400404 	movi	r17,16
   2611c:	d8801f17 	ldw	r2,124(sp)
   26120:	8c04a20e 	bge	r17,r16,273ac <___vfprintf_internal_r+0x1c80>
   26124:	014000f4 	movhi	r5,3
   26128:	2948fb84 	addi	r5,r5,9198
   2612c:	d9403515 	stw	r5,212(sp)
   26130:	048001c4 	movi	r18,7
   26134:	dcc02c17 	ldw	r19,176(sp)
   26138:	00000306 	br	26148 <___vfprintf_internal_r+0xa1c>
   2613c:	843ffc04 	addi	r16,r16,-16
   26140:	42000204 	addi	r8,r8,8
   26144:	8c00130e 	bge	r17,r16,26194 <___vfprintf_internal_r+0xa68>
   26148:	010000f4 	movhi	r4,3
   2614c:	18c00404 	addi	r3,r3,16
   26150:	10800044 	addi	r2,r2,1
   26154:	2108fb84 	addi	r4,r4,9198
   26158:	41000015 	stw	r4,0(r8)
   2615c:	44400115 	stw	r17,4(r8)
   26160:	d8c02015 	stw	r3,128(sp)
   26164:	d8801f15 	stw	r2,124(sp)
   26168:	90bff40e 	bge	r18,r2,2613c <__alt_data_end+0xfffe6d3c>
   2616c:	d9801e04 	addi	r6,sp,120
   26170:	b80b883a 	mov	r5,r23
   26174:	9809883a 	mov	r4,r19
   26178:	002c2440 	call	2c244 <__sprint_r>
   2617c:	103e6d1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26180:	843ffc04 	addi	r16,r16,-16
   26184:	d8c02017 	ldw	r3,128(sp)
   26188:	d8801f17 	ldw	r2,124(sp)
   2618c:	da000404 	addi	r8,sp,16
   26190:	8c3fed16 	blt	r17,r16,26148 <__alt_data_end+0xfffe6d48>
   26194:	d9403517 	ldw	r5,212(sp)
   26198:	1c07883a 	add	r3,r3,r16
   2619c:	10800044 	addi	r2,r2,1
   261a0:	41400015 	stw	r5,0(r8)
   261a4:	44000115 	stw	r16,4(r8)
   261a8:	d8c02015 	stw	r3,128(sp)
   261ac:	d8801f15 	stw	r2,124(sp)
   261b0:	010001c4 	movi	r4,7
   261b4:	2080060e 	bge	r4,r2,261d0 <___vfprintf_internal_r+0xaa4>
   261b8:	d9002c17 	ldw	r4,176(sp)
   261bc:	d9801e04 	addi	r6,sp,120
   261c0:	b80b883a 	mov	r5,r23
   261c4:	002c2440 	call	2c244 <__sprint_r>
   261c8:	103e5a1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   261cc:	d8c02017 	ldw	r3,128(sp)
   261d0:	d8803117 	ldw	r2,196(sp)
   261d4:	d9002a17 	ldw	r4,168(sp)
   261d8:	1100010e 	bge	r2,r4,261e0 <___vfprintf_internal_r+0xab4>
   261dc:	2005883a 	mov	r2,r4
   261e0:	d9402f17 	ldw	r5,188(sp)
   261e4:	288b883a 	add	r5,r5,r2
   261e8:	d9402f15 	stw	r5,188(sp)
   261ec:	18019e1e 	bne	r3,zero,26868 <___vfprintf_internal_r+0x113c>
   261f0:	a8800007 	ldb	r2,0(r21)
   261f4:	d8001f15 	stw	zero,124(sp)
   261f8:	da000404 	addi	r8,sp,16
   261fc:	103d851e 	bne	r2,zero,25814 <__alt_data_end+0xfffe6414>
   26200:	a821883a 	mov	r16,r21
   26204:	003d9b06 	br	25874 <__alt_data_end+0xfffe6474>
   26208:	18c03fcc 	andi	r3,r3,255
   2620c:	1805c11e 	bne	r3,zero,27914 <___vfprintf_internal_r+0x21e8>
   26210:	94800414 	ori	r18,r18,16
   26214:	9080080c 	andi	r2,r18,32
   26218:	10020c26 	beq	r2,zero,26a4c <___vfprintf_internal_r+0x1320>
   2621c:	d8802d17 	ldw	r2,180(sp)
   26220:	d9002917 	ldw	r4,164(sp)
   26224:	d8002785 	stb	zero,158(sp)
   26228:	10c00204 	addi	r3,r2,8
   2622c:	14c00017 	ldw	r19,0(r2)
   26230:	15800117 	ldw	r22,4(r2)
   26234:	20040f16 	blt	r4,zero,27274 <___vfprintf_internal_r+0x1b48>
   26238:	013fdfc4 	movi	r4,-129
   2623c:	9d84b03a 	or	r2,r19,r22
   26240:	d8c02d15 	stw	r3,180(sp)
   26244:	9124703a 	and	r18,r18,r4
   26248:	0039883a 	mov	fp,zero
   2624c:	103e891e 	bne	r2,zero,25c74 <__alt_data_end+0xfffe6874>
   26250:	d9002917 	ldw	r4,164(sp)
   26254:	2002c11e 	bne	r4,zero,26d5c <___vfprintf_internal_r+0x1630>
   26258:	d8002915 	stw	zero,164(sp)
   2625c:	d8002e15 	stw	zero,184(sp)
   26260:	dc001e04 	addi	r16,sp,120
   26264:	003ef806 	br	25e48 <__alt_data_end+0xfffe6a48>
   26268:	18c03fcc 	andi	r3,r3,255
   2626c:	18059d1e 	bne	r3,zero,278e4 <___vfprintf_internal_r+0x21b8>
   26270:	014000f4 	movhi	r5,3
   26274:	2948eb04 	addi	r5,r5,9132
   26278:	d9403915 	stw	r5,228(sp)
   2627c:	9080080c 	andi	r2,r18,32
   26280:	10005226 	beq	r2,zero,263cc <___vfprintf_internal_r+0xca0>
   26284:	d8802d17 	ldw	r2,180(sp)
   26288:	14c00017 	ldw	r19,0(r2)
   2628c:	15800117 	ldw	r22,4(r2)
   26290:	10800204 	addi	r2,r2,8
   26294:	d8802d15 	stw	r2,180(sp)
   26298:	9080004c 	andi	r2,r18,1
   2629c:	10019026 	beq	r2,zero,268e0 <___vfprintf_internal_r+0x11b4>
   262a0:	9d84b03a 	or	r2,r19,r22
   262a4:	10036926 	beq	r2,zero,2704c <___vfprintf_internal_r+0x1920>
   262a8:	d8c02917 	ldw	r3,164(sp)
   262ac:	00800c04 	movi	r2,48
   262b0:	d8802705 	stb	r2,156(sp)
   262b4:	dc402745 	stb	r17,157(sp)
   262b8:	d8002785 	stb	zero,158(sp)
   262bc:	90800094 	ori	r2,r18,2
   262c0:	18045d16 	blt	r3,zero,27438 <___vfprintf_internal_r+0x1d0c>
   262c4:	00bfdfc4 	movi	r2,-129
   262c8:	90a4703a 	and	r18,r18,r2
   262cc:	94800094 	ori	r18,r18,2
   262d0:	0039883a 	mov	fp,zero
   262d4:	d9003917 	ldw	r4,228(sp)
   262d8:	dc001e04 	addi	r16,sp,120
   262dc:	988003cc 	andi	r2,r19,15
   262e0:	b006973a 	slli	r3,r22,28
   262e4:	2085883a 	add	r2,r4,r2
   262e8:	9826d13a 	srli	r19,r19,4
   262ec:	10800003 	ldbu	r2,0(r2)
   262f0:	b02cd13a 	srli	r22,r22,4
   262f4:	843fffc4 	addi	r16,r16,-1
   262f8:	1ce6b03a 	or	r19,r3,r19
   262fc:	80800005 	stb	r2,0(r16)
   26300:	9d84b03a 	or	r2,r19,r22
   26304:	103ff51e 	bne	r2,zero,262dc <__alt_data_end+0xfffe6edc>
   26308:	d8c02817 	ldw	r3,160(sp)
   2630c:	1c07c83a 	sub	r3,r3,r16
   26310:	d8c02e15 	stw	r3,184(sp)
   26314:	003ecc06 	br	25e48 <__alt_data_end+0xfffe6a48>
   26318:	18c03fcc 	andi	r3,r3,255
   2631c:	183e9f26 	beq	r3,zero,25d9c <__alt_data_end+0xfffe699c>
   26320:	d9c02785 	stb	r7,158(sp)
   26324:	003e9d06 	br	25d9c <__alt_data_end+0xfffe699c>
   26328:	00c00044 	movi	r3,1
   2632c:	01c00ac4 	movi	r7,43
   26330:	ac400007 	ldb	r17,0(r21)
   26334:	003d5e06 	br	258b0 <__alt_data_end+0xfffe64b0>
   26338:	94800814 	ori	r18,r18,32
   2633c:	ac400007 	ldb	r17,0(r21)
   26340:	003d5b06 	br	258b0 <__alt_data_end+0xfffe64b0>
   26344:	d8c02d17 	ldw	r3,180(sp)
   26348:	d8002785 	stb	zero,158(sp)
   2634c:	1c000017 	ldw	r16,0(r3)
   26350:	1cc00104 	addi	r19,r3,4
   26354:	80041926 	beq	r16,zero,273bc <___vfprintf_internal_r+0x1c90>
   26358:	d9002917 	ldw	r4,164(sp)
   2635c:	2003d016 	blt	r4,zero,272a0 <___vfprintf_internal_r+0x1b74>
   26360:	200d883a 	mov	r6,r4
   26364:	000b883a 	mov	r5,zero
   26368:	8009883a 	mov	r4,r16
   2636c:	da003d15 	stw	r8,244(sp)
   26370:	002aa800 	call	2aa80 <memchr>
   26374:	da003d17 	ldw	r8,244(sp)
   26378:	10045426 	beq	r2,zero,274cc <___vfprintf_internal_r+0x1da0>
   2637c:	1405c83a 	sub	r2,r2,r16
   26380:	d8802e15 	stw	r2,184(sp)
   26384:	1003cc16 	blt	r2,zero,272b8 <___vfprintf_internal_r+0x1b8c>
   26388:	df002783 	ldbu	fp,158(sp)
   2638c:	d8802a15 	stw	r2,168(sp)
   26390:	dcc02d15 	stw	r19,180(sp)
   26394:	d8002915 	stw	zero,164(sp)
   26398:	d8003215 	stw	zero,200(sp)
   2639c:	003eb006 	br	25e60 <__alt_data_end+0xfffe6a60>
   263a0:	18c03fcc 	andi	r3,r3,255
   263a4:	183f9b26 	beq	r3,zero,26214 <__alt_data_end+0xfffe6e14>
   263a8:	d9c02785 	stb	r7,158(sp)
   263ac:	003f9906 	br	26214 <__alt_data_end+0xfffe6e14>
   263b0:	18c03fcc 	andi	r3,r3,255
   263b4:	1805551e 	bne	r3,zero,2790c <___vfprintf_internal_r+0x21e0>
   263b8:	014000f4 	movhi	r5,3
   263bc:	2948f004 	addi	r5,r5,9152
   263c0:	d9403915 	stw	r5,228(sp)
   263c4:	9080080c 	andi	r2,r18,32
   263c8:	103fae1e 	bne	r2,zero,26284 <__alt_data_end+0xfffe6e84>
   263cc:	9080040c 	andi	r2,r18,16
   263d0:	1002de26 	beq	r2,zero,26f4c <___vfprintf_internal_r+0x1820>
   263d4:	d8c02d17 	ldw	r3,180(sp)
   263d8:	002d883a 	mov	r22,zero
   263dc:	1cc00017 	ldw	r19,0(r3)
   263e0:	18c00104 	addi	r3,r3,4
   263e4:	d8c02d15 	stw	r3,180(sp)
   263e8:	003fab06 	br	26298 <__alt_data_end+0xfffe6e98>
   263ec:	38803fcc 	andi	r2,r7,255
   263f0:	1080201c 	xori	r2,r2,128
   263f4:	10bfe004 	addi	r2,r2,-128
   263f8:	1002d21e 	bne	r2,zero,26f44 <___vfprintf_internal_r+0x1818>
   263fc:	00c00044 	movi	r3,1
   26400:	01c00804 	movi	r7,32
   26404:	ac400007 	ldb	r17,0(r21)
   26408:	003d2906 	br	258b0 <__alt_data_end+0xfffe64b0>
   2640c:	94800054 	ori	r18,r18,1
   26410:	ac400007 	ldb	r17,0(r21)
   26414:	003d2606 	br	258b0 <__alt_data_end+0xfffe64b0>
   26418:	18c03fcc 	andi	r3,r3,255
   2641c:	183e0526 	beq	r3,zero,25c34 <__alt_data_end+0xfffe6834>
   26420:	d9c02785 	stb	r7,158(sp)
   26424:	003e0306 	br	25c34 <__alt_data_end+0xfffe6834>
   26428:	94801014 	ori	r18,r18,64
   2642c:	ac400007 	ldb	r17,0(r21)
   26430:	003d1f06 	br	258b0 <__alt_data_end+0xfffe64b0>
   26434:	ac400007 	ldb	r17,0(r21)
   26438:	8a438726 	beq	r17,r9,27258 <___vfprintf_internal_r+0x1b2c>
   2643c:	94800414 	ori	r18,r18,16
   26440:	003d1b06 	br	258b0 <__alt_data_end+0xfffe64b0>
   26444:	18c03fcc 	andi	r3,r3,255
   26448:	1805341e 	bne	r3,zero,2791c <___vfprintf_internal_r+0x21f0>
   2644c:	9080080c 	andi	r2,r18,32
   26450:	1002cd26 	beq	r2,zero,26f88 <___vfprintf_internal_r+0x185c>
   26454:	d9402d17 	ldw	r5,180(sp)
   26458:	d9002f17 	ldw	r4,188(sp)
   2645c:	28800017 	ldw	r2,0(r5)
   26460:	2007d7fa 	srai	r3,r4,31
   26464:	29400104 	addi	r5,r5,4
   26468:	d9402d15 	stw	r5,180(sp)
   2646c:	11000015 	stw	r4,0(r2)
   26470:	10c00115 	stw	r3,4(r2)
   26474:	003ce506 	br	2580c <__alt_data_end+0xfffe640c>
   26478:	d8c02d17 	ldw	r3,180(sp)
   2647c:	d9002d17 	ldw	r4,180(sp)
   26480:	d8002785 	stb	zero,158(sp)
   26484:	18800017 	ldw	r2,0(r3)
   26488:	21000104 	addi	r4,r4,4
   2648c:	00c00044 	movi	r3,1
   26490:	d8c02a15 	stw	r3,168(sp)
   26494:	d8801405 	stb	r2,80(sp)
   26498:	d9002d15 	stw	r4,180(sp)
   2649c:	d8c02e15 	stw	r3,184(sp)
   264a0:	d8002915 	stw	zero,164(sp)
   264a4:	d8003215 	stw	zero,200(sp)
   264a8:	dc001404 	addi	r16,sp,80
   264ac:	0039883a 	mov	fp,zero
   264b0:	003e7206 	br	25e7c <__alt_data_end+0xfffe6a7c>
   264b4:	010000f4 	movhi	r4,3
   264b8:	2108f004 	addi	r4,r4,9152
   264bc:	0039883a 	mov	fp,zero
   264c0:	d9003915 	stw	r4,228(sp)
   264c4:	04401e04 	movi	r17,120
   264c8:	003f8206 	br	262d4 <__alt_data_end+0xfffe6ed4>
   264cc:	18c03fcc 	andi	r3,r3,255
   264d0:	1805061e 	bne	r3,zero,278ec <___vfprintf_internal_r+0x21c0>
   264d4:	883d9126 	beq	r17,zero,25b1c <__alt_data_end+0xfffe671c>
   264d8:	00c00044 	movi	r3,1
   264dc:	d8c02a15 	stw	r3,168(sp)
   264e0:	dc401405 	stb	r17,80(sp)
   264e4:	d8002785 	stb	zero,158(sp)
   264e8:	003fec06 	br	2649c <__alt_data_end+0xfffe709c>
   264ec:	014000f4 	movhi	r5,3
   264f0:	2948f004 	addi	r5,r5,9152
   264f4:	d9403915 	stw	r5,228(sp)
   264f8:	d8c02d15 	stw	r3,180(sp)
   264fc:	1025883a 	mov	r18,r2
   26500:	04401e04 	movi	r17,120
   26504:	9d84b03a 	or	r2,r19,r22
   26508:	1000fc1e 	bne	r2,zero,268fc <___vfprintf_internal_r+0x11d0>
   2650c:	0039883a 	mov	fp,zero
   26510:	00800084 	movi	r2,2
   26514:	10803fcc 	andi	r2,r2,255
   26518:	00c00044 	movi	r3,1
   2651c:	10c20f26 	beq	r2,r3,26d5c <___vfprintf_internal_r+0x1630>
   26520:	00c00084 	movi	r3,2
   26524:	10fd6326 	beq	r2,r3,25ab4 <__alt_data_end+0xfffe66b4>
   26528:	003e2d06 	br	25de0 <__alt_data_end+0xfffe69e0>
   2652c:	d8c02017 	ldw	r3,128(sp)
   26530:	003e9306 	br	25f80 <__alt_data_end+0xfffe6b80>
   26534:	00801944 	movi	r2,101
   26538:	14407e0e 	bge	r2,r17,26734 <___vfprintf_internal_r+0x1008>
   2653c:	d9003617 	ldw	r4,216(sp)
   26540:	d9403817 	ldw	r5,224(sp)
   26544:	000d883a 	mov	r6,zero
   26548:	000f883a 	mov	r7,zero
   2654c:	d8c03c15 	stw	r3,240(sp)
   26550:	da003d15 	stw	r8,244(sp)
   26554:	002f6f00 	call	2f6f0 <__eqdf2>
   26558:	d8c03c17 	ldw	r3,240(sp)
   2655c:	da003d17 	ldw	r8,244(sp)
   26560:	1000f71e 	bne	r2,zero,26940 <___vfprintf_internal_r+0x1214>
   26564:	d8801f17 	ldw	r2,124(sp)
   26568:	010000f4 	movhi	r4,3
   2656c:	2108f704 	addi	r4,r4,9180
   26570:	18c00044 	addi	r3,r3,1
   26574:	10800044 	addi	r2,r2,1
   26578:	41000015 	stw	r4,0(r8)
   2657c:	01000044 	movi	r4,1
   26580:	41000115 	stw	r4,4(r8)
   26584:	d8c02015 	stw	r3,128(sp)
   26588:	d8801f15 	stw	r2,124(sp)
   2658c:	010001c4 	movi	r4,7
   26590:	2082b816 	blt	r4,r2,27074 <___vfprintf_internal_r+0x1948>
   26594:	42000204 	addi	r8,r8,8
   26598:	d8802617 	ldw	r2,152(sp)
   2659c:	d9403317 	ldw	r5,204(sp)
   265a0:	11400216 	blt	r2,r5,265ac <___vfprintf_internal_r+0xe80>
   265a4:	9080004c 	andi	r2,r18,1
   265a8:	103ed526 	beq	r2,zero,26100 <__alt_data_end+0xfffe6d00>
   265ac:	d8803717 	ldw	r2,220(sp)
   265b0:	d9003417 	ldw	r4,208(sp)
   265b4:	d9403717 	ldw	r5,220(sp)
   265b8:	1887883a 	add	r3,r3,r2
   265bc:	d8801f17 	ldw	r2,124(sp)
   265c0:	41000015 	stw	r4,0(r8)
   265c4:	41400115 	stw	r5,4(r8)
   265c8:	10800044 	addi	r2,r2,1
   265cc:	d8c02015 	stw	r3,128(sp)
   265d0:	d8801f15 	stw	r2,124(sp)
   265d4:	010001c4 	movi	r4,7
   265d8:	20832916 	blt	r4,r2,27280 <___vfprintf_internal_r+0x1b54>
   265dc:	42000204 	addi	r8,r8,8
   265e0:	d8803317 	ldw	r2,204(sp)
   265e4:	143fffc4 	addi	r16,r2,-1
   265e8:	043ec50e 	bge	zero,r16,26100 <__alt_data_end+0xfffe6d00>
   265ec:	04400404 	movi	r17,16
   265f0:	d8801f17 	ldw	r2,124(sp)
   265f4:	8c00880e 	bge	r17,r16,26818 <___vfprintf_internal_r+0x10ec>
   265f8:	014000f4 	movhi	r5,3
   265fc:	2948f784 	addi	r5,r5,9182
   26600:	d9402b15 	stw	r5,172(sp)
   26604:	058001c4 	movi	r22,7
   26608:	dcc02c17 	ldw	r19,176(sp)
   2660c:	00000306 	br	2661c <___vfprintf_internal_r+0xef0>
   26610:	42000204 	addi	r8,r8,8
   26614:	843ffc04 	addi	r16,r16,-16
   26618:	8c00820e 	bge	r17,r16,26824 <___vfprintf_internal_r+0x10f8>
   2661c:	18c00404 	addi	r3,r3,16
   26620:	10800044 	addi	r2,r2,1
   26624:	45000015 	stw	r20,0(r8)
   26628:	44400115 	stw	r17,4(r8)
   2662c:	d8c02015 	stw	r3,128(sp)
   26630:	d8801f15 	stw	r2,124(sp)
   26634:	b0bff60e 	bge	r22,r2,26610 <__alt_data_end+0xfffe7210>
   26638:	d9801e04 	addi	r6,sp,120
   2663c:	b80b883a 	mov	r5,r23
   26640:	9809883a 	mov	r4,r19
   26644:	002c2440 	call	2c244 <__sprint_r>
   26648:	103d3a1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   2664c:	d8c02017 	ldw	r3,128(sp)
   26650:	d8801f17 	ldw	r2,124(sp)
   26654:	da000404 	addi	r8,sp,16
   26658:	003fee06 	br	26614 <__alt_data_end+0xfffe7214>
   2665c:	d9403117 	ldw	r5,196(sp)
   26660:	d8802a17 	ldw	r2,168(sp)
   26664:	28adc83a 	sub	r22,r5,r2
   26668:	05be630e 	bge	zero,r22,25ff8 <__alt_data_end+0xfffe6bf8>
   2666c:	07000404 	movi	fp,16
   26670:	d8801f17 	ldw	r2,124(sp)
   26674:	e5838f0e 	bge	fp,r22,274b4 <___vfprintf_internal_r+0x1d88>
   26678:	014000f4 	movhi	r5,3
   2667c:	2948f784 	addi	r5,r5,9182
   26680:	dc403015 	stw	r17,192(sp)
   26684:	d9402b15 	stw	r5,172(sp)
   26688:	b023883a 	mov	r17,r22
   2668c:	04c001c4 	movi	r19,7
   26690:	a82d883a 	mov	r22,r21
   26694:	902b883a 	mov	r21,r18
   26698:	8025883a 	mov	r18,r16
   2669c:	dc002c17 	ldw	r16,176(sp)
   266a0:	00000306 	br	266b0 <___vfprintf_internal_r+0xf84>
   266a4:	8c7ffc04 	addi	r17,r17,-16
   266a8:	42000204 	addi	r8,r8,8
   266ac:	e440110e 	bge	fp,r17,266f4 <___vfprintf_internal_r+0xfc8>
   266b0:	18c00404 	addi	r3,r3,16
   266b4:	10800044 	addi	r2,r2,1
   266b8:	45000015 	stw	r20,0(r8)
   266bc:	47000115 	stw	fp,4(r8)
   266c0:	d8c02015 	stw	r3,128(sp)
   266c4:	d8801f15 	stw	r2,124(sp)
   266c8:	98bff60e 	bge	r19,r2,266a4 <__alt_data_end+0xfffe72a4>
   266cc:	d9801e04 	addi	r6,sp,120
   266d0:	b80b883a 	mov	r5,r23
   266d4:	8009883a 	mov	r4,r16
   266d8:	002c2440 	call	2c244 <__sprint_r>
   266dc:	103d151e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   266e0:	8c7ffc04 	addi	r17,r17,-16
   266e4:	d8c02017 	ldw	r3,128(sp)
   266e8:	d8801f17 	ldw	r2,124(sp)
   266ec:	da000404 	addi	r8,sp,16
   266f0:	e47fef16 	blt	fp,r17,266b0 <__alt_data_end+0xfffe72b0>
   266f4:	9021883a 	mov	r16,r18
   266f8:	a825883a 	mov	r18,r21
   266fc:	b02b883a 	mov	r21,r22
   26700:	882d883a 	mov	r22,r17
   26704:	dc403017 	ldw	r17,192(sp)
   26708:	d9002b17 	ldw	r4,172(sp)
   2670c:	1d87883a 	add	r3,r3,r22
   26710:	10800044 	addi	r2,r2,1
   26714:	41000015 	stw	r4,0(r8)
   26718:	45800115 	stw	r22,4(r8)
   2671c:	d8c02015 	stw	r3,128(sp)
   26720:	d8801f15 	stw	r2,124(sp)
   26724:	010001c4 	movi	r4,7
   26728:	20818e16 	blt	r4,r2,26d64 <___vfprintf_internal_r+0x1638>
   2672c:	42000204 	addi	r8,r8,8
   26730:	003e3106 	br	25ff8 <__alt_data_end+0xfffe6bf8>
   26734:	d9403317 	ldw	r5,204(sp)
   26738:	00800044 	movi	r2,1
   2673c:	18c00044 	addi	r3,r3,1
   26740:	1141530e 	bge	r2,r5,26c90 <___vfprintf_internal_r+0x1564>
   26744:	dc401f17 	ldw	r17,124(sp)
   26748:	00800044 	movi	r2,1
   2674c:	40800115 	stw	r2,4(r8)
   26750:	8c400044 	addi	r17,r17,1
   26754:	44000015 	stw	r16,0(r8)
   26758:	d8c02015 	stw	r3,128(sp)
   2675c:	dc401f15 	stw	r17,124(sp)
   26760:	008001c4 	movi	r2,7
   26764:	14416b16 	blt	r2,r17,26d14 <___vfprintf_internal_r+0x15e8>
   26768:	42000204 	addi	r8,r8,8
   2676c:	d8803717 	ldw	r2,220(sp)
   26770:	d9003417 	ldw	r4,208(sp)
   26774:	8c400044 	addi	r17,r17,1
   26778:	10c7883a 	add	r3,r2,r3
   2677c:	40800115 	stw	r2,4(r8)
   26780:	41000015 	stw	r4,0(r8)
   26784:	d8c02015 	stw	r3,128(sp)
   26788:	dc401f15 	stw	r17,124(sp)
   2678c:	008001c4 	movi	r2,7
   26790:	14416916 	blt	r2,r17,26d38 <___vfprintf_internal_r+0x160c>
   26794:	45800204 	addi	r22,r8,8
   26798:	d9003617 	ldw	r4,216(sp)
   2679c:	d9403817 	ldw	r5,224(sp)
   267a0:	000d883a 	mov	r6,zero
   267a4:	000f883a 	mov	r7,zero
   267a8:	d8c03c15 	stw	r3,240(sp)
   267ac:	002f6f00 	call	2f6f0 <__eqdf2>
   267b0:	d8c03c17 	ldw	r3,240(sp)
   267b4:	1000bc26 	beq	r2,zero,26aa8 <___vfprintf_internal_r+0x137c>
   267b8:	d9403317 	ldw	r5,204(sp)
   267bc:	84000044 	addi	r16,r16,1
   267c0:	8c400044 	addi	r17,r17,1
   267c4:	28bfffc4 	addi	r2,r5,-1
   267c8:	1887883a 	add	r3,r3,r2
   267cc:	b0800115 	stw	r2,4(r22)
   267d0:	b4000015 	stw	r16,0(r22)
   267d4:	d8c02015 	stw	r3,128(sp)
   267d8:	dc401f15 	stw	r17,124(sp)
   267dc:	008001c4 	movi	r2,7
   267e0:	14414316 	blt	r2,r17,26cf0 <___vfprintf_internal_r+0x15c4>
   267e4:	b5800204 	addi	r22,r22,8
   267e8:	d9003a17 	ldw	r4,232(sp)
   267ec:	df0022c4 	addi	fp,sp,139
   267f0:	8c400044 	addi	r17,r17,1
   267f4:	20c7883a 	add	r3,r4,r3
   267f8:	b7000015 	stw	fp,0(r22)
   267fc:	b1000115 	stw	r4,4(r22)
   26800:	d8c02015 	stw	r3,128(sp)
   26804:	dc401f15 	stw	r17,124(sp)
   26808:	008001c4 	movi	r2,7
   2680c:	14400e16 	blt	r2,r17,26848 <___vfprintf_internal_r+0x111c>
   26810:	b2000204 	addi	r8,r22,8
   26814:	003e3a06 	br	26100 <__alt_data_end+0xfffe6d00>
   26818:	010000f4 	movhi	r4,3
   2681c:	2108f784 	addi	r4,r4,9182
   26820:	d9002b15 	stw	r4,172(sp)
   26824:	d9002b17 	ldw	r4,172(sp)
   26828:	1c07883a 	add	r3,r3,r16
   2682c:	44000115 	stw	r16,4(r8)
   26830:	41000015 	stw	r4,0(r8)
   26834:	10800044 	addi	r2,r2,1
   26838:	d8c02015 	stw	r3,128(sp)
   2683c:	d8801f15 	stw	r2,124(sp)
   26840:	010001c4 	movi	r4,7
   26844:	20be2d0e 	bge	r4,r2,260fc <__alt_data_end+0xfffe6cfc>
   26848:	d9002c17 	ldw	r4,176(sp)
   2684c:	d9801e04 	addi	r6,sp,120
   26850:	b80b883a 	mov	r5,r23
   26854:	002c2440 	call	2c244 <__sprint_r>
   26858:	103cb61e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   2685c:	d8c02017 	ldw	r3,128(sp)
   26860:	da000404 	addi	r8,sp,16
   26864:	003e2606 	br	26100 <__alt_data_end+0xfffe6d00>
   26868:	d9002c17 	ldw	r4,176(sp)
   2686c:	d9801e04 	addi	r6,sp,120
   26870:	b80b883a 	mov	r5,r23
   26874:	002c2440 	call	2c244 <__sprint_r>
   26878:	103e5d26 	beq	r2,zero,261f0 <__alt_data_end+0xfffe6df0>
   2687c:	003cad06 	br	25b34 <__alt_data_end+0xfffe6734>
   26880:	d9002c17 	ldw	r4,176(sp)
   26884:	d9801e04 	addi	r6,sp,120
   26888:	b80b883a 	mov	r5,r23
   2688c:	002c2440 	call	2c244 <__sprint_r>
   26890:	103ca81e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26894:	d8c02017 	ldw	r3,128(sp)
   26898:	da000404 	addi	r8,sp,16
   2689c:	003e0b06 	br	260cc <__alt_data_end+0xfffe6ccc>
   268a0:	d9002c17 	ldw	r4,176(sp)
   268a4:	d9801e04 	addi	r6,sp,120
   268a8:	b80b883a 	mov	r5,r23
   268ac:	002c2440 	call	2c244 <__sprint_r>
   268b0:	103ca01e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   268b4:	d8c02017 	ldw	r3,128(sp)
   268b8:	da000404 	addi	r8,sp,16
   268bc:	003dbd06 	br	25fb4 <__alt_data_end+0xfffe6bb4>
   268c0:	d9002c17 	ldw	r4,176(sp)
   268c4:	d9801e04 	addi	r6,sp,120
   268c8:	b80b883a 	mov	r5,r23
   268cc:	002c2440 	call	2c244 <__sprint_r>
   268d0:	103c981e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   268d4:	d8c02017 	ldw	r3,128(sp)
   268d8:	da000404 	addi	r8,sp,16
   268dc:	003dc306 	br	25fec <__alt_data_end+0xfffe6bec>
   268e0:	d8802917 	ldw	r2,164(sp)
   268e4:	d8002785 	stb	zero,158(sp)
   268e8:	103f0616 	blt	r2,zero,26504 <__alt_data_end+0xfffe7104>
   268ec:	00ffdfc4 	movi	r3,-129
   268f0:	9d84b03a 	or	r2,r19,r22
   268f4:	90e4703a 	and	r18,r18,r3
   268f8:	103c6b26 	beq	r2,zero,25aa8 <__alt_data_end+0xfffe66a8>
   268fc:	0039883a 	mov	fp,zero
   26900:	003e7406 	br	262d4 <__alt_data_end+0xfffe6ed4>
   26904:	9080040c 	andi	r2,r18,16
   26908:	1001b326 	beq	r2,zero,26fd8 <___vfprintf_internal_r+0x18ac>
   2690c:	d9002d17 	ldw	r4,180(sp)
   26910:	d9402917 	ldw	r5,164(sp)
   26914:	d8002785 	stb	zero,158(sp)
   26918:	20800104 	addi	r2,r4,4
   2691c:	24c00017 	ldw	r19,0(r4)
   26920:	002d883a 	mov	r22,zero
   26924:	2801b516 	blt	r5,zero,26ffc <___vfprintf_internal_r+0x18d0>
   26928:	00ffdfc4 	movi	r3,-129
   2692c:	d8802d15 	stw	r2,180(sp)
   26930:	90e4703a 	and	r18,r18,r3
   26934:	983d2726 	beq	r19,zero,25dd4 <__alt_data_end+0xfffe69d4>
   26938:	0039883a 	mov	fp,zero
   2693c:	003d2a06 	br	25de8 <__alt_data_end+0xfffe69e8>
   26940:	dc402617 	ldw	r17,152(sp)
   26944:	0441d30e 	bge	zero,r17,27094 <___vfprintf_internal_r+0x1968>
   26948:	dc403217 	ldw	r17,200(sp)
   2694c:	d8803317 	ldw	r2,204(sp)
   26950:	1440010e 	bge	r2,r17,26958 <___vfprintf_internal_r+0x122c>
   26954:	1023883a 	mov	r17,r2
   26958:	04400a0e 	bge	zero,r17,26984 <___vfprintf_internal_r+0x1258>
   2695c:	d8801f17 	ldw	r2,124(sp)
   26960:	1c47883a 	add	r3,r3,r17
   26964:	44000015 	stw	r16,0(r8)
   26968:	10800044 	addi	r2,r2,1
   2696c:	44400115 	stw	r17,4(r8)
   26970:	d8c02015 	stw	r3,128(sp)
   26974:	d8801f15 	stw	r2,124(sp)
   26978:	010001c4 	movi	r4,7
   2697c:	20826516 	blt	r4,r2,27314 <___vfprintf_internal_r+0x1be8>
   26980:	42000204 	addi	r8,r8,8
   26984:	88026116 	blt	r17,zero,2730c <___vfprintf_internal_r+0x1be0>
   26988:	d9003217 	ldw	r4,200(sp)
   2698c:	2463c83a 	sub	r17,r4,r17
   26990:	04407b0e 	bge	zero,r17,26b80 <___vfprintf_internal_r+0x1454>
   26994:	05800404 	movi	r22,16
   26998:	d8801f17 	ldw	r2,124(sp)
   2699c:	b4419d0e 	bge	r22,r17,27014 <___vfprintf_internal_r+0x18e8>
   269a0:	010000f4 	movhi	r4,3
   269a4:	2108f784 	addi	r4,r4,9182
   269a8:	d9002b15 	stw	r4,172(sp)
   269ac:	070001c4 	movi	fp,7
   269b0:	dcc02c17 	ldw	r19,176(sp)
   269b4:	00000306 	br	269c4 <___vfprintf_internal_r+0x1298>
   269b8:	42000204 	addi	r8,r8,8
   269bc:	8c7ffc04 	addi	r17,r17,-16
   269c0:	b441970e 	bge	r22,r17,27020 <___vfprintf_internal_r+0x18f4>
   269c4:	18c00404 	addi	r3,r3,16
   269c8:	10800044 	addi	r2,r2,1
   269cc:	45000015 	stw	r20,0(r8)
   269d0:	45800115 	stw	r22,4(r8)
   269d4:	d8c02015 	stw	r3,128(sp)
   269d8:	d8801f15 	stw	r2,124(sp)
   269dc:	e0bff60e 	bge	fp,r2,269b8 <__alt_data_end+0xfffe75b8>
   269e0:	d9801e04 	addi	r6,sp,120
   269e4:	b80b883a 	mov	r5,r23
   269e8:	9809883a 	mov	r4,r19
   269ec:	002c2440 	call	2c244 <__sprint_r>
   269f0:	103c501e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   269f4:	d8c02017 	ldw	r3,128(sp)
   269f8:	d8801f17 	ldw	r2,124(sp)
   269fc:	da000404 	addi	r8,sp,16
   26a00:	003fee06 	br	269bc <__alt_data_end+0xfffe75bc>
   26a04:	d9002c17 	ldw	r4,176(sp)
   26a08:	d9801e04 	addi	r6,sp,120
   26a0c:	b80b883a 	mov	r5,r23
   26a10:	002c2440 	call	2c244 <__sprint_r>
   26a14:	103c471e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26a18:	d8c02017 	ldw	r3,128(sp)
   26a1c:	df002787 	ldb	fp,158(sp)
   26a20:	da000404 	addi	r8,sp,16
   26a24:	003d5606 	br	25f80 <__alt_data_end+0xfffe6b80>
   26a28:	9080040c 	andi	r2,r18,16
   26a2c:	10016126 	beq	r2,zero,26fb4 <___vfprintf_internal_r+0x1888>
   26a30:	d8802d17 	ldw	r2,180(sp)
   26a34:	14c00017 	ldw	r19,0(r2)
   26a38:	10800104 	addi	r2,r2,4
   26a3c:	d8802d15 	stw	r2,180(sp)
   26a40:	982dd7fa 	srai	r22,r19,31
   26a44:	b005883a 	mov	r2,r22
   26a48:	003c8206 	br	25c54 <__alt_data_end+0xfffe6854>
   26a4c:	9080040c 	andi	r2,r18,16
   26a50:	10003526 	beq	r2,zero,26b28 <___vfprintf_internal_r+0x13fc>
   26a54:	d9402d17 	ldw	r5,180(sp)
   26a58:	d8c02917 	ldw	r3,164(sp)
   26a5c:	d8002785 	stb	zero,158(sp)
   26a60:	28800104 	addi	r2,r5,4
   26a64:	2cc00017 	ldw	r19,0(r5)
   26a68:	002d883a 	mov	r22,zero
   26a6c:	18003716 	blt	r3,zero,26b4c <___vfprintf_internal_r+0x1420>
   26a70:	00ffdfc4 	movi	r3,-129
   26a74:	d8802d15 	stw	r2,180(sp)
   26a78:	90e4703a 	and	r18,r18,r3
   26a7c:	0039883a 	mov	fp,zero
   26a80:	983df326 	beq	r19,zero,26250 <__alt_data_end+0xfffe6e50>
   26a84:	00800244 	movi	r2,9
   26a88:	14fc7b36 	bltu	r2,r19,25c78 <__alt_data_end+0xfffe6878>
   26a8c:	d8c02817 	ldw	r3,160(sp)
   26a90:	dc001dc4 	addi	r16,sp,119
   26a94:	9cc00c04 	addi	r19,r19,48
   26a98:	1c07c83a 	sub	r3,r3,r16
   26a9c:	dcc01dc5 	stb	r19,119(sp)
   26aa0:	d8c02e15 	stw	r3,184(sp)
   26aa4:	003ce806 	br	25e48 <__alt_data_end+0xfffe6a48>
   26aa8:	d8803317 	ldw	r2,204(sp)
   26aac:	143fffc4 	addi	r16,r2,-1
   26ab0:	043f4d0e 	bge	zero,r16,267e8 <__alt_data_end+0xfffe73e8>
   26ab4:	07000404 	movi	fp,16
   26ab8:	e400810e 	bge	fp,r16,26cc0 <___vfprintf_internal_r+0x1594>
   26abc:	014000f4 	movhi	r5,3
   26ac0:	2948f784 	addi	r5,r5,9182
   26ac4:	d9402b15 	stw	r5,172(sp)
   26ac8:	01c001c4 	movi	r7,7
   26acc:	dcc02c17 	ldw	r19,176(sp)
   26ad0:	00000306 	br	26ae0 <___vfprintf_internal_r+0x13b4>
   26ad4:	b5800204 	addi	r22,r22,8
   26ad8:	843ffc04 	addi	r16,r16,-16
   26adc:	e4007b0e 	bge	fp,r16,26ccc <___vfprintf_internal_r+0x15a0>
   26ae0:	18c00404 	addi	r3,r3,16
   26ae4:	8c400044 	addi	r17,r17,1
   26ae8:	b5000015 	stw	r20,0(r22)
   26aec:	b7000115 	stw	fp,4(r22)
   26af0:	d8c02015 	stw	r3,128(sp)
   26af4:	dc401f15 	stw	r17,124(sp)
   26af8:	3c7ff60e 	bge	r7,r17,26ad4 <__alt_data_end+0xfffe76d4>
   26afc:	d9801e04 	addi	r6,sp,120
   26b00:	b80b883a 	mov	r5,r23
   26b04:	9809883a 	mov	r4,r19
   26b08:	d9c03c15 	stw	r7,240(sp)
   26b0c:	002c2440 	call	2c244 <__sprint_r>
   26b10:	d9c03c17 	ldw	r7,240(sp)
   26b14:	103c071e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26b18:	d8c02017 	ldw	r3,128(sp)
   26b1c:	dc401f17 	ldw	r17,124(sp)
   26b20:	dd800404 	addi	r22,sp,16
   26b24:	003fec06 	br	26ad8 <__alt_data_end+0xfffe76d8>
   26b28:	9080100c 	andi	r2,r18,64
   26b2c:	d8002785 	stb	zero,158(sp)
   26b30:	10010e26 	beq	r2,zero,26f6c <___vfprintf_internal_r+0x1840>
   26b34:	d9002d17 	ldw	r4,180(sp)
   26b38:	d9402917 	ldw	r5,164(sp)
   26b3c:	002d883a 	mov	r22,zero
   26b40:	20800104 	addi	r2,r4,4
   26b44:	24c0000b 	ldhu	r19,0(r4)
   26b48:	283fc90e 	bge	r5,zero,26a70 <__alt_data_end+0xfffe7670>
   26b4c:	d8802d15 	stw	r2,180(sp)
   26b50:	0039883a 	mov	fp,zero
   26b54:	9d84b03a 	or	r2,r19,r22
   26b58:	103c461e 	bne	r2,zero,25c74 <__alt_data_end+0xfffe6874>
   26b5c:	00800044 	movi	r2,1
   26b60:	003e6c06 	br	26514 <__alt_data_end+0xfffe7114>
   26b64:	d9002c17 	ldw	r4,176(sp)
   26b68:	d9801e04 	addi	r6,sp,120
   26b6c:	b80b883a 	mov	r5,r23
   26b70:	002c2440 	call	2c244 <__sprint_r>
   26b74:	103bef1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26b78:	d8c02017 	ldw	r3,128(sp)
   26b7c:	da000404 	addi	r8,sp,16
   26b80:	d9003217 	ldw	r4,200(sp)
   26b84:	d8802617 	ldw	r2,152(sp)
   26b88:	d9403317 	ldw	r5,204(sp)
   26b8c:	8123883a 	add	r17,r16,r4
   26b90:	11400216 	blt	r2,r5,26b9c <___vfprintf_internal_r+0x1470>
   26b94:	9100004c 	andi	r4,r18,1
   26b98:	20000d26 	beq	r4,zero,26bd0 <___vfprintf_internal_r+0x14a4>
   26b9c:	d9003717 	ldw	r4,220(sp)
   26ba0:	d9403417 	ldw	r5,208(sp)
   26ba4:	1907883a 	add	r3,r3,r4
   26ba8:	d9001f17 	ldw	r4,124(sp)
   26bac:	41400015 	stw	r5,0(r8)
   26bb0:	d9403717 	ldw	r5,220(sp)
   26bb4:	21000044 	addi	r4,r4,1
   26bb8:	d8c02015 	stw	r3,128(sp)
   26bbc:	41400115 	stw	r5,4(r8)
   26bc0:	d9001f15 	stw	r4,124(sp)
   26bc4:	014001c4 	movi	r5,7
   26bc8:	2901e816 	blt	r5,r4,2736c <___vfprintf_internal_r+0x1c40>
   26bcc:	42000204 	addi	r8,r8,8
   26bd0:	d9003317 	ldw	r4,204(sp)
   26bd4:	8121883a 	add	r16,r16,r4
   26bd8:	2085c83a 	sub	r2,r4,r2
   26bdc:	8461c83a 	sub	r16,r16,r17
   26be0:	1400010e 	bge	r2,r16,26be8 <___vfprintf_internal_r+0x14bc>
   26be4:	1021883a 	mov	r16,r2
   26be8:	04000a0e 	bge	zero,r16,26c14 <___vfprintf_internal_r+0x14e8>
   26bec:	d9001f17 	ldw	r4,124(sp)
   26bf0:	1c07883a 	add	r3,r3,r16
   26bf4:	44400015 	stw	r17,0(r8)
   26bf8:	21000044 	addi	r4,r4,1
   26bfc:	44000115 	stw	r16,4(r8)
   26c00:	d8c02015 	stw	r3,128(sp)
   26c04:	d9001f15 	stw	r4,124(sp)
   26c08:	014001c4 	movi	r5,7
   26c0c:	2901fb16 	blt	r5,r4,273fc <___vfprintf_internal_r+0x1cd0>
   26c10:	42000204 	addi	r8,r8,8
   26c14:	8001f716 	blt	r16,zero,273f4 <___vfprintf_internal_r+0x1cc8>
   26c18:	1421c83a 	sub	r16,r2,r16
   26c1c:	043d380e 	bge	zero,r16,26100 <__alt_data_end+0xfffe6d00>
   26c20:	04400404 	movi	r17,16
   26c24:	d8801f17 	ldw	r2,124(sp)
   26c28:	8c3efb0e 	bge	r17,r16,26818 <__alt_data_end+0xfffe7418>
   26c2c:	014000f4 	movhi	r5,3
   26c30:	2948f784 	addi	r5,r5,9182
   26c34:	d9402b15 	stw	r5,172(sp)
   26c38:	058001c4 	movi	r22,7
   26c3c:	dcc02c17 	ldw	r19,176(sp)
   26c40:	00000306 	br	26c50 <___vfprintf_internal_r+0x1524>
   26c44:	42000204 	addi	r8,r8,8
   26c48:	843ffc04 	addi	r16,r16,-16
   26c4c:	8c3ef50e 	bge	r17,r16,26824 <__alt_data_end+0xfffe7424>
   26c50:	18c00404 	addi	r3,r3,16
   26c54:	10800044 	addi	r2,r2,1
   26c58:	45000015 	stw	r20,0(r8)
   26c5c:	44400115 	stw	r17,4(r8)
   26c60:	d8c02015 	stw	r3,128(sp)
   26c64:	d8801f15 	stw	r2,124(sp)
   26c68:	b0bff60e 	bge	r22,r2,26c44 <__alt_data_end+0xfffe7844>
   26c6c:	d9801e04 	addi	r6,sp,120
   26c70:	b80b883a 	mov	r5,r23
   26c74:	9809883a 	mov	r4,r19
   26c78:	002c2440 	call	2c244 <__sprint_r>
   26c7c:	103bad1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26c80:	d8c02017 	ldw	r3,128(sp)
   26c84:	d8801f17 	ldw	r2,124(sp)
   26c88:	da000404 	addi	r8,sp,16
   26c8c:	003fee06 	br	26c48 <__alt_data_end+0xfffe7848>
   26c90:	9088703a 	and	r4,r18,r2
   26c94:	203eab1e 	bne	r4,zero,26744 <__alt_data_end+0xfffe7344>
   26c98:	dc401f17 	ldw	r17,124(sp)
   26c9c:	40800115 	stw	r2,4(r8)
   26ca0:	44000015 	stw	r16,0(r8)
   26ca4:	8c400044 	addi	r17,r17,1
   26ca8:	d8c02015 	stw	r3,128(sp)
   26cac:	dc401f15 	stw	r17,124(sp)
   26cb0:	008001c4 	movi	r2,7
   26cb4:	14400e16 	blt	r2,r17,26cf0 <___vfprintf_internal_r+0x15c4>
   26cb8:	45800204 	addi	r22,r8,8
   26cbc:	003eca06 	br	267e8 <__alt_data_end+0xfffe73e8>
   26cc0:	010000f4 	movhi	r4,3
   26cc4:	2108f784 	addi	r4,r4,9182
   26cc8:	d9002b15 	stw	r4,172(sp)
   26ccc:	d8802b17 	ldw	r2,172(sp)
   26cd0:	1c07883a 	add	r3,r3,r16
   26cd4:	8c400044 	addi	r17,r17,1
   26cd8:	b0800015 	stw	r2,0(r22)
   26cdc:	b4000115 	stw	r16,4(r22)
   26ce0:	d8c02015 	stw	r3,128(sp)
   26ce4:	dc401f15 	stw	r17,124(sp)
   26ce8:	008001c4 	movi	r2,7
   26cec:	147ebd0e 	bge	r2,r17,267e4 <__alt_data_end+0xfffe73e4>
   26cf0:	d9002c17 	ldw	r4,176(sp)
   26cf4:	d9801e04 	addi	r6,sp,120
   26cf8:	b80b883a 	mov	r5,r23
   26cfc:	002c2440 	call	2c244 <__sprint_r>
   26d00:	103b8c1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26d04:	d8c02017 	ldw	r3,128(sp)
   26d08:	dc401f17 	ldw	r17,124(sp)
   26d0c:	dd800404 	addi	r22,sp,16
   26d10:	003eb506 	br	267e8 <__alt_data_end+0xfffe73e8>
   26d14:	d9002c17 	ldw	r4,176(sp)
   26d18:	d9801e04 	addi	r6,sp,120
   26d1c:	b80b883a 	mov	r5,r23
   26d20:	002c2440 	call	2c244 <__sprint_r>
   26d24:	103b831e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26d28:	d8c02017 	ldw	r3,128(sp)
   26d2c:	dc401f17 	ldw	r17,124(sp)
   26d30:	da000404 	addi	r8,sp,16
   26d34:	003e8d06 	br	2676c <__alt_data_end+0xfffe736c>
   26d38:	d9002c17 	ldw	r4,176(sp)
   26d3c:	d9801e04 	addi	r6,sp,120
   26d40:	b80b883a 	mov	r5,r23
   26d44:	002c2440 	call	2c244 <__sprint_r>
   26d48:	103b7a1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26d4c:	d8c02017 	ldw	r3,128(sp)
   26d50:	dc401f17 	ldw	r17,124(sp)
   26d54:	dd800404 	addi	r22,sp,16
   26d58:	003e8f06 	br	26798 <__alt_data_end+0xfffe7398>
   26d5c:	0027883a 	mov	r19,zero
   26d60:	003f4a06 	br	26a8c <__alt_data_end+0xfffe768c>
   26d64:	d9002c17 	ldw	r4,176(sp)
   26d68:	d9801e04 	addi	r6,sp,120
   26d6c:	b80b883a 	mov	r5,r23
   26d70:	002c2440 	call	2c244 <__sprint_r>
   26d74:	103b6f1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   26d78:	d8c02017 	ldw	r3,128(sp)
   26d7c:	da000404 	addi	r8,sp,16
   26d80:	003c9d06 	br	25ff8 <__alt_data_end+0xfffe6bf8>
   26d84:	04e7c83a 	sub	r19,zero,r19
   26d88:	9804c03a 	cmpne	r2,r19,zero
   26d8c:	05adc83a 	sub	r22,zero,r22
   26d90:	b0adc83a 	sub	r22,r22,r2
   26d94:	d8802917 	ldw	r2,164(sp)
   26d98:	07000b44 	movi	fp,45
   26d9c:	df002785 	stb	fp,158(sp)
   26da0:	10017b16 	blt	r2,zero,27390 <___vfprintf_internal_r+0x1c64>
   26da4:	00bfdfc4 	movi	r2,-129
   26da8:	90a4703a 	and	r18,r18,r2
   26dac:	003bb106 	br	25c74 <__alt_data_end+0xfffe6874>
   26db0:	d9003617 	ldw	r4,216(sp)
   26db4:	d9403817 	ldw	r5,224(sp)
   26db8:	da003d15 	stw	r8,244(sp)
   26dbc:	002bdd00 	call	2bdd0 <__fpclassifyd>
   26dc0:	da003d17 	ldw	r8,244(sp)
   26dc4:	1000f026 	beq	r2,zero,27188 <___vfprintf_internal_r+0x1a5c>
   26dc8:	d9002917 	ldw	r4,164(sp)
   26dcc:	05bff7c4 	movi	r22,-33
   26dd0:	00bfffc4 	movi	r2,-1
   26dd4:	8dac703a 	and	r22,r17,r22
   26dd8:	20820026 	beq	r4,r2,275dc <___vfprintf_internal_r+0x1eb0>
   26ddc:	008011c4 	movi	r2,71
   26de0:	b081f726 	beq	r22,r2,275c0 <___vfprintf_internal_r+0x1e94>
   26de4:	d9003817 	ldw	r4,224(sp)
   26de8:	90c04014 	ori	r3,r18,256
   26dec:	d8c02b15 	stw	r3,172(sp)
   26df0:	20021516 	blt	r4,zero,27648 <___vfprintf_internal_r+0x1f1c>
   26df4:	dcc03817 	ldw	r19,224(sp)
   26df8:	d8002a05 	stb	zero,168(sp)
   26dfc:	00801984 	movi	r2,102
   26e00:	8881f926 	beq	r17,r2,275e8 <___vfprintf_internal_r+0x1ebc>
   26e04:	00801184 	movi	r2,70
   26e08:	88821c26 	beq	r17,r2,2767c <___vfprintf_internal_r+0x1f50>
   26e0c:	00801144 	movi	r2,69
   26e10:	b081ef26 	beq	r22,r2,275d0 <___vfprintf_internal_r+0x1ea4>
   26e14:	d8c02917 	ldw	r3,164(sp)
   26e18:	d8802104 	addi	r2,sp,132
   26e1c:	d8800315 	stw	r2,12(sp)
   26e20:	d9403617 	ldw	r5,216(sp)
   26e24:	d8802504 	addi	r2,sp,148
   26e28:	d9002c17 	ldw	r4,176(sp)
   26e2c:	d8800215 	stw	r2,8(sp)
   26e30:	d8802604 	addi	r2,sp,152
   26e34:	d8c00015 	stw	r3,0(sp)
   26e38:	d8800115 	stw	r2,4(sp)
   26e3c:	01c00084 	movi	r7,2
   26e40:	980d883a 	mov	r6,r19
   26e44:	d8c03c15 	stw	r3,240(sp)
   26e48:	da003d15 	stw	r8,244(sp)
   26e4c:	0027d500 	call	27d50 <_dtoa_r>
   26e50:	1021883a 	mov	r16,r2
   26e54:	008019c4 	movi	r2,103
   26e58:	d8c03c17 	ldw	r3,240(sp)
   26e5c:	da003d17 	ldw	r8,244(sp)
   26e60:	88817126 	beq	r17,r2,27428 <___vfprintf_internal_r+0x1cfc>
   26e64:	008011c4 	movi	r2,71
   26e68:	88829226 	beq	r17,r2,278b4 <___vfprintf_internal_r+0x2188>
   26e6c:	80f9883a 	add	fp,r16,r3
   26e70:	d9003617 	ldw	r4,216(sp)
   26e74:	000d883a 	mov	r6,zero
   26e78:	000f883a 	mov	r7,zero
   26e7c:	980b883a 	mov	r5,r19
   26e80:	da003d15 	stw	r8,244(sp)
   26e84:	002f6f00 	call	2f6f0 <__eqdf2>
   26e88:	da003d17 	ldw	r8,244(sp)
   26e8c:	10018d26 	beq	r2,zero,274c4 <___vfprintf_internal_r+0x1d98>
   26e90:	d8802117 	ldw	r2,132(sp)
   26e94:	1700062e 	bgeu	r2,fp,26eb0 <___vfprintf_internal_r+0x1784>
   26e98:	01000c04 	movi	r4,48
   26e9c:	10c00044 	addi	r3,r2,1
   26ea0:	d8c02115 	stw	r3,132(sp)
   26ea4:	11000005 	stb	r4,0(r2)
   26ea8:	d8802117 	ldw	r2,132(sp)
   26eac:	173ffb36 	bltu	r2,fp,26e9c <__alt_data_end+0xfffe7a9c>
   26eb0:	1405c83a 	sub	r2,r2,r16
   26eb4:	d8803315 	stw	r2,204(sp)
   26eb8:	008011c4 	movi	r2,71
   26ebc:	b0817626 	beq	r22,r2,27498 <___vfprintf_internal_r+0x1d6c>
   26ec0:	00801944 	movi	r2,101
   26ec4:	1442810e 	bge	r2,r17,278cc <___vfprintf_internal_r+0x21a0>
   26ec8:	d8c02617 	ldw	r3,152(sp)
   26ecc:	00801984 	movi	r2,102
   26ed0:	d8c03215 	stw	r3,200(sp)
   26ed4:	8881fe26 	beq	r17,r2,276d0 <___vfprintf_internal_r+0x1fa4>
   26ed8:	d8c03217 	ldw	r3,200(sp)
   26edc:	d9003317 	ldw	r4,204(sp)
   26ee0:	1901dd16 	blt	r3,r4,27658 <___vfprintf_internal_r+0x1f2c>
   26ee4:	9480004c 	andi	r18,r18,1
   26ee8:	90022b1e 	bne	r18,zero,27798 <___vfprintf_internal_r+0x206c>
   26eec:	1805883a 	mov	r2,r3
   26ef0:	18028016 	blt	r3,zero,278f4 <___vfprintf_internal_r+0x21c8>
   26ef4:	d8c03217 	ldw	r3,200(sp)
   26ef8:	044019c4 	movi	r17,103
   26efc:	d8c02e15 	stw	r3,184(sp)
   26f00:	df002a07 	ldb	fp,168(sp)
   26f04:	e001531e 	bne	fp,zero,27454 <___vfprintf_internal_r+0x1d28>
   26f08:	df002783 	ldbu	fp,158(sp)
   26f0c:	d8802a15 	stw	r2,168(sp)
   26f10:	dc802b17 	ldw	r18,172(sp)
   26f14:	d8002915 	stw	zero,164(sp)
   26f18:	003bd106 	br	25e60 <__alt_data_end+0xfffe6a60>
   26f1c:	d8802d17 	ldw	r2,180(sp)
   26f20:	d8c02d17 	ldw	r3,180(sp)
   26f24:	d9002d17 	ldw	r4,180(sp)
   26f28:	10800017 	ldw	r2,0(r2)
   26f2c:	18c00117 	ldw	r3,4(r3)
   26f30:	21000204 	addi	r4,r4,8
   26f34:	d8803615 	stw	r2,216(sp)
   26f38:	d8c03815 	stw	r3,224(sp)
   26f3c:	d9002d15 	stw	r4,180(sp)
   26f40:	003b7506 	br	25d18 <__alt_data_end+0xfffe6918>
   26f44:	ac400007 	ldb	r17,0(r21)
   26f48:	003a5906 	br	258b0 <__alt_data_end+0xfffe64b0>
   26f4c:	9080100c 	andi	r2,r18,64
   26f50:	1000a826 	beq	r2,zero,271f4 <___vfprintf_internal_r+0x1ac8>
   26f54:	d9002d17 	ldw	r4,180(sp)
   26f58:	002d883a 	mov	r22,zero
   26f5c:	24c0000b 	ldhu	r19,0(r4)
   26f60:	21000104 	addi	r4,r4,4
   26f64:	d9002d15 	stw	r4,180(sp)
   26f68:	003ccb06 	br	26298 <__alt_data_end+0xfffe6e98>
   26f6c:	d8c02d17 	ldw	r3,180(sp)
   26f70:	d9002917 	ldw	r4,164(sp)
   26f74:	002d883a 	mov	r22,zero
   26f78:	18800104 	addi	r2,r3,4
   26f7c:	1cc00017 	ldw	r19,0(r3)
   26f80:	203ebb0e 	bge	r4,zero,26a70 <__alt_data_end+0xfffe7670>
   26f84:	003ef106 	br	26b4c <__alt_data_end+0xfffe774c>
   26f88:	9080040c 	andi	r2,r18,16
   26f8c:	1000921e 	bne	r2,zero,271d8 <___vfprintf_internal_r+0x1aac>
   26f90:	9480100c 	andi	r18,r18,64
   26f94:	90013926 	beq	r18,zero,2747c <___vfprintf_internal_r+0x1d50>
   26f98:	d9002d17 	ldw	r4,180(sp)
   26f9c:	d9402f17 	ldw	r5,188(sp)
   26fa0:	20800017 	ldw	r2,0(r4)
   26fa4:	21000104 	addi	r4,r4,4
   26fa8:	d9002d15 	stw	r4,180(sp)
   26fac:	1140000d 	sth	r5,0(r2)
   26fb0:	003a1606 	br	2580c <__alt_data_end+0xfffe640c>
   26fb4:	9080100c 	andi	r2,r18,64
   26fb8:	10008026 	beq	r2,zero,271bc <___vfprintf_internal_r+0x1a90>
   26fbc:	d8c02d17 	ldw	r3,180(sp)
   26fc0:	1cc0000f 	ldh	r19,0(r3)
   26fc4:	18c00104 	addi	r3,r3,4
   26fc8:	d8c02d15 	stw	r3,180(sp)
   26fcc:	982dd7fa 	srai	r22,r19,31
   26fd0:	b005883a 	mov	r2,r22
   26fd4:	003b1f06 	br	25c54 <__alt_data_end+0xfffe6854>
   26fd8:	9080100c 	andi	r2,r18,64
   26fdc:	d8002785 	stb	zero,158(sp)
   26fe0:	10008a1e 	bne	r2,zero,2720c <___vfprintf_internal_r+0x1ae0>
   26fe4:	d9402d17 	ldw	r5,180(sp)
   26fe8:	d8c02917 	ldw	r3,164(sp)
   26fec:	002d883a 	mov	r22,zero
   26ff0:	28800104 	addi	r2,r5,4
   26ff4:	2cc00017 	ldw	r19,0(r5)
   26ff8:	183e4b0e 	bge	r3,zero,26928 <__alt_data_end+0xfffe7528>
   26ffc:	9d86b03a 	or	r3,r19,r22
   27000:	d8802d15 	stw	r2,180(sp)
   27004:	183e4c1e 	bne	r3,zero,26938 <__alt_data_end+0xfffe7538>
   27008:	0039883a 	mov	fp,zero
   2700c:	0005883a 	mov	r2,zero
   27010:	003d4006 	br	26514 <__alt_data_end+0xfffe7114>
   27014:	014000f4 	movhi	r5,3
   27018:	2948f784 	addi	r5,r5,9182
   2701c:	d9402b15 	stw	r5,172(sp)
   27020:	d9402b17 	ldw	r5,172(sp)
   27024:	1c47883a 	add	r3,r3,r17
   27028:	10800044 	addi	r2,r2,1
   2702c:	41400015 	stw	r5,0(r8)
   27030:	44400115 	stw	r17,4(r8)
   27034:	d8c02015 	stw	r3,128(sp)
   27038:	d8801f15 	stw	r2,124(sp)
   2703c:	010001c4 	movi	r4,7
   27040:	20bec816 	blt	r4,r2,26b64 <__alt_data_end+0xfffe7764>
   27044:	42000204 	addi	r8,r8,8
   27048:	003ecd06 	br	26b80 <__alt_data_end+0xfffe7780>
   2704c:	d9002917 	ldw	r4,164(sp)
   27050:	d8002785 	stb	zero,158(sp)
   27054:	203d2d16 	blt	r4,zero,2650c <__alt_data_end+0xfffe710c>
   27058:	00bfdfc4 	movi	r2,-129
   2705c:	90a4703a 	and	r18,r18,r2
   27060:	003a9106 	br	25aa8 <__alt_data_end+0xfffe66a8>
   27064:	010000f4 	movhi	r4,3
   27068:	2108f784 	addi	r4,r4,9182
   2706c:	d9002b15 	stw	r4,172(sp)
   27070:	003c0c06 	br	260a4 <__alt_data_end+0xfffe6ca4>
   27074:	d9002c17 	ldw	r4,176(sp)
   27078:	d9801e04 	addi	r6,sp,120
   2707c:	b80b883a 	mov	r5,r23
   27080:	002c2440 	call	2c244 <__sprint_r>
   27084:	103aab1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27088:	d8c02017 	ldw	r3,128(sp)
   2708c:	da000404 	addi	r8,sp,16
   27090:	003d4106 	br	26598 <__alt_data_end+0xfffe7198>
   27094:	d8801f17 	ldw	r2,124(sp)
   27098:	014000f4 	movhi	r5,3
   2709c:	01000044 	movi	r4,1
   270a0:	18c00044 	addi	r3,r3,1
   270a4:	10800044 	addi	r2,r2,1
   270a8:	2948f704 	addi	r5,r5,9180
   270ac:	41000115 	stw	r4,4(r8)
   270b0:	41400015 	stw	r5,0(r8)
   270b4:	d8c02015 	stw	r3,128(sp)
   270b8:	d8801f15 	stw	r2,124(sp)
   270bc:	010001c4 	movi	r4,7
   270c0:	20805c16 	blt	r4,r2,27234 <___vfprintf_internal_r+0x1b08>
   270c4:	42000204 	addi	r8,r8,8
   270c8:	8800041e 	bne	r17,zero,270dc <___vfprintf_internal_r+0x19b0>
   270cc:	d8803317 	ldw	r2,204(sp)
   270d0:	1000021e 	bne	r2,zero,270dc <___vfprintf_internal_r+0x19b0>
   270d4:	9080004c 	andi	r2,r18,1
   270d8:	103c0926 	beq	r2,zero,26100 <__alt_data_end+0xfffe6d00>
   270dc:	d9003717 	ldw	r4,220(sp)
   270e0:	d8801f17 	ldw	r2,124(sp)
   270e4:	d9403417 	ldw	r5,208(sp)
   270e8:	20c7883a 	add	r3,r4,r3
   270ec:	10800044 	addi	r2,r2,1
   270f0:	41000115 	stw	r4,4(r8)
   270f4:	41400015 	stw	r5,0(r8)
   270f8:	d8c02015 	stw	r3,128(sp)
   270fc:	d8801f15 	stw	r2,124(sp)
   27100:	010001c4 	movi	r4,7
   27104:	20812116 	blt	r4,r2,2758c <___vfprintf_internal_r+0x1e60>
   27108:	42000204 	addi	r8,r8,8
   2710c:	0463c83a 	sub	r17,zero,r17
   27110:	0440730e 	bge	zero,r17,272e0 <___vfprintf_internal_r+0x1bb4>
   27114:	05800404 	movi	r22,16
   27118:	b440860e 	bge	r22,r17,27334 <___vfprintf_internal_r+0x1c08>
   2711c:	014000f4 	movhi	r5,3
   27120:	2948f784 	addi	r5,r5,9182
   27124:	d9402b15 	stw	r5,172(sp)
   27128:	070001c4 	movi	fp,7
   2712c:	dcc02c17 	ldw	r19,176(sp)
   27130:	00000306 	br	27140 <___vfprintf_internal_r+0x1a14>
   27134:	42000204 	addi	r8,r8,8
   27138:	8c7ffc04 	addi	r17,r17,-16
   2713c:	b440800e 	bge	r22,r17,27340 <___vfprintf_internal_r+0x1c14>
   27140:	18c00404 	addi	r3,r3,16
   27144:	10800044 	addi	r2,r2,1
   27148:	45000015 	stw	r20,0(r8)
   2714c:	45800115 	stw	r22,4(r8)
   27150:	d8c02015 	stw	r3,128(sp)
   27154:	d8801f15 	stw	r2,124(sp)
   27158:	e0bff60e 	bge	fp,r2,27134 <__alt_data_end+0xfffe7d34>
   2715c:	d9801e04 	addi	r6,sp,120
   27160:	b80b883a 	mov	r5,r23
   27164:	9809883a 	mov	r4,r19
   27168:	002c2440 	call	2c244 <__sprint_r>
   2716c:	103a711e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27170:	d8c02017 	ldw	r3,128(sp)
   27174:	d8801f17 	ldw	r2,124(sp)
   27178:	da000404 	addi	r8,sp,16
   2717c:	003fee06 	br	27138 <__alt_data_end+0xfffe7d38>
   27180:	00bfffc4 	movi	r2,-1
   27184:	003a6f06 	br	25b44 <__alt_data_end+0xfffe6744>
   27188:	008011c4 	movi	r2,71
   2718c:	1440b816 	blt	r2,r17,27470 <___vfprintf_internal_r+0x1d44>
   27190:	040000f4 	movhi	r16,3
   27194:	8408e904 	addi	r16,r16,9124
   27198:	00c000c4 	movi	r3,3
   2719c:	00bfdfc4 	movi	r2,-129
   271a0:	d8c02a15 	stw	r3,168(sp)
   271a4:	90a4703a 	and	r18,r18,r2
   271a8:	df002783 	ldbu	fp,158(sp)
   271ac:	d8c02e15 	stw	r3,184(sp)
   271b0:	d8002915 	stw	zero,164(sp)
   271b4:	d8003215 	stw	zero,200(sp)
   271b8:	003b2906 	br	25e60 <__alt_data_end+0xfffe6a60>
   271bc:	d9002d17 	ldw	r4,180(sp)
   271c0:	24c00017 	ldw	r19,0(r4)
   271c4:	21000104 	addi	r4,r4,4
   271c8:	d9002d15 	stw	r4,180(sp)
   271cc:	982dd7fa 	srai	r22,r19,31
   271d0:	b005883a 	mov	r2,r22
   271d4:	003a9f06 	br	25c54 <__alt_data_end+0xfffe6854>
   271d8:	d9402d17 	ldw	r5,180(sp)
   271dc:	d8c02f17 	ldw	r3,188(sp)
   271e0:	28800017 	ldw	r2,0(r5)
   271e4:	29400104 	addi	r5,r5,4
   271e8:	d9402d15 	stw	r5,180(sp)
   271ec:	10c00015 	stw	r3,0(r2)
   271f0:	00398606 	br	2580c <__alt_data_end+0xfffe640c>
   271f4:	d9402d17 	ldw	r5,180(sp)
   271f8:	002d883a 	mov	r22,zero
   271fc:	2cc00017 	ldw	r19,0(r5)
   27200:	29400104 	addi	r5,r5,4
   27204:	d9402d15 	stw	r5,180(sp)
   27208:	003c2306 	br	26298 <__alt_data_end+0xfffe6e98>
   2720c:	d8c02d17 	ldw	r3,180(sp)
   27210:	d9002917 	ldw	r4,164(sp)
   27214:	002d883a 	mov	r22,zero
   27218:	18800104 	addi	r2,r3,4
   2721c:	1cc0000b 	ldhu	r19,0(r3)
   27220:	203dc10e 	bge	r4,zero,26928 <__alt_data_end+0xfffe7528>
   27224:	003f7506 	br	26ffc <__alt_data_end+0xfffe7bfc>
   27228:	040000f4 	movhi	r16,3
   2722c:	8408e704 	addi	r16,r16,9116
   27230:	003acc06 	br	25d64 <__alt_data_end+0xfffe6964>
   27234:	d9002c17 	ldw	r4,176(sp)
   27238:	d9801e04 	addi	r6,sp,120
   2723c:	b80b883a 	mov	r5,r23
   27240:	002c2440 	call	2c244 <__sprint_r>
   27244:	103a3b1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27248:	dc402617 	ldw	r17,152(sp)
   2724c:	d8c02017 	ldw	r3,128(sp)
   27250:	da000404 	addi	r8,sp,16
   27254:	003f9c06 	br	270c8 <__alt_data_end+0xfffe7cc8>
   27258:	ac400043 	ldbu	r17,1(r21)
   2725c:	94800814 	ori	r18,r18,32
   27260:	ad400044 	addi	r21,r21,1
   27264:	8c403fcc 	andi	r17,r17,255
   27268:	8c40201c 	xori	r17,r17,128
   2726c:	8c7fe004 	addi	r17,r17,-128
   27270:	00398f06 	br	258b0 <__alt_data_end+0xfffe64b0>
   27274:	d8c02d15 	stw	r3,180(sp)
   27278:	0039883a 	mov	fp,zero
   2727c:	003e3506 	br	26b54 <__alt_data_end+0xfffe7754>
   27280:	d9002c17 	ldw	r4,176(sp)
   27284:	d9801e04 	addi	r6,sp,120
   27288:	b80b883a 	mov	r5,r23
   2728c:	002c2440 	call	2c244 <__sprint_r>
   27290:	103a281e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27294:	d8c02017 	ldw	r3,128(sp)
   27298:	da000404 	addi	r8,sp,16
   2729c:	003cd006 	br	265e0 <__alt_data_end+0xfffe71e0>
   272a0:	8009883a 	mov	r4,r16
   272a4:	da003d15 	stw	r8,244(sp)
   272a8:	002c0b00 	call	2c0b0 <strlen>
   272ac:	d8802e15 	stw	r2,184(sp)
   272b0:	da003d17 	ldw	r8,244(sp)
   272b4:	103c340e 	bge	r2,zero,26388 <__alt_data_end+0xfffe6f88>
   272b8:	0005883a 	mov	r2,zero
   272bc:	003c3206 	br	26388 <__alt_data_end+0xfffe6f88>
   272c0:	d9002c17 	ldw	r4,176(sp)
   272c4:	d9801e04 	addi	r6,sp,120
   272c8:	b80b883a 	mov	r5,r23
   272cc:	002c2440 	call	2c244 <__sprint_r>
   272d0:	103a181e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   272d4:	d8c02017 	ldw	r3,128(sp)
   272d8:	d8801f17 	ldw	r2,124(sp)
   272dc:	da000404 	addi	r8,sp,16
   272e0:	d9403317 	ldw	r5,204(sp)
   272e4:	10800044 	addi	r2,r2,1
   272e8:	44000015 	stw	r16,0(r8)
   272ec:	28c7883a 	add	r3,r5,r3
   272f0:	003b7d06 	br	260e8 <__alt_data_end+0xfffe6ce8>
   272f4:	010000f4 	movhi	r4,3
   272f8:	2108fb84 	addi	r4,r4,9198
   272fc:	d9003515 	stw	r4,212(sp)
   27300:	003b1406 	br	25f54 <__alt_data_end+0xfffe6b54>
   27304:	013fffc4 	movi	r4,-1
   27308:	003a3506 	br	25be0 <__alt_data_end+0xfffe67e0>
   2730c:	0023883a 	mov	r17,zero
   27310:	003d9d06 	br	26988 <__alt_data_end+0xfffe7588>
   27314:	d9002c17 	ldw	r4,176(sp)
   27318:	d9801e04 	addi	r6,sp,120
   2731c:	b80b883a 	mov	r5,r23
   27320:	002c2440 	call	2c244 <__sprint_r>
   27324:	103a031e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27328:	d8c02017 	ldw	r3,128(sp)
   2732c:	da000404 	addi	r8,sp,16
   27330:	003d9406 	br	26984 <__alt_data_end+0xfffe7584>
   27334:	010000f4 	movhi	r4,3
   27338:	2108f784 	addi	r4,r4,9182
   2733c:	d9002b15 	stw	r4,172(sp)
   27340:	d9002b17 	ldw	r4,172(sp)
   27344:	1c47883a 	add	r3,r3,r17
   27348:	10800044 	addi	r2,r2,1
   2734c:	41000015 	stw	r4,0(r8)
   27350:	44400115 	stw	r17,4(r8)
   27354:	d8c02015 	stw	r3,128(sp)
   27358:	d8801f15 	stw	r2,124(sp)
   2735c:	010001c4 	movi	r4,7
   27360:	20bfd716 	blt	r4,r2,272c0 <__alt_data_end+0xfffe7ec0>
   27364:	42000204 	addi	r8,r8,8
   27368:	003fdd06 	br	272e0 <__alt_data_end+0xfffe7ee0>
   2736c:	d9002c17 	ldw	r4,176(sp)
   27370:	d9801e04 	addi	r6,sp,120
   27374:	b80b883a 	mov	r5,r23
   27378:	002c2440 	call	2c244 <__sprint_r>
   2737c:	1039ed1e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27380:	d8802617 	ldw	r2,152(sp)
   27384:	d8c02017 	ldw	r3,128(sp)
   27388:	da000404 	addi	r8,sp,16
   2738c:	003e1006 	br	26bd0 <__alt_data_end+0xfffe77d0>
   27390:	00800044 	movi	r2,1
   27394:	10803fcc 	andi	r2,r2,255
   27398:	00c00044 	movi	r3,1
   2739c:	10fa3526 	beq	r2,r3,25c74 <__alt_data_end+0xfffe6874>
   273a0:	00c00084 	movi	r3,2
   273a4:	10fbcb26 	beq	r2,r3,262d4 <__alt_data_end+0xfffe6ed4>
   273a8:	003a8f06 	br	25de8 <__alt_data_end+0xfffe69e8>
   273ac:	010000f4 	movhi	r4,3
   273b0:	2108fb84 	addi	r4,r4,9198
   273b4:	d9003515 	stw	r4,212(sp)
   273b8:	003b7606 	br	26194 <__alt_data_end+0xfffe6d94>
   273bc:	d8802917 	ldw	r2,164(sp)
   273c0:	00c00184 	movi	r3,6
   273c4:	1880012e 	bgeu	r3,r2,273cc <___vfprintf_internal_r+0x1ca0>
   273c8:	1805883a 	mov	r2,r3
   273cc:	d8802e15 	stw	r2,184(sp)
   273d0:	1000ef16 	blt	r2,zero,27790 <___vfprintf_internal_r+0x2064>
   273d4:	040000f4 	movhi	r16,3
   273d8:	d8802a15 	stw	r2,168(sp)
   273dc:	dcc02d15 	stw	r19,180(sp)
   273e0:	d8002915 	stw	zero,164(sp)
   273e4:	d8003215 	stw	zero,200(sp)
   273e8:	8408f504 	addi	r16,r16,9172
   273ec:	0039883a 	mov	fp,zero
   273f0:	003aa206 	br	25e7c <__alt_data_end+0xfffe6a7c>
   273f4:	0021883a 	mov	r16,zero
   273f8:	003e0706 	br	26c18 <__alt_data_end+0xfffe7818>
   273fc:	d9002c17 	ldw	r4,176(sp)
   27400:	d9801e04 	addi	r6,sp,120
   27404:	b80b883a 	mov	r5,r23
   27408:	002c2440 	call	2c244 <__sprint_r>
   2740c:	1039c91e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   27410:	d8802617 	ldw	r2,152(sp)
   27414:	d9403317 	ldw	r5,204(sp)
   27418:	d8c02017 	ldw	r3,128(sp)
   2741c:	da000404 	addi	r8,sp,16
   27420:	2885c83a 	sub	r2,r5,r2
   27424:	003dfb06 	br	26c14 <__alt_data_end+0xfffe7814>
   27428:	9080004c 	andi	r2,r18,1
   2742c:	103e8f1e 	bne	r2,zero,26e6c <__alt_data_end+0xfffe7a6c>
   27430:	d8802117 	ldw	r2,132(sp)
   27434:	003e9e06 	br	26eb0 <__alt_data_end+0xfffe7ab0>
   27438:	1025883a 	mov	r18,r2
   2743c:	0039883a 	mov	fp,zero
   27440:	00800084 	movi	r2,2
   27444:	003fd306 	br	27394 <__alt_data_end+0xfffe7f94>
   27448:	07000b44 	movi	fp,45
   2744c:	df002785 	stb	fp,158(sp)
   27450:	003a4006 	br	25d54 <__alt_data_end+0xfffe6954>
   27454:	00c00b44 	movi	r3,45
   27458:	d8c02785 	stb	r3,158(sp)
   2745c:	d8802a15 	stw	r2,168(sp)
   27460:	dc802b17 	ldw	r18,172(sp)
   27464:	d8002915 	stw	zero,164(sp)
   27468:	07000b44 	movi	fp,45
   2746c:	003a8006 	br	25e70 <__alt_data_end+0xfffe6a70>
   27470:	040000f4 	movhi	r16,3
   27474:	8408ea04 	addi	r16,r16,9128
   27478:	003f4706 	br	27198 <__alt_data_end+0xfffe7d98>
   2747c:	d8c02d17 	ldw	r3,180(sp)
   27480:	d9002f17 	ldw	r4,188(sp)
   27484:	18800017 	ldw	r2,0(r3)
   27488:	18c00104 	addi	r3,r3,4
   2748c:	d8c02d15 	stw	r3,180(sp)
   27490:	11000015 	stw	r4,0(r2)
   27494:	0038dd06 	br	2580c <__alt_data_end+0xfffe640c>
   27498:	dd802617 	ldw	r22,152(sp)
   2749c:	00bfff44 	movi	r2,-3
   274a0:	b0801c16 	blt	r22,r2,27514 <___vfprintf_internal_r+0x1de8>
   274a4:	d9402917 	ldw	r5,164(sp)
   274a8:	2d801a16 	blt	r5,r22,27514 <___vfprintf_internal_r+0x1de8>
   274ac:	dd803215 	stw	r22,200(sp)
   274b0:	003e8906 	br	26ed8 <__alt_data_end+0xfffe7ad8>
   274b4:	010000f4 	movhi	r4,3
   274b8:	2108f784 	addi	r4,r4,9182
   274bc:	d9002b15 	stw	r4,172(sp)
   274c0:	003c9106 	br	26708 <__alt_data_end+0xfffe7308>
   274c4:	e005883a 	mov	r2,fp
   274c8:	003e7906 	br	26eb0 <__alt_data_end+0xfffe7ab0>
   274cc:	d9402917 	ldw	r5,164(sp)
   274d0:	df002783 	ldbu	fp,158(sp)
   274d4:	dcc02d15 	stw	r19,180(sp)
   274d8:	d9402a15 	stw	r5,168(sp)
   274dc:	d9402e15 	stw	r5,184(sp)
   274e0:	d8002915 	stw	zero,164(sp)
   274e4:	d8003215 	stw	zero,200(sp)
   274e8:	003a5d06 	br	25e60 <__alt_data_end+0xfffe6a60>
   274ec:	9080004c 	andi	r2,r18,1
   274f0:	0039883a 	mov	fp,zero
   274f4:	10000426 	beq	r2,zero,27508 <___vfprintf_internal_r+0x1ddc>
   274f8:	00800c04 	movi	r2,48
   274fc:	dc001dc4 	addi	r16,sp,119
   27500:	d8801dc5 	stb	r2,119(sp)
   27504:	003b8006 	br	26308 <__alt_data_end+0xfffe6f08>
   27508:	d8002e15 	stw	zero,184(sp)
   2750c:	dc001e04 	addi	r16,sp,120
   27510:	003a4d06 	br	25e48 <__alt_data_end+0xfffe6a48>
   27514:	8c7fff84 	addi	r17,r17,-2
   27518:	b5bfffc4 	addi	r22,r22,-1
   2751c:	dd802615 	stw	r22,152(sp)
   27520:	dc4022c5 	stb	r17,139(sp)
   27524:	b000bf16 	blt	r22,zero,27824 <___vfprintf_internal_r+0x20f8>
   27528:	00800ac4 	movi	r2,43
   2752c:	d8802305 	stb	r2,140(sp)
   27530:	00800244 	movi	r2,9
   27534:	15807016 	blt	r2,r22,276f8 <___vfprintf_internal_r+0x1fcc>
   27538:	00800c04 	movi	r2,48
   2753c:	b5800c04 	addi	r22,r22,48
   27540:	d8802345 	stb	r2,141(sp)
   27544:	dd802385 	stb	r22,142(sp)
   27548:	d88023c4 	addi	r2,sp,143
   2754c:	df0022c4 	addi	fp,sp,139
   27550:	d8c03317 	ldw	r3,204(sp)
   27554:	1739c83a 	sub	fp,r2,fp
   27558:	d9003317 	ldw	r4,204(sp)
   2755c:	e0c7883a 	add	r3,fp,r3
   27560:	df003a15 	stw	fp,232(sp)
   27564:	d8c02e15 	stw	r3,184(sp)
   27568:	00800044 	movi	r2,1
   2756c:	1100b30e 	bge	r2,r4,2783c <___vfprintf_internal_r+0x2110>
   27570:	d8c02e17 	ldw	r3,184(sp)
   27574:	18c00044 	addi	r3,r3,1
   27578:	d8c02e15 	stw	r3,184(sp)
   2757c:	1805883a 	mov	r2,r3
   27580:	1800ac16 	blt	r3,zero,27834 <___vfprintf_internal_r+0x2108>
   27584:	d8003215 	stw	zero,200(sp)
   27588:	003e5d06 	br	26f00 <__alt_data_end+0xfffe7b00>
   2758c:	d9002c17 	ldw	r4,176(sp)
   27590:	d9801e04 	addi	r6,sp,120
   27594:	b80b883a 	mov	r5,r23
   27598:	002c2440 	call	2c244 <__sprint_r>
   2759c:	1039651e 	bne	r2,zero,25b34 <__alt_data_end+0xfffe6734>
   275a0:	dc402617 	ldw	r17,152(sp)
   275a4:	d8c02017 	ldw	r3,128(sp)
   275a8:	d8801f17 	ldw	r2,124(sp)
   275ac:	da000404 	addi	r8,sp,16
   275b0:	003ed606 	br	2710c <__alt_data_end+0xfffe7d0c>
   275b4:	582b883a 	mov	r21,r11
   275b8:	d8002915 	stw	zero,164(sp)
   275bc:	0038bd06 	br	258b4 <__alt_data_end+0xfffe64b4>
   275c0:	d8802917 	ldw	r2,164(sp)
   275c4:	103e071e 	bne	r2,zero,26de4 <__alt_data_end+0xfffe79e4>
   275c8:	dc002915 	stw	r16,164(sp)
   275cc:	003e0506 	br	26de4 <__alt_data_end+0xfffe79e4>
   275d0:	d9002917 	ldw	r4,164(sp)
   275d4:	20c00044 	addi	r3,r4,1
   275d8:	003e0f06 	br	26e18 <__alt_data_end+0xfffe7a18>
   275dc:	01400184 	movi	r5,6
   275e0:	d9402915 	stw	r5,164(sp)
   275e4:	003dff06 	br	26de4 <__alt_data_end+0xfffe79e4>
   275e8:	d8802104 	addi	r2,sp,132
   275ec:	d8800315 	stw	r2,12(sp)
   275f0:	d8802504 	addi	r2,sp,148
   275f4:	d8800215 	stw	r2,8(sp)
   275f8:	d8802604 	addi	r2,sp,152
   275fc:	d8800115 	stw	r2,4(sp)
   27600:	d8802917 	ldw	r2,164(sp)
   27604:	d9403617 	ldw	r5,216(sp)
   27608:	d9002c17 	ldw	r4,176(sp)
   2760c:	d8800015 	stw	r2,0(sp)
   27610:	01c000c4 	movi	r7,3
   27614:	980d883a 	mov	r6,r19
   27618:	da003d15 	stw	r8,244(sp)
   2761c:	0027d500 	call	27d50 <_dtoa_r>
   27620:	d8c02917 	ldw	r3,164(sp)
   27624:	da003d17 	ldw	r8,244(sp)
   27628:	1021883a 	mov	r16,r2
   2762c:	10f9883a 	add	fp,r2,r3
   27630:	81000007 	ldb	r4,0(r16)
   27634:	00800c04 	movi	r2,48
   27638:	20805e26 	beq	r4,r2,277b4 <___vfprintf_internal_r+0x2088>
   2763c:	d8c02617 	ldw	r3,152(sp)
   27640:	e0f9883a 	add	fp,fp,r3
   27644:	003e0a06 	br	26e70 <__alt_data_end+0xfffe7a70>
   27648:	00c00b44 	movi	r3,45
   2764c:	24e0003c 	xorhi	r19,r4,32768
   27650:	d8c02a05 	stb	r3,168(sp)
   27654:	003de906 	br	26dfc <__alt_data_end+0xfffe79fc>
   27658:	d8c03217 	ldw	r3,200(sp)
   2765c:	00c07a0e 	bge	zero,r3,27848 <___vfprintf_internal_r+0x211c>
   27660:	00800044 	movi	r2,1
   27664:	d9003317 	ldw	r4,204(sp)
   27668:	1105883a 	add	r2,r2,r4
   2766c:	d8802e15 	stw	r2,184(sp)
   27670:	10004e16 	blt	r2,zero,277ac <___vfprintf_internal_r+0x2080>
   27674:	044019c4 	movi	r17,103
   27678:	003e2106 	br	26f00 <__alt_data_end+0xfffe7b00>
   2767c:	d9002917 	ldw	r4,164(sp)
   27680:	d8802104 	addi	r2,sp,132
   27684:	d8800315 	stw	r2,12(sp)
   27688:	d9000015 	stw	r4,0(sp)
   2768c:	d8802504 	addi	r2,sp,148
   27690:	d9403617 	ldw	r5,216(sp)
   27694:	d9002c17 	ldw	r4,176(sp)
   27698:	d8800215 	stw	r2,8(sp)
   2769c:	d8802604 	addi	r2,sp,152
   276a0:	d8800115 	stw	r2,4(sp)
   276a4:	01c000c4 	movi	r7,3
   276a8:	980d883a 	mov	r6,r19
   276ac:	da003d15 	stw	r8,244(sp)
   276b0:	0027d500 	call	27d50 <_dtoa_r>
   276b4:	d8c02917 	ldw	r3,164(sp)
   276b8:	da003d17 	ldw	r8,244(sp)
   276bc:	1021883a 	mov	r16,r2
   276c0:	00801184 	movi	r2,70
   276c4:	80f9883a 	add	fp,r16,r3
   276c8:	88bfd926 	beq	r17,r2,27630 <__alt_data_end+0xfffe8230>
   276cc:	003de806 	br	26e70 <__alt_data_end+0xfffe7a70>
   276d0:	d9002917 	ldw	r4,164(sp)
   276d4:	00c04d0e 	bge	zero,r3,2780c <___vfprintf_internal_r+0x20e0>
   276d8:	2000441e 	bne	r4,zero,277ec <___vfprintf_internal_r+0x20c0>
   276dc:	9480004c 	andi	r18,r18,1
   276e0:	9000421e 	bne	r18,zero,277ec <___vfprintf_internal_r+0x20c0>
   276e4:	1805883a 	mov	r2,r3
   276e8:	18007016 	blt	r3,zero,278ac <___vfprintf_internal_r+0x2180>
   276ec:	d8c03217 	ldw	r3,200(sp)
   276f0:	d8c02e15 	stw	r3,184(sp)
   276f4:	003e0206 	br	26f00 <__alt_data_end+0xfffe7b00>
   276f8:	df0022c4 	addi	fp,sp,139
   276fc:	dc002915 	stw	r16,164(sp)
   27700:	4027883a 	mov	r19,r8
   27704:	e021883a 	mov	r16,fp
   27708:	b009883a 	mov	r4,r22
   2770c:	01400284 	movi	r5,10
   27710:	0021a480 	call	21a48 <__modsi3>
   27714:	10800c04 	addi	r2,r2,48
   27718:	843fffc4 	addi	r16,r16,-1
   2771c:	b009883a 	mov	r4,r22
   27720:	01400284 	movi	r5,10
   27724:	80800005 	stb	r2,0(r16)
   27728:	00219c40 	call	219c4 <__divsi3>
   2772c:	102d883a 	mov	r22,r2
   27730:	00800244 	movi	r2,9
   27734:	15bff416 	blt	r2,r22,27708 <__alt_data_end+0xfffe8308>
   27738:	9811883a 	mov	r8,r19
   2773c:	b0800c04 	addi	r2,r22,48
   27740:	8027883a 	mov	r19,r16
   27744:	997fffc4 	addi	r5,r19,-1
   27748:	98bfffc5 	stb	r2,-1(r19)
   2774c:	dc002917 	ldw	r16,164(sp)
   27750:	2f006a2e 	bgeu	r5,fp,278fc <___vfprintf_internal_r+0x21d0>
   27754:	d9c02384 	addi	r7,sp,142
   27758:	3ccfc83a 	sub	r7,r7,r19
   2775c:	d9002344 	addi	r4,sp,141
   27760:	e1cf883a 	add	r7,fp,r7
   27764:	00000106 	br	2776c <___vfprintf_internal_r+0x2040>
   27768:	28800003 	ldbu	r2,0(r5)
   2776c:	20800005 	stb	r2,0(r4)
   27770:	21000044 	addi	r4,r4,1
   27774:	29400044 	addi	r5,r5,1
   27778:	393ffb1e 	bne	r7,r4,27768 <__alt_data_end+0xfffe8368>
   2777c:	d8802304 	addi	r2,sp,140
   27780:	14c5c83a 	sub	r2,r2,r19
   27784:	d8c02344 	addi	r3,sp,141
   27788:	1885883a 	add	r2,r3,r2
   2778c:	003f7006 	br	27550 <__alt_data_end+0xfffe8150>
   27790:	0005883a 	mov	r2,zero
   27794:	003f0f06 	br	273d4 <__alt_data_end+0xfffe7fd4>
   27798:	d8c03217 	ldw	r3,200(sp)
   2779c:	18c00044 	addi	r3,r3,1
   277a0:	d8c02e15 	stw	r3,184(sp)
   277a4:	1805883a 	mov	r2,r3
   277a8:	183fb20e 	bge	r3,zero,27674 <__alt_data_end+0xfffe8274>
   277ac:	0005883a 	mov	r2,zero
   277b0:	003fb006 	br	27674 <__alt_data_end+0xfffe8274>
   277b4:	d9003617 	ldw	r4,216(sp)
   277b8:	000d883a 	mov	r6,zero
   277bc:	000f883a 	mov	r7,zero
   277c0:	980b883a 	mov	r5,r19
   277c4:	d8c03c15 	stw	r3,240(sp)
   277c8:	da003d15 	stw	r8,244(sp)
   277cc:	002f6f00 	call	2f6f0 <__eqdf2>
   277d0:	d8c03c17 	ldw	r3,240(sp)
   277d4:	da003d17 	ldw	r8,244(sp)
   277d8:	103f9826 	beq	r2,zero,2763c <__alt_data_end+0xfffe823c>
   277dc:	00800044 	movi	r2,1
   277e0:	10c7c83a 	sub	r3,r2,r3
   277e4:	d8c02615 	stw	r3,152(sp)
   277e8:	003f9506 	br	27640 <__alt_data_end+0xfffe8240>
   277ec:	d9002917 	ldw	r4,164(sp)
   277f0:	d8c03217 	ldw	r3,200(sp)
   277f4:	20800044 	addi	r2,r4,1
   277f8:	1885883a 	add	r2,r3,r2
   277fc:	d8802e15 	stw	r2,184(sp)
   27800:	103dbf0e 	bge	r2,zero,26f00 <__alt_data_end+0xfffe7b00>
   27804:	0005883a 	mov	r2,zero
   27808:	003dbd06 	br	26f00 <__alt_data_end+0xfffe7b00>
   2780c:	2000211e 	bne	r4,zero,27894 <___vfprintf_internal_r+0x2168>
   27810:	9480004c 	andi	r18,r18,1
   27814:	90001f1e 	bne	r18,zero,27894 <___vfprintf_internal_r+0x2168>
   27818:	00800044 	movi	r2,1
   2781c:	d8802e15 	stw	r2,184(sp)
   27820:	003db706 	br	26f00 <__alt_data_end+0xfffe7b00>
   27824:	00800b44 	movi	r2,45
   27828:	05adc83a 	sub	r22,zero,r22
   2782c:	d8802305 	stb	r2,140(sp)
   27830:	003f3f06 	br	27530 <__alt_data_end+0xfffe8130>
   27834:	0005883a 	mov	r2,zero
   27838:	003f5206 	br	27584 <__alt_data_end+0xfffe8184>
   2783c:	90a4703a 	and	r18,r18,r2
   27840:	903f4e26 	beq	r18,zero,2757c <__alt_data_end+0xfffe817c>
   27844:	003f4a06 	br	27570 <__alt_data_end+0xfffe8170>
   27848:	00800084 	movi	r2,2
   2784c:	10c5c83a 	sub	r2,r2,r3
   27850:	003f8406 	br	27664 <__alt_data_end+0xfffe8264>
   27854:	d8802d17 	ldw	r2,180(sp)
   27858:	d9002d17 	ldw	r4,180(sp)
   2785c:	ac400043 	ldbu	r17,1(r21)
   27860:	10800017 	ldw	r2,0(r2)
   27864:	582b883a 	mov	r21,r11
   27868:	d8802915 	stw	r2,164(sp)
   2786c:	20800104 	addi	r2,r4,4
   27870:	d9002917 	ldw	r4,164(sp)
   27874:	d8802d15 	stw	r2,180(sp)
   27878:	203e7a0e 	bge	r4,zero,27264 <__alt_data_end+0xfffe7e64>
   2787c:	8c403fcc 	andi	r17,r17,255
   27880:	00bfffc4 	movi	r2,-1
   27884:	8c40201c 	xori	r17,r17,128
   27888:	d8802915 	stw	r2,164(sp)
   2788c:	8c7fe004 	addi	r17,r17,-128
   27890:	00380706 	br	258b0 <__alt_data_end+0xfffe64b0>
   27894:	d8c02917 	ldw	r3,164(sp)
   27898:	18c00084 	addi	r3,r3,2
   2789c:	d8c02e15 	stw	r3,184(sp)
   278a0:	1805883a 	mov	r2,r3
   278a4:	183d960e 	bge	r3,zero,26f00 <__alt_data_end+0xfffe7b00>
   278a8:	003fd606 	br	27804 <__alt_data_end+0xfffe8404>
   278ac:	0005883a 	mov	r2,zero
   278b0:	003f8e06 	br	276ec <__alt_data_end+0xfffe82ec>
   278b4:	9080004c 	andi	r2,r18,1
   278b8:	103f811e 	bne	r2,zero,276c0 <__alt_data_end+0xfffe82c0>
   278bc:	d8802117 	ldw	r2,132(sp)
   278c0:	1405c83a 	sub	r2,r2,r16
   278c4:	d8803315 	stw	r2,204(sp)
   278c8:	b47ef326 	beq	r22,r17,27498 <__alt_data_end+0xfffe8098>
   278cc:	dd802617 	ldw	r22,152(sp)
   278d0:	003f1106 	br	27518 <__alt_data_end+0xfffe8118>
   278d4:	d9c02785 	stb	r7,158(sp)
   278d8:	00390406 	br	25cec <__alt_data_end+0xfffe68ec>
   278dc:	d9c02785 	stb	r7,158(sp)
   278e0:	0038d306 	br	25c30 <__alt_data_end+0xfffe6830>
   278e4:	d9c02785 	stb	r7,158(sp)
   278e8:	003a6106 	br	26270 <__alt_data_end+0xfffe6e70>
   278ec:	d9c02785 	stb	r7,158(sp)
   278f0:	003af806 	br	264d4 <__alt_data_end+0xfffe70d4>
   278f4:	0005883a 	mov	r2,zero
   278f8:	003d7e06 	br	26ef4 <__alt_data_end+0xfffe7af4>
   278fc:	d8802344 	addi	r2,sp,141
   27900:	003f1306 	br	27550 <__alt_data_end+0xfffe8150>
   27904:	d9c02785 	stb	r7,158(sp)
   27908:	00392306 	br	25d98 <__alt_data_end+0xfffe6998>
   2790c:	d9c02785 	stb	r7,158(sp)
   27910:	003aa906 	br	263b8 <__alt_data_end+0xfffe6fb8>
   27914:	d9c02785 	stb	r7,158(sp)
   27918:	003a3d06 	br	26210 <__alt_data_end+0xfffe6e10>
   2791c:	d9c02785 	stb	r7,158(sp)
   27920:	003aca06 	br	2644c <__alt_data_end+0xfffe704c>

00027924 <__vfprintf_internal>:
   27924:	008000f4 	movhi	r2,3
   27928:	10901e04 	addi	r2,r2,16504
   2792c:	300f883a 	mov	r7,r6
   27930:	280d883a 	mov	r6,r5
   27934:	200b883a 	mov	r5,r4
   27938:	11000017 	ldw	r4,0(r2)
   2793c:	002572c1 	jmpi	2572c <___vfprintf_internal_r>

00027940 <__sbprintf>:
   27940:	2880030b 	ldhu	r2,12(r5)
   27944:	2ac01917 	ldw	r11,100(r5)
   27948:	2a80038b 	ldhu	r10,14(r5)
   2794c:	2a400717 	ldw	r9,28(r5)
   27950:	2a000917 	ldw	r8,36(r5)
   27954:	defee204 	addi	sp,sp,-1144
   27958:	00c10004 	movi	r3,1024
   2795c:	dc011a15 	stw	r16,1128(sp)
   27960:	10bfff4c 	andi	r2,r2,65533
   27964:	2821883a 	mov	r16,r5
   27968:	d8cb883a 	add	r5,sp,r3
   2796c:	dc811c15 	stw	r18,1136(sp)
   27970:	dc411b15 	stw	r17,1132(sp)
   27974:	dfc11d15 	stw	ra,1140(sp)
   27978:	2025883a 	mov	r18,r4
   2797c:	d881030d 	sth	r2,1036(sp)
   27980:	dac11915 	stw	r11,1124(sp)
   27984:	da81038d 	sth	r10,1038(sp)
   27988:	da410715 	stw	r9,1052(sp)
   2798c:	da010915 	stw	r8,1060(sp)
   27990:	dec10015 	stw	sp,1024(sp)
   27994:	dec10415 	stw	sp,1040(sp)
   27998:	d8c10215 	stw	r3,1032(sp)
   2799c:	d8c10515 	stw	r3,1044(sp)
   279a0:	d8010615 	stw	zero,1048(sp)
   279a4:	002572c0 	call	2572c <___vfprintf_internal_r>
   279a8:	1023883a 	mov	r17,r2
   279ac:	10000416 	blt	r2,zero,279c0 <__sbprintf+0x80>
   279b0:	d9410004 	addi	r5,sp,1024
   279b4:	9009883a 	mov	r4,r18
   279b8:	00295f40 	call	295f4 <_fflush_r>
   279bc:	10000d1e 	bne	r2,zero,279f4 <__sbprintf+0xb4>
   279c0:	d881030b 	ldhu	r2,1036(sp)
   279c4:	1080100c 	andi	r2,r2,64
   279c8:	10000326 	beq	r2,zero,279d8 <__sbprintf+0x98>
   279cc:	8080030b 	ldhu	r2,12(r16)
   279d0:	10801014 	ori	r2,r2,64
   279d4:	8080030d 	sth	r2,12(r16)
   279d8:	8805883a 	mov	r2,r17
   279dc:	dfc11d17 	ldw	ra,1140(sp)
   279e0:	dc811c17 	ldw	r18,1136(sp)
   279e4:	dc411b17 	ldw	r17,1132(sp)
   279e8:	dc011a17 	ldw	r16,1128(sp)
   279ec:	dec11e04 	addi	sp,sp,1144
   279f0:	f800283a 	ret
   279f4:	047fffc4 	movi	r17,-1
   279f8:	003ff106 	br	279c0 <__alt_data_end+0xfffe85c0>

000279fc <__swsetup_r>:
   279fc:	008000f4 	movhi	r2,3
   27a00:	defffd04 	addi	sp,sp,-12
   27a04:	10901e04 	addi	r2,r2,16504
   27a08:	dc400115 	stw	r17,4(sp)
   27a0c:	2023883a 	mov	r17,r4
   27a10:	11000017 	ldw	r4,0(r2)
   27a14:	dc000015 	stw	r16,0(sp)
   27a18:	dfc00215 	stw	ra,8(sp)
   27a1c:	2821883a 	mov	r16,r5
   27a20:	20000226 	beq	r4,zero,27a2c <__swsetup_r+0x30>
   27a24:	20800e17 	ldw	r2,56(r4)
   27a28:	10003126 	beq	r2,zero,27af0 <__swsetup_r+0xf4>
   27a2c:	8080030b 	ldhu	r2,12(r16)
   27a30:	10c0020c 	andi	r3,r2,8
   27a34:	1009883a 	mov	r4,r2
   27a38:	18000f26 	beq	r3,zero,27a78 <__swsetup_r+0x7c>
   27a3c:	80c00417 	ldw	r3,16(r16)
   27a40:	18001526 	beq	r3,zero,27a98 <__swsetup_r+0x9c>
   27a44:	1100004c 	andi	r4,r2,1
   27a48:	20001c1e 	bne	r4,zero,27abc <__swsetup_r+0xc0>
   27a4c:	1080008c 	andi	r2,r2,2
   27a50:	1000291e 	bne	r2,zero,27af8 <__swsetup_r+0xfc>
   27a54:	80800517 	ldw	r2,20(r16)
   27a58:	80800215 	stw	r2,8(r16)
   27a5c:	18001c26 	beq	r3,zero,27ad0 <__swsetup_r+0xd4>
   27a60:	0005883a 	mov	r2,zero
   27a64:	dfc00217 	ldw	ra,8(sp)
   27a68:	dc400117 	ldw	r17,4(sp)
   27a6c:	dc000017 	ldw	r16,0(sp)
   27a70:	dec00304 	addi	sp,sp,12
   27a74:	f800283a 	ret
   27a78:	2080040c 	andi	r2,r4,16
   27a7c:	10002e26 	beq	r2,zero,27b38 <__swsetup_r+0x13c>
   27a80:	2080010c 	andi	r2,r4,4
   27a84:	10001e1e 	bne	r2,zero,27b00 <__swsetup_r+0x104>
   27a88:	80c00417 	ldw	r3,16(r16)
   27a8c:	20800214 	ori	r2,r4,8
   27a90:	8080030d 	sth	r2,12(r16)
   27a94:	183feb1e 	bne	r3,zero,27a44 <__alt_data_end+0xfffe8644>
   27a98:	1100a00c 	andi	r4,r2,640
   27a9c:	01408004 	movi	r5,512
   27aa0:	217fe826 	beq	r4,r5,27a44 <__alt_data_end+0xfffe8644>
   27aa4:	800b883a 	mov	r5,r16
   27aa8:	8809883a 	mov	r4,r17
   27aac:	002a0b80 	call	2a0b8 <__smakebuf_r>
   27ab0:	8080030b 	ldhu	r2,12(r16)
   27ab4:	80c00417 	ldw	r3,16(r16)
   27ab8:	003fe206 	br	27a44 <__alt_data_end+0xfffe8644>
   27abc:	80800517 	ldw	r2,20(r16)
   27ac0:	80000215 	stw	zero,8(r16)
   27ac4:	0085c83a 	sub	r2,zero,r2
   27ac8:	80800615 	stw	r2,24(r16)
   27acc:	183fe41e 	bne	r3,zero,27a60 <__alt_data_end+0xfffe8660>
   27ad0:	80c0030b 	ldhu	r3,12(r16)
   27ad4:	0005883a 	mov	r2,zero
   27ad8:	1900200c 	andi	r4,r3,128
   27adc:	203fe126 	beq	r4,zero,27a64 <__alt_data_end+0xfffe8664>
   27ae0:	18c01014 	ori	r3,r3,64
   27ae4:	80c0030d 	sth	r3,12(r16)
   27ae8:	00bfffc4 	movi	r2,-1
   27aec:	003fdd06 	br	27a64 <__alt_data_end+0xfffe8664>
   27af0:	00299d00 	call	299d0 <__sinit>
   27af4:	003fcd06 	br	27a2c <__alt_data_end+0xfffe862c>
   27af8:	0005883a 	mov	r2,zero
   27afc:	003fd606 	br	27a58 <__alt_data_end+0xfffe8658>
   27b00:	81400c17 	ldw	r5,48(r16)
   27b04:	28000626 	beq	r5,zero,27b20 <__swsetup_r+0x124>
   27b08:	80801004 	addi	r2,r16,64
   27b0c:	28800326 	beq	r5,r2,27b1c <__swsetup_r+0x120>
   27b10:	8809883a 	mov	r4,r17
   27b14:	0029b440 	call	29b44 <_free_r>
   27b18:	8100030b 	ldhu	r4,12(r16)
   27b1c:	80000c15 	stw	zero,48(r16)
   27b20:	80c00417 	ldw	r3,16(r16)
   27b24:	00bff6c4 	movi	r2,-37
   27b28:	1108703a 	and	r4,r2,r4
   27b2c:	80000115 	stw	zero,4(r16)
   27b30:	80c00015 	stw	r3,0(r16)
   27b34:	003fd506 	br	27a8c <__alt_data_end+0xfffe868c>
   27b38:	00800244 	movi	r2,9
   27b3c:	88800015 	stw	r2,0(r17)
   27b40:	20801014 	ori	r2,r4,64
   27b44:	8080030d 	sth	r2,12(r16)
   27b48:	00bfffc4 	movi	r2,-1
   27b4c:	003fc506 	br	27a64 <__alt_data_end+0xfffe8664>

00027b50 <quorem>:
   27b50:	defff704 	addi	sp,sp,-36
   27b54:	dc800215 	stw	r18,8(sp)
   27b58:	20800417 	ldw	r2,16(r4)
   27b5c:	2c800417 	ldw	r18,16(r5)
   27b60:	dfc00815 	stw	ra,32(sp)
   27b64:	ddc00715 	stw	r23,28(sp)
   27b68:	dd800615 	stw	r22,24(sp)
   27b6c:	dd400515 	stw	r21,20(sp)
   27b70:	dd000415 	stw	r20,16(sp)
   27b74:	dcc00315 	stw	r19,12(sp)
   27b78:	dc400115 	stw	r17,4(sp)
   27b7c:	dc000015 	stw	r16,0(sp)
   27b80:	14807116 	blt	r2,r18,27d48 <quorem+0x1f8>
   27b84:	94bfffc4 	addi	r18,r18,-1
   27b88:	94ad883a 	add	r22,r18,r18
   27b8c:	b5ad883a 	add	r22,r22,r22
   27b90:	2c400504 	addi	r17,r5,20
   27b94:	8da9883a 	add	r20,r17,r22
   27b98:	25400504 	addi	r21,r4,20
   27b9c:	282f883a 	mov	r23,r5
   27ba0:	adad883a 	add	r22,r21,r22
   27ba4:	a1400017 	ldw	r5,0(r20)
   27ba8:	2021883a 	mov	r16,r4
   27bac:	b1000017 	ldw	r4,0(r22)
   27bb0:	29400044 	addi	r5,r5,1
   27bb4:	0021abc0 	call	21abc <__udivsi3>
   27bb8:	1027883a 	mov	r19,r2
   27bbc:	10002c26 	beq	r2,zero,27c70 <quorem+0x120>
   27bc0:	a813883a 	mov	r9,r21
   27bc4:	880b883a 	mov	r5,r17
   27bc8:	0009883a 	mov	r4,zero
   27bcc:	000d883a 	mov	r6,zero
   27bd0:	2a000017 	ldw	r8,0(r5)
   27bd4:	49c00017 	ldw	r7,0(r9)
   27bd8:	29400104 	addi	r5,r5,4
   27bdc:	40bfffcc 	andi	r2,r8,65535
   27be0:	14c5383a 	mul	r2,r2,r19
   27be4:	4010d43a 	srli	r8,r8,16
   27be8:	38ffffcc 	andi	r3,r7,65535
   27bec:	1105883a 	add	r2,r2,r4
   27bf0:	1008d43a 	srli	r4,r2,16
   27bf4:	44d1383a 	mul	r8,r8,r19
   27bf8:	198d883a 	add	r6,r3,r6
   27bfc:	10ffffcc 	andi	r3,r2,65535
   27c00:	30c7c83a 	sub	r3,r6,r3
   27c04:	380ed43a 	srli	r7,r7,16
   27c08:	4105883a 	add	r2,r8,r4
   27c0c:	180dd43a 	srai	r6,r3,16
   27c10:	113fffcc 	andi	r4,r2,65535
   27c14:	390fc83a 	sub	r7,r7,r4
   27c18:	398d883a 	add	r6,r7,r6
   27c1c:	300e943a 	slli	r7,r6,16
   27c20:	18ffffcc 	andi	r3,r3,65535
   27c24:	1008d43a 	srli	r4,r2,16
   27c28:	38ceb03a 	or	r7,r7,r3
   27c2c:	49c00015 	stw	r7,0(r9)
   27c30:	300dd43a 	srai	r6,r6,16
   27c34:	4a400104 	addi	r9,r9,4
   27c38:	a17fe52e 	bgeu	r20,r5,27bd0 <__alt_data_end+0xfffe87d0>
   27c3c:	b0800017 	ldw	r2,0(r22)
   27c40:	10000b1e 	bne	r2,zero,27c70 <quorem+0x120>
   27c44:	b0bfff04 	addi	r2,r22,-4
   27c48:	a880082e 	bgeu	r21,r2,27c6c <quorem+0x11c>
   27c4c:	b0ffff17 	ldw	r3,-4(r22)
   27c50:	18000326 	beq	r3,zero,27c60 <quorem+0x110>
   27c54:	00000506 	br	27c6c <quorem+0x11c>
   27c58:	10c00017 	ldw	r3,0(r2)
   27c5c:	1800031e 	bne	r3,zero,27c6c <quorem+0x11c>
   27c60:	10bfff04 	addi	r2,r2,-4
   27c64:	94bfffc4 	addi	r18,r18,-1
   27c68:	a8bffb36 	bltu	r21,r2,27c58 <__alt_data_end+0xfffe8858>
   27c6c:	84800415 	stw	r18,16(r16)
   27c70:	b80b883a 	mov	r5,r23
   27c74:	8009883a 	mov	r4,r16
   27c78:	002b69c0 	call	2b69c <__mcmp>
   27c7c:	10002616 	blt	r2,zero,27d18 <quorem+0x1c8>
   27c80:	9cc00044 	addi	r19,r19,1
   27c84:	a805883a 	mov	r2,r21
   27c88:	000b883a 	mov	r5,zero
   27c8c:	11000017 	ldw	r4,0(r2)
   27c90:	89800017 	ldw	r6,0(r17)
   27c94:	10800104 	addi	r2,r2,4
   27c98:	20ffffcc 	andi	r3,r4,65535
   27c9c:	194b883a 	add	r5,r3,r5
   27ca0:	30ffffcc 	andi	r3,r6,65535
   27ca4:	28c7c83a 	sub	r3,r5,r3
   27ca8:	300cd43a 	srli	r6,r6,16
   27cac:	2008d43a 	srli	r4,r4,16
   27cb0:	180bd43a 	srai	r5,r3,16
   27cb4:	18ffffcc 	andi	r3,r3,65535
   27cb8:	2189c83a 	sub	r4,r4,r6
   27cbc:	2149883a 	add	r4,r4,r5
   27cc0:	200c943a 	slli	r6,r4,16
   27cc4:	8c400104 	addi	r17,r17,4
   27cc8:	200bd43a 	srai	r5,r4,16
   27ccc:	30c6b03a 	or	r3,r6,r3
   27cd0:	10ffff15 	stw	r3,-4(r2)
   27cd4:	a47fed2e 	bgeu	r20,r17,27c8c <__alt_data_end+0xfffe888c>
   27cd8:	9485883a 	add	r2,r18,r18
   27cdc:	1085883a 	add	r2,r2,r2
   27ce0:	a887883a 	add	r3,r21,r2
   27ce4:	18800017 	ldw	r2,0(r3)
   27ce8:	10000b1e 	bne	r2,zero,27d18 <quorem+0x1c8>
   27cec:	18bfff04 	addi	r2,r3,-4
   27cf0:	a880082e 	bgeu	r21,r2,27d14 <quorem+0x1c4>
   27cf4:	18ffff17 	ldw	r3,-4(r3)
   27cf8:	18000326 	beq	r3,zero,27d08 <quorem+0x1b8>
   27cfc:	00000506 	br	27d14 <quorem+0x1c4>
   27d00:	10c00017 	ldw	r3,0(r2)
   27d04:	1800031e 	bne	r3,zero,27d14 <quorem+0x1c4>
   27d08:	10bfff04 	addi	r2,r2,-4
   27d0c:	94bfffc4 	addi	r18,r18,-1
   27d10:	a8bffb36 	bltu	r21,r2,27d00 <__alt_data_end+0xfffe8900>
   27d14:	84800415 	stw	r18,16(r16)
   27d18:	9805883a 	mov	r2,r19
   27d1c:	dfc00817 	ldw	ra,32(sp)
   27d20:	ddc00717 	ldw	r23,28(sp)
   27d24:	dd800617 	ldw	r22,24(sp)
   27d28:	dd400517 	ldw	r21,20(sp)
   27d2c:	dd000417 	ldw	r20,16(sp)
   27d30:	dcc00317 	ldw	r19,12(sp)
   27d34:	dc800217 	ldw	r18,8(sp)
   27d38:	dc400117 	ldw	r17,4(sp)
   27d3c:	dc000017 	ldw	r16,0(sp)
   27d40:	dec00904 	addi	sp,sp,36
   27d44:	f800283a 	ret
   27d48:	0005883a 	mov	r2,zero
   27d4c:	003ff306 	br	27d1c <__alt_data_end+0xfffe891c>

00027d50 <_dtoa_r>:
   27d50:	20801017 	ldw	r2,64(r4)
   27d54:	deffde04 	addi	sp,sp,-136
   27d58:	df002015 	stw	fp,128(sp)
   27d5c:	dcc01b15 	stw	r19,108(sp)
   27d60:	dc801a15 	stw	r18,104(sp)
   27d64:	dc401915 	stw	r17,100(sp)
   27d68:	dc001815 	stw	r16,96(sp)
   27d6c:	dfc02115 	stw	ra,132(sp)
   27d70:	ddc01f15 	stw	r23,124(sp)
   27d74:	dd801e15 	stw	r22,120(sp)
   27d78:	dd401d15 	stw	r21,116(sp)
   27d7c:	dd001c15 	stw	r20,112(sp)
   27d80:	d9c00315 	stw	r7,12(sp)
   27d84:	2039883a 	mov	fp,r4
   27d88:	3023883a 	mov	r17,r6
   27d8c:	2825883a 	mov	r18,r5
   27d90:	dc002417 	ldw	r16,144(sp)
   27d94:	3027883a 	mov	r19,r6
   27d98:	10000826 	beq	r2,zero,27dbc <_dtoa_r+0x6c>
   27d9c:	21801117 	ldw	r6,68(r4)
   27da0:	00c00044 	movi	r3,1
   27da4:	100b883a 	mov	r5,r2
   27da8:	1986983a 	sll	r3,r3,r6
   27dac:	11800115 	stw	r6,4(r2)
   27db0:	10c00215 	stw	r3,8(r2)
   27db4:	002ae7c0 	call	2ae7c <_Bfree>
   27db8:	e0001015 	stw	zero,64(fp)
   27dbc:	88002e16 	blt	r17,zero,27e78 <_dtoa_r+0x128>
   27dc0:	80000015 	stw	zero,0(r16)
   27dc4:	889ffc2c 	andhi	r2,r17,32752
   27dc8:	00dffc34 	movhi	r3,32752
   27dcc:	10c01c26 	beq	r2,r3,27e40 <_dtoa_r+0xf0>
   27dd0:	000d883a 	mov	r6,zero
   27dd4:	000f883a 	mov	r7,zero
   27dd8:	9009883a 	mov	r4,r18
   27ddc:	980b883a 	mov	r5,r19
   27de0:	002f6f00 	call	2f6f0 <__eqdf2>
   27de4:	10002b1e 	bne	r2,zero,27e94 <_dtoa_r+0x144>
   27de8:	d9c02317 	ldw	r7,140(sp)
   27dec:	00800044 	movi	r2,1
   27df0:	38800015 	stw	r2,0(r7)
   27df4:	d8802517 	ldw	r2,148(sp)
   27df8:	10019e26 	beq	r2,zero,28474 <_dtoa_r+0x724>
   27dfc:	d8c02517 	ldw	r3,148(sp)
   27e00:	008000f4 	movhi	r2,3
   27e04:	1088f744 	addi	r2,r2,9181
   27e08:	18800015 	stw	r2,0(r3)
   27e0c:	10bfffc4 	addi	r2,r2,-1
   27e10:	dfc02117 	ldw	ra,132(sp)
   27e14:	df002017 	ldw	fp,128(sp)
   27e18:	ddc01f17 	ldw	r23,124(sp)
   27e1c:	dd801e17 	ldw	r22,120(sp)
   27e20:	dd401d17 	ldw	r21,116(sp)
   27e24:	dd001c17 	ldw	r20,112(sp)
   27e28:	dcc01b17 	ldw	r19,108(sp)
   27e2c:	dc801a17 	ldw	r18,104(sp)
   27e30:	dc401917 	ldw	r17,100(sp)
   27e34:	dc001817 	ldw	r16,96(sp)
   27e38:	dec02204 	addi	sp,sp,136
   27e3c:	f800283a 	ret
   27e40:	d8c02317 	ldw	r3,140(sp)
   27e44:	0089c3c4 	movi	r2,9999
   27e48:	18800015 	stw	r2,0(r3)
   27e4c:	90017726 	beq	r18,zero,2842c <_dtoa_r+0x6dc>
   27e50:	008000f4 	movhi	r2,3
   27e54:	10890304 	addi	r2,r2,9228
   27e58:	d9002517 	ldw	r4,148(sp)
   27e5c:	203fec26 	beq	r4,zero,27e10 <__alt_data_end+0xfffe8a10>
   27e60:	10c000c7 	ldb	r3,3(r2)
   27e64:	1801781e 	bne	r3,zero,28448 <_dtoa_r+0x6f8>
   27e68:	10c000c4 	addi	r3,r2,3
   27e6c:	d9802517 	ldw	r6,148(sp)
   27e70:	30c00015 	stw	r3,0(r6)
   27e74:	003fe606 	br	27e10 <__alt_data_end+0xfffe8a10>
   27e78:	04e00034 	movhi	r19,32768
   27e7c:	9cffffc4 	addi	r19,r19,-1
   27e80:	00800044 	movi	r2,1
   27e84:	8ce6703a 	and	r19,r17,r19
   27e88:	80800015 	stw	r2,0(r16)
   27e8c:	9823883a 	mov	r17,r19
   27e90:	003fcc06 	br	27dc4 <__alt_data_end+0xfffe89c4>
   27e94:	d8800204 	addi	r2,sp,8
   27e98:	d8800015 	stw	r2,0(sp)
   27e9c:	d9c00104 	addi	r7,sp,4
   27ea0:	900b883a 	mov	r5,r18
   27ea4:	980d883a 	mov	r6,r19
   27ea8:	e009883a 	mov	r4,fp
   27eac:	8820d53a 	srli	r16,r17,20
   27eb0:	002ba680 	call	2ba68 <__d2b>
   27eb4:	d8800915 	stw	r2,36(sp)
   27eb8:	8001651e 	bne	r16,zero,28450 <_dtoa_r+0x700>
   27ebc:	dd800217 	ldw	r22,8(sp)
   27ec0:	dc000117 	ldw	r16,4(sp)
   27ec4:	00800804 	movi	r2,32
   27ec8:	b421883a 	add	r16,r22,r16
   27ecc:	80c10c84 	addi	r3,r16,1074
   27ed0:	10c2d10e 	bge	r2,r3,28a18 <_dtoa_r+0xcc8>
   27ed4:	00801004 	movi	r2,64
   27ed8:	81010484 	addi	r4,r16,1042
   27edc:	10c7c83a 	sub	r3,r2,r3
   27ee0:	9108d83a 	srl	r4,r18,r4
   27ee4:	88e2983a 	sll	r17,r17,r3
   27ee8:	2448b03a 	or	r4,r4,r17
   27eec:	002f7780 	call	2f778 <__floatunsidf>
   27ef0:	017f8434 	movhi	r5,65040
   27ef4:	01800044 	movi	r6,1
   27ef8:	1009883a 	mov	r4,r2
   27efc:	194b883a 	add	r5,r3,r5
   27f00:	843fffc4 	addi	r16,r16,-1
   27f04:	d9801115 	stw	r6,68(sp)
   27f08:	000d883a 	mov	r6,zero
   27f0c:	01cffe34 	movhi	r7,16376
   27f10:	002493c0 	call	2493c <__subdf3>
   27f14:	0198dbf4 	movhi	r6,25455
   27f18:	01cff4f4 	movhi	r7,16339
   27f1c:	3190d844 	addi	r6,r6,17249
   27f20:	39e1e9c4 	addi	r7,r7,-30809
   27f24:	1009883a 	mov	r4,r2
   27f28:	180b883a 	mov	r5,r3
   27f2c:	00242240 	call	24224 <__muldf3>
   27f30:	01a2d874 	movhi	r6,35681
   27f34:	01cff1f4 	movhi	r7,16327
   27f38:	31b22cc4 	addi	r6,r6,-14157
   27f3c:	39e28a04 	addi	r7,r7,-30168
   27f40:	180b883a 	mov	r5,r3
   27f44:	1009883a 	mov	r4,r2
   27f48:	0022ec00 	call	22ec0 <__adddf3>
   27f4c:	8009883a 	mov	r4,r16
   27f50:	1029883a 	mov	r20,r2
   27f54:	1823883a 	mov	r17,r3
   27f58:	00252b80 	call	252b8 <__floatsidf>
   27f5c:	019427f4 	movhi	r6,20639
   27f60:	01cff4f4 	movhi	r7,16339
   27f64:	319e7ec4 	addi	r6,r6,31227
   27f68:	39d104c4 	addi	r7,r7,17427
   27f6c:	1009883a 	mov	r4,r2
   27f70:	180b883a 	mov	r5,r3
   27f74:	00242240 	call	24224 <__muldf3>
   27f78:	100d883a 	mov	r6,r2
   27f7c:	180f883a 	mov	r7,r3
   27f80:	a009883a 	mov	r4,r20
   27f84:	880b883a 	mov	r5,r17
   27f88:	0022ec00 	call	22ec0 <__adddf3>
   27f8c:	1009883a 	mov	r4,r2
   27f90:	180b883a 	mov	r5,r3
   27f94:	1029883a 	mov	r20,r2
   27f98:	1823883a 	mov	r17,r3
   27f9c:	00252380 	call	25238 <__fixdfsi>
   27fa0:	000d883a 	mov	r6,zero
   27fa4:	000f883a 	mov	r7,zero
   27fa8:	a009883a 	mov	r4,r20
   27fac:	880b883a 	mov	r5,r17
   27fb0:	d8800515 	stw	r2,20(sp)
   27fb4:	00241300 	call	24130 <__ledf2>
   27fb8:	10028716 	blt	r2,zero,289d8 <_dtoa_r+0xc88>
   27fbc:	d8c00517 	ldw	r3,20(sp)
   27fc0:	00800584 	movi	r2,22
   27fc4:	10c27536 	bltu	r2,r3,2899c <_dtoa_r+0xc4c>
   27fc8:	180490fa 	slli	r2,r3,3
   27fcc:	00c000f4 	movhi	r3,3
   27fd0:	18c91e04 	addi	r3,r3,9336
   27fd4:	1885883a 	add	r2,r3,r2
   27fd8:	11000017 	ldw	r4,0(r2)
   27fdc:	11400117 	ldw	r5,4(r2)
   27fe0:	900d883a 	mov	r6,r18
   27fe4:	980f883a 	mov	r7,r19
   27fe8:	00240540 	call	24054 <__gedf2>
   27fec:	00828d0e 	bge	zero,r2,28a24 <_dtoa_r+0xcd4>
   27ff0:	d9000517 	ldw	r4,20(sp)
   27ff4:	d8000e15 	stw	zero,56(sp)
   27ff8:	213fffc4 	addi	r4,r4,-1
   27ffc:	d9000515 	stw	r4,20(sp)
   28000:	b42dc83a 	sub	r22,r22,r16
   28004:	b5bfffc4 	addi	r22,r22,-1
   28008:	b0026f16 	blt	r22,zero,289c8 <_dtoa_r+0xc78>
   2800c:	d8000815 	stw	zero,32(sp)
   28010:	d9c00517 	ldw	r7,20(sp)
   28014:	38026416 	blt	r7,zero,289a8 <_dtoa_r+0xc58>
   28018:	b1ed883a 	add	r22,r22,r7
   2801c:	d9c00d15 	stw	r7,52(sp)
   28020:	d8000a15 	stw	zero,40(sp)
   28024:	d9800317 	ldw	r6,12(sp)
   28028:	00800244 	movi	r2,9
   2802c:	11811436 	bltu	r2,r6,28480 <_dtoa_r+0x730>
   28030:	00800144 	movi	r2,5
   28034:	1184e10e 	bge	r2,r6,293bc <_dtoa_r+0x166c>
   28038:	31bfff04 	addi	r6,r6,-4
   2803c:	d9800315 	stw	r6,12(sp)
   28040:	0023883a 	mov	r17,zero
   28044:	d9800317 	ldw	r6,12(sp)
   28048:	008000c4 	movi	r2,3
   2804c:	30836726 	beq	r6,r2,28dec <_dtoa_r+0x109c>
   28050:	1183410e 	bge	r2,r6,28d58 <_dtoa_r+0x1008>
   28054:	d9c00317 	ldw	r7,12(sp)
   28058:	00800104 	movi	r2,4
   2805c:	38827c26 	beq	r7,r2,28a50 <_dtoa_r+0xd00>
   28060:	00800144 	movi	r2,5
   28064:	3884c41e 	bne	r7,r2,29378 <_dtoa_r+0x1628>
   28068:	00800044 	movi	r2,1
   2806c:	d8800b15 	stw	r2,44(sp)
   28070:	d8c00517 	ldw	r3,20(sp)
   28074:	d9002217 	ldw	r4,136(sp)
   28078:	1907883a 	add	r3,r3,r4
   2807c:	19800044 	addi	r6,r3,1
   28080:	d8c00c15 	stw	r3,48(sp)
   28084:	d9800615 	stw	r6,24(sp)
   28088:	0183a40e 	bge	zero,r6,28f1c <_dtoa_r+0x11cc>
   2808c:	d9800617 	ldw	r6,24(sp)
   28090:	3021883a 	mov	r16,r6
   28094:	e0001115 	stw	zero,68(fp)
   28098:	008005c4 	movi	r2,23
   2809c:	1184c92e 	bgeu	r2,r6,293c4 <_dtoa_r+0x1674>
   280a0:	00c00044 	movi	r3,1
   280a4:	00800104 	movi	r2,4
   280a8:	1085883a 	add	r2,r2,r2
   280ac:	11000504 	addi	r4,r2,20
   280b0:	180b883a 	mov	r5,r3
   280b4:	18c00044 	addi	r3,r3,1
   280b8:	313ffb2e 	bgeu	r6,r4,280a8 <__alt_data_end+0xfffe8ca8>
   280bc:	e1401115 	stw	r5,68(fp)
   280c0:	e009883a 	mov	r4,fp
   280c4:	002add40 	call	2add4 <_Balloc>
   280c8:	d8800715 	stw	r2,28(sp)
   280cc:	e0801015 	stw	r2,64(fp)
   280d0:	00800384 	movi	r2,14
   280d4:	1400f736 	bltu	r2,r16,284b4 <_dtoa_r+0x764>
   280d8:	8800f626 	beq	r17,zero,284b4 <_dtoa_r+0x764>
   280dc:	d9c00517 	ldw	r7,20(sp)
   280e0:	01c39a0e 	bge	zero,r7,28f4c <_dtoa_r+0x11fc>
   280e4:	388003cc 	andi	r2,r7,15
   280e8:	100490fa 	slli	r2,r2,3
   280ec:	382bd13a 	srai	r21,r7,4
   280f0:	00c000f4 	movhi	r3,3
   280f4:	18c91e04 	addi	r3,r3,9336
   280f8:	1885883a 	add	r2,r3,r2
   280fc:	a8c0040c 	andi	r3,r21,16
   28100:	12400017 	ldw	r9,0(r2)
   28104:	12000117 	ldw	r8,4(r2)
   28108:	18037926 	beq	r3,zero,28ef0 <_dtoa_r+0x11a0>
   2810c:	008000f4 	movhi	r2,3
   28110:	10891404 	addi	r2,r2,9296
   28114:	11800817 	ldw	r6,32(r2)
   28118:	11c00917 	ldw	r7,36(r2)
   2811c:	9009883a 	mov	r4,r18
   28120:	980b883a 	mov	r5,r19
   28124:	da001715 	stw	r8,92(sp)
   28128:	da401615 	stw	r9,88(sp)
   2812c:	002376c0 	call	2376c <__divdf3>
   28130:	da001717 	ldw	r8,92(sp)
   28134:	da401617 	ldw	r9,88(sp)
   28138:	ad4003cc 	andi	r21,r21,15
   2813c:	040000c4 	movi	r16,3
   28140:	1023883a 	mov	r17,r2
   28144:	1829883a 	mov	r20,r3
   28148:	a8001126 	beq	r21,zero,28190 <_dtoa_r+0x440>
   2814c:	05c000f4 	movhi	r23,3
   28150:	bdc91404 	addi	r23,r23,9296
   28154:	4805883a 	mov	r2,r9
   28158:	4007883a 	mov	r3,r8
   2815c:	a980004c 	andi	r6,r21,1
   28160:	1009883a 	mov	r4,r2
   28164:	a82bd07a 	srai	r21,r21,1
   28168:	180b883a 	mov	r5,r3
   2816c:	30000426 	beq	r6,zero,28180 <_dtoa_r+0x430>
   28170:	b9800017 	ldw	r6,0(r23)
   28174:	b9c00117 	ldw	r7,4(r23)
   28178:	84000044 	addi	r16,r16,1
   2817c:	00242240 	call	24224 <__muldf3>
   28180:	bdc00204 	addi	r23,r23,8
   28184:	a83ff51e 	bne	r21,zero,2815c <__alt_data_end+0xfffe8d5c>
   28188:	1013883a 	mov	r9,r2
   2818c:	1811883a 	mov	r8,r3
   28190:	480d883a 	mov	r6,r9
   28194:	400f883a 	mov	r7,r8
   28198:	8809883a 	mov	r4,r17
   2819c:	a00b883a 	mov	r5,r20
   281a0:	002376c0 	call	2376c <__divdf3>
   281a4:	d8800f15 	stw	r2,60(sp)
   281a8:	d8c01015 	stw	r3,64(sp)
   281ac:	d8c00e17 	ldw	r3,56(sp)
   281b0:	18000626 	beq	r3,zero,281cc <_dtoa_r+0x47c>
   281b4:	d9000f17 	ldw	r4,60(sp)
   281b8:	d9401017 	ldw	r5,64(sp)
   281bc:	000d883a 	mov	r6,zero
   281c0:	01cffc34 	movhi	r7,16368
   281c4:	00241300 	call	24130 <__ledf2>
   281c8:	10040b16 	blt	r2,zero,291f8 <_dtoa_r+0x14a8>
   281cc:	8009883a 	mov	r4,r16
   281d0:	00252b80 	call	252b8 <__floatsidf>
   281d4:	d9800f17 	ldw	r6,60(sp)
   281d8:	d9c01017 	ldw	r7,64(sp)
   281dc:	1009883a 	mov	r4,r2
   281e0:	180b883a 	mov	r5,r3
   281e4:	00242240 	call	24224 <__muldf3>
   281e8:	000d883a 	mov	r6,zero
   281ec:	01d00734 	movhi	r7,16412
   281f0:	1009883a 	mov	r4,r2
   281f4:	180b883a 	mov	r5,r3
   281f8:	0022ec00 	call	22ec0 <__adddf3>
   281fc:	1021883a 	mov	r16,r2
   28200:	d8800617 	ldw	r2,24(sp)
   28204:	047f3034 	movhi	r17,64704
   28208:	1c63883a 	add	r17,r3,r17
   2820c:	10031826 	beq	r2,zero,28e70 <_dtoa_r+0x1120>
   28210:	d8c00517 	ldw	r3,20(sp)
   28214:	db000617 	ldw	r12,24(sp)
   28218:	d8c01315 	stw	r3,76(sp)
   2821c:	d9000b17 	ldw	r4,44(sp)
   28220:	20038f26 	beq	r4,zero,29060 <_dtoa_r+0x1310>
   28224:	60bfffc4 	addi	r2,r12,-1
   28228:	100490fa 	slli	r2,r2,3
   2822c:	00c000f4 	movhi	r3,3
   28230:	18c91e04 	addi	r3,r3,9336
   28234:	1885883a 	add	r2,r3,r2
   28238:	11800017 	ldw	r6,0(r2)
   2823c:	11c00117 	ldw	r7,4(r2)
   28240:	d8800717 	ldw	r2,28(sp)
   28244:	0009883a 	mov	r4,zero
   28248:	014ff834 	movhi	r5,16352
   2824c:	db001615 	stw	r12,88(sp)
   28250:	15c00044 	addi	r23,r2,1
   28254:	002376c0 	call	2376c <__divdf3>
   28258:	800d883a 	mov	r6,r16
   2825c:	880f883a 	mov	r7,r17
   28260:	1009883a 	mov	r4,r2
   28264:	180b883a 	mov	r5,r3
   28268:	002493c0 	call	2493c <__subdf3>
   2826c:	d9401017 	ldw	r5,64(sp)
   28270:	d9000f17 	ldw	r4,60(sp)
   28274:	102b883a 	mov	r21,r2
   28278:	d8c01215 	stw	r3,72(sp)
   2827c:	00252380 	call	25238 <__fixdfsi>
   28280:	1009883a 	mov	r4,r2
   28284:	1029883a 	mov	r20,r2
   28288:	00252b80 	call	252b8 <__floatsidf>
   2828c:	d9000f17 	ldw	r4,60(sp)
   28290:	d9401017 	ldw	r5,64(sp)
   28294:	100d883a 	mov	r6,r2
   28298:	180f883a 	mov	r7,r3
   2829c:	002493c0 	call	2493c <__subdf3>
   282a0:	1823883a 	mov	r17,r3
   282a4:	d8c00717 	ldw	r3,28(sp)
   282a8:	d9401217 	ldw	r5,72(sp)
   282ac:	a2000c04 	addi	r8,r20,48
   282b0:	1021883a 	mov	r16,r2
   282b4:	1a000005 	stb	r8,0(r3)
   282b8:	800d883a 	mov	r6,r16
   282bc:	880f883a 	mov	r7,r17
   282c0:	a809883a 	mov	r4,r21
   282c4:	4029883a 	mov	r20,r8
   282c8:	00240540 	call	24054 <__gedf2>
   282cc:	00841d16 	blt	zero,r2,29344 <_dtoa_r+0x15f4>
   282d0:	800d883a 	mov	r6,r16
   282d4:	880f883a 	mov	r7,r17
   282d8:	0009883a 	mov	r4,zero
   282dc:	014ffc34 	movhi	r5,16368
   282e0:	002493c0 	call	2493c <__subdf3>
   282e4:	d9401217 	ldw	r5,72(sp)
   282e8:	100d883a 	mov	r6,r2
   282ec:	180f883a 	mov	r7,r3
   282f0:	a809883a 	mov	r4,r21
   282f4:	00240540 	call	24054 <__gedf2>
   282f8:	db001617 	ldw	r12,88(sp)
   282fc:	00840e16 	blt	zero,r2,29338 <_dtoa_r+0x15e8>
   28300:	00800044 	movi	r2,1
   28304:	13006b0e 	bge	r2,r12,284b4 <_dtoa_r+0x764>
   28308:	d9000717 	ldw	r4,28(sp)
   2830c:	dd800f15 	stw	r22,60(sp)
   28310:	dcc01015 	stw	r19,64(sp)
   28314:	2319883a 	add	r12,r4,r12
   28318:	dcc01217 	ldw	r19,72(sp)
   2831c:	602d883a 	mov	r22,r12
   28320:	dc801215 	stw	r18,72(sp)
   28324:	b825883a 	mov	r18,r23
   28328:	00000906 	br	28350 <_dtoa_r+0x600>
   2832c:	002493c0 	call	2493c <__subdf3>
   28330:	a80d883a 	mov	r6,r21
   28334:	980f883a 	mov	r7,r19
   28338:	1009883a 	mov	r4,r2
   2833c:	180b883a 	mov	r5,r3
   28340:	00241300 	call	24130 <__ledf2>
   28344:	1003e816 	blt	r2,zero,292e8 <_dtoa_r+0x1598>
   28348:	b825883a 	mov	r18,r23
   2834c:	bd83e926 	beq	r23,r22,292f4 <_dtoa_r+0x15a4>
   28350:	a809883a 	mov	r4,r21
   28354:	980b883a 	mov	r5,r19
   28358:	000d883a 	mov	r6,zero
   2835c:	01d00934 	movhi	r7,16420
   28360:	00242240 	call	24224 <__muldf3>
   28364:	000d883a 	mov	r6,zero
   28368:	01d00934 	movhi	r7,16420
   2836c:	8009883a 	mov	r4,r16
   28370:	880b883a 	mov	r5,r17
   28374:	102b883a 	mov	r21,r2
   28378:	1827883a 	mov	r19,r3
   2837c:	00242240 	call	24224 <__muldf3>
   28380:	180b883a 	mov	r5,r3
   28384:	1009883a 	mov	r4,r2
   28388:	1821883a 	mov	r16,r3
   2838c:	1023883a 	mov	r17,r2
   28390:	00252380 	call	25238 <__fixdfsi>
   28394:	1009883a 	mov	r4,r2
   28398:	1029883a 	mov	r20,r2
   2839c:	00252b80 	call	252b8 <__floatsidf>
   283a0:	8809883a 	mov	r4,r17
   283a4:	800b883a 	mov	r5,r16
   283a8:	100d883a 	mov	r6,r2
   283ac:	180f883a 	mov	r7,r3
   283b0:	002493c0 	call	2493c <__subdf3>
   283b4:	a5000c04 	addi	r20,r20,48
   283b8:	a80d883a 	mov	r6,r21
   283bc:	980f883a 	mov	r7,r19
   283c0:	1009883a 	mov	r4,r2
   283c4:	180b883a 	mov	r5,r3
   283c8:	95000005 	stb	r20,0(r18)
   283cc:	1021883a 	mov	r16,r2
   283d0:	1823883a 	mov	r17,r3
   283d4:	00241300 	call	24130 <__ledf2>
   283d8:	bdc00044 	addi	r23,r23,1
   283dc:	800d883a 	mov	r6,r16
   283e0:	880f883a 	mov	r7,r17
   283e4:	0009883a 	mov	r4,zero
   283e8:	014ffc34 	movhi	r5,16368
   283ec:	103fcf0e 	bge	r2,zero,2832c <__alt_data_end+0xfffe8f2c>
   283f0:	d8c01317 	ldw	r3,76(sp)
   283f4:	d8c00515 	stw	r3,20(sp)
   283f8:	d9400917 	ldw	r5,36(sp)
   283fc:	e009883a 	mov	r4,fp
   28400:	002ae7c0 	call	2ae7c <_Bfree>
   28404:	d9000517 	ldw	r4,20(sp)
   28408:	d9802317 	ldw	r6,140(sp)
   2840c:	d9c02517 	ldw	r7,148(sp)
   28410:	b8000005 	stb	zero,0(r23)
   28414:	20800044 	addi	r2,r4,1
   28418:	30800015 	stw	r2,0(r6)
   2841c:	3802aa26 	beq	r7,zero,28ec8 <_dtoa_r+0x1178>
   28420:	3dc00015 	stw	r23,0(r7)
   28424:	d8800717 	ldw	r2,28(sp)
   28428:	003e7906 	br	27e10 <__alt_data_end+0xfffe8a10>
   2842c:	00800434 	movhi	r2,16
   28430:	10bfffc4 	addi	r2,r2,-1
   28434:	88a2703a 	and	r17,r17,r2
   28438:	883e851e 	bne	r17,zero,27e50 <__alt_data_end+0xfffe8a50>
   2843c:	008000f4 	movhi	r2,3
   28440:	10890004 	addi	r2,r2,9216
   28444:	003e8406 	br	27e58 <__alt_data_end+0xfffe8a58>
   28448:	10c00204 	addi	r3,r2,8
   2844c:	003e8706 	br	27e6c <__alt_data_end+0xfffe8a6c>
   28450:	01400434 	movhi	r5,16
   28454:	297fffc4 	addi	r5,r5,-1
   28458:	994a703a 	and	r5,r19,r5
   2845c:	9009883a 	mov	r4,r18
   28460:	843f0044 	addi	r16,r16,-1023
   28464:	294ffc34 	orhi	r5,r5,16368
   28468:	dd800217 	ldw	r22,8(sp)
   2846c:	d8001115 	stw	zero,68(sp)
   28470:	003ea506 	br	27f08 <__alt_data_end+0xfffe8b08>
   28474:	008000f4 	movhi	r2,3
   28478:	1088f704 	addi	r2,r2,9180
   2847c:	003e6406 	br	27e10 <__alt_data_end+0xfffe8a10>
   28480:	e0001115 	stw	zero,68(fp)
   28484:	000b883a 	mov	r5,zero
   28488:	e009883a 	mov	r4,fp
   2848c:	002add40 	call	2add4 <_Balloc>
   28490:	01bfffc4 	movi	r6,-1
   28494:	01c00044 	movi	r7,1
   28498:	d8800715 	stw	r2,28(sp)
   2849c:	d9800c15 	stw	r6,48(sp)
   284a0:	e0801015 	stw	r2,64(fp)
   284a4:	d8000315 	stw	zero,12(sp)
   284a8:	d9c00b15 	stw	r7,44(sp)
   284ac:	d9800615 	stw	r6,24(sp)
   284b0:	d8002215 	stw	zero,136(sp)
   284b4:	d8800117 	ldw	r2,4(sp)
   284b8:	10008916 	blt	r2,zero,286e0 <_dtoa_r+0x990>
   284bc:	d9000517 	ldw	r4,20(sp)
   284c0:	00c00384 	movi	r3,14
   284c4:	19008616 	blt	r3,r4,286e0 <_dtoa_r+0x990>
   284c8:	200490fa 	slli	r2,r4,3
   284cc:	00c000f4 	movhi	r3,3
   284d0:	d9802217 	ldw	r6,136(sp)
   284d4:	18c91e04 	addi	r3,r3,9336
   284d8:	1885883a 	add	r2,r3,r2
   284dc:	14000017 	ldw	r16,0(r2)
   284e0:	14400117 	ldw	r17,4(r2)
   284e4:	30016316 	blt	r6,zero,28a74 <_dtoa_r+0xd24>
   284e8:	800d883a 	mov	r6,r16
   284ec:	880f883a 	mov	r7,r17
   284f0:	9009883a 	mov	r4,r18
   284f4:	980b883a 	mov	r5,r19
   284f8:	002376c0 	call	2376c <__divdf3>
   284fc:	180b883a 	mov	r5,r3
   28500:	1009883a 	mov	r4,r2
   28504:	00252380 	call	25238 <__fixdfsi>
   28508:	1009883a 	mov	r4,r2
   2850c:	102b883a 	mov	r21,r2
   28510:	00252b80 	call	252b8 <__floatsidf>
   28514:	800d883a 	mov	r6,r16
   28518:	880f883a 	mov	r7,r17
   2851c:	1009883a 	mov	r4,r2
   28520:	180b883a 	mov	r5,r3
   28524:	00242240 	call	24224 <__muldf3>
   28528:	100d883a 	mov	r6,r2
   2852c:	180f883a 	mov	r7,r3
   28530:	9009883a 	mov	r4,r18
   28534:	980b883a 	mov	r5,r19
   28538:	002493c0 	call	2493c <__subdf3>
   2853c:	d9c00717 	ldw	r7,28(sp)
   28540:	1009883a 	mov	r4,r2
   28544:	a8800c04 	addi	r2,r21,48
   28548:	38800005 	stb	r2,0(r7)
   2854c:	3dc00044 	addi	r23,r7,1
   28550:	d9c00617 	ldw	r7,24(sp)
   28554:	01800044 	movi	r6,1
   28558:	180b883a 	mov	r5,r3
   2855c:	2005883a 	mov	r2,r4
   28560:	39803826 	beq	r7,r6,28644 <_dtoa_r+0x8f4>
   28564:	000d883a 	mov	r6,zero
   28568:	01d00934 	movhi	r7,16420
   2856c:	00242240 	call	24224 <__muldf3>
   28570:	000d883a 	mov	r6,zero
   28574:	000f883a 	mov	r7,zero
   28578:	1009883a 	mov	r4,r2
   2857c:	180b883a 	mov	r5,r3
   28580:	1025883a 	mov	r18,r2
   28584:	1827883a 	mov	r19,r3
   28588:	002f6f00 	call	2f6f0 <__eqdf2>
   2858c:	103f9a26 	beq	r2,zero,283f8 <__alt_data_end+0xfffe8ff8>
   28590:	d9c00617 	ldw	r7,24(sp)
   28594:	d8c00717 	ldw	r3,28(sp)
   28598:	b829883a 	mov	r20,r23
   2859c:	38bfffc4 	addi	r2,r7,-1
   285a0:	18ad883a 	add	r22,r3,r2
   285a4:	00000a06 	br	285d0 <_dtoa_r+0x880>
   285a8:	00242240 	call	24224 <__muldf3>
   285ac:	000d883a 	mov	r6,zero
   285b0:	000f883a 	mov	r7,zero
   285b4:	1009883a 	mov	r4,r2
   285b8:	180b883a 	mov	r5,r3
   285bc:	1025883a 	mov	r18,r2
   285c0:	1827883a 	mov	r19,r3
   285c4:	b829883a 	mov	r20,r23
   285c8:	002f6f00 	call	2f6f0 <__eqdf2>
   285cc:	103f8a26 	beq	r2,zero,283f8 <__alt_data_end+0xfffe8ff8>
   285d0:	800d883a 	mov	r6,r16
   285d4:	880f883a 	mov	r7,r17
   285d8:	9009883a 	mov	r4,r18
   285dc:	980b883a 	mov	r5,r19
   285e0:	002376c0 	call	2376c <__divdf3>
   285e4:	180b883a 	mov	r5,r3
   285e8:	1009883a 	mov	r4,r2
   285ec:	00252380 	call	25238 <__fixdfsi>
   285f0:	1009883a 	mov	r4,r2
   285f4:	102b883a 	mov	r21,r2
   285f8:	00252b80 	call	252b8 <__floatsidf>
   285fc:	800d883a 	mov	r6,r16
   28600:	880f883a 	mov	r7,r17
   28604:	1009883a 	mov	r4,r2
   28608:	180b883a 	mov	r5,r3
   2860c:	00242240 	call	24224 <__muldf3>
   28610:	100d883a 	mov	r6,r2
   28614:	180f883a 	mov	r7,r3
   28618:	9009883a 	mov	r4,r18
   2861c:	980b883a 	mov	r5,r19
   28620:	002493c0 	call	2493c <__subdf3>
   28624:	aa000c04 	addi	r8,r21,48
   28628:	a2000005 	stb	r8,0(r20)
   2862c:	000d883a 	mov	r6,zero
   28630:	01d00934 	movhi	r7,16420
   28634:	1009883a 	mov	r4,r2
   28638:	180b883a 	mov	r5,r3
   2863c:	a5c00044 	addi	r23,r20,1
   28640:	b53fd91e 	bne	r22,r20,285a8 <__alt_data_end+0xfffe91a8>
   28644:	100d883a 	mov	r6,r2
   28648:	180f883a 	mov	r7,r3
   2864c:	1009883a 	mov	r4,r2
   28650:	180b883a 	mov	r5,r3
   28654:	0022ec00 	call	22ec0 <__adddf3>
   28658:	100d883a 	mov	r6,r2
   2865c:	180f883a 	mov	r7,r3
   28660:	8009883a 	mov	r4,r16
   28664:	880b883a 	mov	r5,r17
   28668:	1027883a 	mov	r19,r2
   2866c:	1825883a 	mov	r18,r3
   28670:	00241300 	call	24130 <__ledf2>
   28674:	10000816 	blt	r2,zero,28698 <_dtoa_r+0x948>
   28678:	980d883a 	mov	r6,r19
   2867c:	900f883a 	mov	r7,r18
   28680:	8009883a 	mov	r4,r16
   28684:	880b883a 	mov	r5,r17
   28688:	002f6f00 	call	2f6f0 <__eqdf2>
   2868c:	103f5a1e 	bne	r2,zero,283f8 <__alt_data_end+0xfffe8ff8>
   28690:	ad40004c 	andi	r21,r21,1
   28694:	a83f5826 	beq	r21,zero,283f8 <__alt_data_end+0xfffe8ff8>
   28698:	bd3fffc3 	ldbu	r20,-1(r23)
   2869c:	b8bfffc4 	addi	r2,r23,-1
   286a0:	1007883a 	mov	r3,r2
   286a4:	01400e44 	movi	r5,57
   286a8:	d9800717 	ldw	r6,28(sp)
   286ac:	00000506 	br	286c4 <_dtoa_r+0x974>
   286b0:	18ffffc4 	addi	r3,r3,-1
   286b4:	11824726 	beq	r2,r6,28fd4 <_dtoa_r+0x1284>
   286b8:	1d000003 	ldbu	r20,0(r3)
   286bc:	102f883a 	mov	r23,r2
   286c0:	10bfffc4 	addi	r2,r2,-1
   286c4:	a1003fcc 	andi	r4,r20,255
   286c8:	2100201c 	xori	r4,r4,128
   286cc:	213fe004 	addi	r4,r4,-128
   286d0:	217ff726 	beq	r4,r5,286b0 <__alt_data_end+0xfffe92b0>
   286d4:	a2000044 	addi	r8,r20,1
   286d8:	12000005 	stb	r8,0(r2)
   286dc:	003f4606 	br	283f8 <__alt_data_end+0xfffe8ff8>
   286e0:	d9000b17 	ldw	r4,44(sp)
   286e4:	2000c826 	beq	r4,zero,28a08 <_dtoa_r+0xcb8>
   286e8:	d9800317 	ldw	r6,12(sp)
   286ec:	00c00044 	movi	r3,1
   286f0:	1980f90e 	bge	r3,r6,28ad8 <_dtoa_r+0xd88>
   286f4:	d8800617 	ldw	r2,24(sp)
   286f8:	d8c00a17 	ldw	r3,40(sp)
   286fc:	157fffc4 	addi	r21,r2,-1
   28700:	1d41f316 	blt	r3,r21,28ed0 <_dtoa_r+0x1180>
   28704:	1d6bc83a 	sub	r21,r3,r21
   28708:	d9c00617 	ldw	r7,24(sp)
   2870c:	3802aa16 	blt	r7,zero,291b8 <_dtoa_r+0x1468>
   28710:	dd000817 	ldw	r20,32(sp)
   28714:	d8800617 	ldw	r2,24(sp)
   28718:	d8c00817 	ldw	r3,32(sp)
   2871c:	01400044 	movi	r5,1
   28720:	e009883a 	mov	r4,fp
   28724:	1887883a 	add	r3,r3,r2
   28728:	d8c00815 	stw	r3,32(sp)
   2872c:	b0ad883a 	add	r22,r22,r2
   28730:	002b1e00 	call	2b1e0 <__i2b>
   28734:	1023883a 	mov	r17,r2
   28738:	a0000826 	beq	r20,zero,2875c <_dtoa_r+0xa0c>
   2873c:	0580070e 	bge	zero,r22,2875c <_dtoa_r+0xa0c>
   28740:	a005883a 	mov	r2,r20
   28744:	b500b916 	blt	r22,r20,28a2c <_dtoa_r+0xcdc>
   28748:	d9000817 	ldw	r4,32(sp)
   2874c:	a0a9c83a 	sub	r20,r20,r2
   28750:	b0adc83a 	sub	r22,r22,r2
   28754:	2089c83a 	sub	r4,r4,r2
   28758:	d9000815 	stw	r4,32(sp)
   2875c:	d9800a17 	ldw	r6,40(sp)
   28760:	0181810e 	bge	zero,r6,28d68 <_dtoa_r+0x1018>
   28764:	d9c00b17 	ldw	r7,44(sp)
   28768:	3800b326 	beq	r7,zero,28a38 <_dtoa_r+0xce8>
   2876c:	a800b226 	beq	r21,zero,28a38 <_dtoa_r+0xce8>
   28770:	880b883a 	mov	r5,r17
   28774:	a80d883a 	mov	r6,r21
   28778:	e009883a 	mov	r4,fp
   2877c:	002b4140 	call	2b414 <__pow5mult>
   28780:	d9800917 	ldw	r6,36(sp)
   28784:	100b883a 	mov	r5,r2
   28788:	e009883a 	mov	r4,fp
   2878c:	1023883a 	mov	r17,r2
   28790:	002b21c0 	call	2b21c <__multiply>
   28794:	1021883a 	mov	r16,r2
   28798:	d8800a17 	ldw	r2,40(sp)
   2879c:	d9400917 	ldw	r5,36(sp)
   287a0:	e009883a 	mov	r4,fp
   287a4:	1545c83a 	sub	r2,r2,r21
   287a8:	d8800a15 	stw	r2,40(sp)
   287ac:	002ae7c0 	call	2ae7c <_Bfree>
   287b0:	d8c00a17 	ldw	r3,40(sp)
   287b4:	18009f1e 	bne	r3,zero,28a34 <_dtoa_r+0xce4>
   287b8:	05c00044 	movi	r23,1
   287bc:	e009883a 	mov	r4,fp
   287c0:	b80b883a 	mov	r5,r23
   287c4:	002b1e00 	call	2b1e0 <__i2b>
   287c8:	d9000d17 	ldw	r4,52(sp)
   287cc:	102b883a 	mov	r21,r2
   287d0:	2000ce26 	beq	r4,zero,28b0c <_dtoa_r+0xdbc>
   287d4:	200d883a 	mov	r6,r4
   287d8:	100b883a 	mov	r5,r2
   287dc:	e009883a 	mov	r4,fp
   287e0:	002b4140 	call	2b414 <__pow5mult>
   287e4:	d9800317 	ldw	r6,12(sp)
   287e8:	102b883a 	mov	r21,r2
   287ec:	b981810e 	bge	r23,r6,28df4 <_dtoa_r+0x10a4>
   287f0:	0027883a 	mov	r19,zero
   287f4:	a8800417 	ldw	r2,16(r21)
   287f8:	05c00804 	movi	r23,32
   287fc:	10800104 	addi	r2,r2,4
   28800:	1085883a 	add	r2,r2,r2
   28804:	1085883a 	add	r2,r2,r2
   28808:	a885883a 	add	r2,r21,r2
   2880c:	11000017 	ldw	r4,0(r2)
   28810:	002b0c80 	call	2b0c8 <__hi0bits>
   28814:	b885c83a 	sub	r2,r23,r2
   28818:	1585883a 	add	r2,r2,r22
   2881c:	108007cc 	andi	r2,r2,31
   28820:	1000b326 	beq	r2,zero,28af0 <_dtoa_r+0xda0>
   28824:	00c00804 	movi	r3,32
   28828:	1887c83a 	sub	r3,r3,r2
   2882c:	01000104 	movi	r4,4
   28830:	20c2cd0e 	bge	r4,r3,29368 <_dtoa_r+0x1618>
   28834:	00c00704 	movi	r3,28
   28838:	1885c83a 	sub	r2,r3,r2
   2883c:	d8c00817 	ldw	r3,32(sp)
   28840:	a0a9883a 	add	r20,r20,r2
   28844:	b0ad883a 	add	r22,r22,r2
   28848:	1887883a 	add	r3,r3,r2
   2884c:	d8c00815 	stw	r3,32(sp)
   28850:	d9800817 	ldw	r6,32(sp)
   28854:	0180040e 	bge	zero,r6,28868 <_dtoa_r+0xb18>
   28858:	800b883a 	mov	r5,r16
   2885c:	e009883a 	mov	r4,fp
   28860:	002b5540 	call	2b554 <__lshift>
   28864:	1021883a 	mov	r16,r2
   28868:	0580050e 	bge	zero,r22,28880 <_dtoa_r+0xb30>
   2886c:	a80b883a 	mov	r5,r21
   28870:	b00d883a 	mov	r6,r22
   28874:	e009883a 	mov	r4,fp
   28878:	002b5540 	call	2b554 <__lshift>
   2887c:	102b883a 	mov	r21,r2
   28880:	d9c00e17 	ldw	r7,56(sp)
   28884:	3801211e 	bne	r7,zero,28d0c <_dtoa_r+0xfbc>
   28888:	d9800617 	ldw	r6,24(sp)
   2888c:	0181380e 	bge	zero,r6,28d70 <_dtoa_r+0x1020>
   28890:	d8c00b17 	ldw	r3,44(sp)
   28894:	1800ab1e 	bne	r3,zero,28b44 <_dtoa_r+0xdf4>
   28898:	dc800717 	ldw	r18,28(sp)
   2889c:	dcc00617 	ldw	r19,24(sp)
   288a0:	9029883a 	mov	r20,r18
   288a4:	00000206 	br	288b0 <_dtoa_r+0xb60>
   288a8:	002aea40 	call	2aea4 <__multadd>
   288ac:	1021883a 	mov	r16,r2
   288b0:	a80b883a 	mov	r5,r21
   288b4:	8009883a 	mov	r4,r16
   288b8:	0027b500 	call	27b50 <quorem>
   288bc:	10800c04 	addi	r2,r2,48
   288c0:	90800005 	stb	r2,0(r18)
   288c4:	94800044 	addi	r18,r18,1
   288c8:	9507c83a 	sub	r3,r18,r20
   288cc:	000f883a 	mov	r7,zero
   288d0:	01800284 	movi	r6,10
   288d4:	800b883a 	mov	r5,r16
   288d8:	e009883a 	mov	r4,fp
   288dc:	1cfff216 	blt	r3,r19,288a8 <__alt_data_end+0xfffe94a8>
   288e0:	1011883a 	mov	r8,r2
   288e4:	d8800617 	ldw	r2,24(sp)
   288e8:	0082370e 	bge	zero,r2,291c8 <_dtoa_r+0x1478>
   288ec:	d9000717 	ldw	r4,28(sp)
   288f0:	0025883a 	mov	r18,zero
   288f4:	20af883a 	add	r23,r4,r2
   288f8:	01800044 	movi	r6,1
   288fc:	800b883a 	mov	r5,r16
   28900:	e009883a 	mov	r4,fp
   28904:	da001715 	stw	r8,92(sp)
   28908:	002b5540 	call	2b554 <__lshift>
   2890c:	a80b883a 	mov	r5,r21
   28910:	1009883a 	mov	r4,r2
   28914:	d8800915 	stw	r2,36(sp)
   28918:	002b69c0 	call	2b69c <__mcmp>
   2891c:	da001717 	ldw	r8,92(sp)
   28920:	0081800e 	bge	zero,r2,28f24 <_dtoa_r+0x11d4>
   28924:	b93fffc3 	ldbu	r4,-1(r23)
   28928:	b8bfffc4 	addi	r2,r23,-1
   2892c:	1007883a 	mov	r3,r2
   28930:	01800e44 	movi	r6,57
   28934:	d9c00717 	ldw	r7,28(sp)
   28938:	00000506 	br	28950 <_dtoa_r+0xc00>
   2893c:	18ffffc4 	addi	r3,r3,-1
   28940:	11c12326 	beq	r2,r7,28dd0 <_dtoa_r+0x1080>
   28944:	19000003 	ldbu	r4,0(r3)
   28948:	102f883a 	mov	r23,r2
   2894c:	10bfffc4 	addi	r2,r2,-1
   28950:	21403fcc 	andi	r5,r4,255
   28954:	2940201c 	xori	r5,r5,128
   28958:	297fe004 	addi	r5,r5,-128
   2895c:	29bff726 	beq	r5,r6,2893c <__alt_data_end+0xfffe953c>
   28960:	21000044 	addi	r4,r4,1
   28964:	11000005 	stb	r4,0(r2)
   28968:	a80b883a 	mov	r5,r21
   2896c:	e009883a 	mov	r4,fp
   28970:	002ae7c0 	call	2ae7c <_Bfree>
   28974:	883ea026 	beq	r17,zero,283f8 <__alt_data_end+0xfffe8ff8>
   28978:	90000426 	beq	r18,zero,2898c <_dtoa_r+0xc3c>
   2897c:	94400326 	beq	r18,r17,2898c <_dtoa_r+0xc3c>
   28980:	900b883a 	mov	r5,r18
   28984:	e009883a 	mov	r4,fp
   28988:	002ae7c0 	call	2ae7c <_Bfree>
   2898c:	880b883a 	mov	r5,r17
   28990:	e009883a 	mov	r4,fp
   28994:	002ae7c0 	call	2ae7c <_Bfree>
   28998:	003e9706 	br	283f8 <__alt_data_end+0xfffe8ff8>
   2899c:	01800044 	movi	r6,1
   289a0:	d9800e15 	stw	r6,56(sp)
   289a4:	003d9606 	br	28000 <__alt_data_end+0xfffe8c00>
   289a8:	d8800817 	ldw	r2,32(sp)
   289ac:	d8c00517 	ldw	r3,20(sp)
   289b0:	d8000d15 	stw	zero,52(sp)
   289b4:	10c5c83a 	sub	r2,r2,r3
   289b8:	00c9c83a 	sub	r4,zero,r3
   289bc:	d8800815 	stw	r2,32(sp)
   289c0:	d9000a15 	stw	r4,40(sp)
   289c4:	003d9706 	br	28024 <__alt_data_end+0xfffe8c24>
   289c8:	05adc83a 	sub	r22,zero,r22
   289cc:	dd800815 	stw	r22,32(sp)
   289d0:	002d883a 	mov	r22,zero
   289d4:	003d8e06 	br	28010 <__alt_data_end+0xfffe8c10>
   289d8:	d9000517 	ldw	r4,20(sp)
   289dc:	00252b80 	call	252b8 <__floatsidf>
   289e0:	100d883a 	mov	r6,r2
   289e4:	180f883a 	mov	r7,r3
   289e8:	a009883a 	mov	r4,r20
   289ec:	880b883a 	mov	r5,r17
   289f0:	002f6f00 	call	2f6f0 <__eqdf2>
   289f4:	103d7126 	beq	r2,zero,27fbc <__alt_data_end+0xfffe8bbc>
   289f8:	d9c00517 	ldw	r7,20(sp)
   289fc:	39ffffc4 	addi	r7,r7,-1
   28a00:	d9c00515 	stw	r7,20(sp)
   28a04:	003d6d06 	br	27fbc <__alt_data_end+0xfffe8bbc>
   28a08:	dd400a17 	ldw	r21,40(sp)
   28a0c:	dd000817 	ldw	r20,32(sp)
   28a10:	0023883a 	mov	r17,zero
   28a14:	003f4806 	br	28738 <__alt_data_end+0xfffe9338>
   28a18:	10e3c83a 	sub	r17,r2,r3
   28a1c:	9448983a 	sll	r4,r18,r17
   28a20:	003d3206 	br	27eec <__alt_data_end+0xfffe8aec>
   28a24:	d8000e15 	stw	zero,56(sp)
   28a28:	003d7506 	br	28000 <__alt_data_end+0xfffe8c00>
   28a2c:	b005883a 	mov	r2,r22
   28a30:	003f4506 	br	28748 <__alt_data_end+0xfffe9348>
   28a34:	dc000915 	stw	r16,36(sp)
   28a38:	d9800a17 	ldw	r6,40(sp)
   28a3c:	d9400917 	ldw	r5,36(sp)
   28a40:	e009883a 	mov	r4,fp
   28a44:	002b4140 	call	2b414 <__pow5mult>
   28a48:	1021883a 	mov	r16,r2
   28a4c:	003f5a06 	br	287b8 <__alt_data_end+0xfffe93b8>
   28a50:	01c00044 	movi	r7,1
   28a54:	d9c00b15 	stw	r7,44(sp)
   28a58:	d8802217 	ldw	r2,136(sp)
   28a5c:	0081280e 	bge	zero,r2,28f00 <_dtoa_r+0x11b0>
   28a60:	100d883a 	mov	r6,r2
   28a64:	1021883a 	mov	r16,r2
   28a68:	d8800c15 	stw	r2,48(sp)
   28a6c:	d8800615 	stw	r2,24(sp)
   28a70:	003d8806 	br	28094 <__alt_data_end+0xfffe8c94>
   28a74:	d8800617 	ldw	r2,24(sp)
   28a78:	00be9b16 	blt	zero,r2,284e8 <__alt_data_end+0xfffe90e8>
   28a7c:	10010f1e 	bne	r2,zero,28ebc <_dtoa_r+0x116c>
   28a80:	880b883a 	mov	r5,r17
   28a84:	000d883a 	mov	r6,zero
   28a88:	01d00534 	movhi	r7,16404
   28a8c:	8009883a 	mov	r4,r16
   28a90:	00242240 	call	24224 <__muldf3>
   28a94:	900d883a 	mov	r6,r18
   28a98:	980f883a 	mov	r7,r19
   28a9c:	1009883a 	mov	r4,r2
   28aa0:	180b883a 	mov	r5,r3
   28aa4:	00240540 	call	24054 <__gedf2>
   28aa8:	002b883a 	mov	r21,zero
   28aac:	0023883a 	mov	r17,zero
   28ab0:	1000bf16 	blt	r2,zero,28db0 <_dtoa_r+0x1060>
   28ab4:	d9802217 	ldw	r6,136(sp)
   28ab8:	ddc00717 	ldw	r23,28(sp)
   28abc:	018c303a 	nor	r6,zero,r6
   28ac0:	d9800515 	stw	r6,20(sp)
   28ac4:	a80b883a 	mov	r5,r21
   28ac8:	e009883a 	mov	r4,fp
   28acc:	002ae7c0 	call	2ae7c <_Bfree>
   28ad0:	883e4926 	beq	r17,zero,283f8 <__alt_data_end+0xfffe8ff8>
   28ad4:	003fad06 	br	2898c <__alt_data_end+0xfffe958c>
   28ad8:	d9c01117 	ldw	r7,68(sp)
   28adc:	3801bc26 	beq	r7,zero,291d0 <_dtoa_r+0x1480>
   28ae0:	10810cc4 	addi	r2,r2,1075
   28ae4:	dd400a17 	ldw	r21,40(sp)
   28ae8:	dd000817 	ldw	r20,32(sp)
   28aec:	003f0a06 	br	28718 <__alt_data_end+0xfffe9318>
   28af0:	00800704 	movi	r2,28
   28af4:	d9000817 	ldw	r4,32(sp)
   28af8:	a0a9883a 	add	r20,r20,r2
   28afc:	b0ad883a 	add	r22,r22,r2
   28b00:	2089883a 	add	r4,r4,r2
   28b04:	d9000815 	stw	r4,32(sp)
   28b08:	003f5106 	br	28850 <__alt_data_end+0xfffe9450>
   28b0c:	d8c00317 	ldw	r3,12(sp)
   28b10:	b8c1fc0e 	bge	r23,r3,29304 <_dtoa_r+0x15b4>
   28b14:	0027883a 	mov	r19,zero
   28b18:	b805883a 	mov	r2,r23
   28b1c:	003f3e06 	br	28818 <__alt_data_end+0xfffe9418>
   28b20:	880b883a 	mov	r5,r17
   28b24:	e009883a 	mov	r4,fp
   28b28:	000f883a 	mov	r7,zero
   28b2c:	01800284 	movi	r6,10
   28b30:	002aea40 	call	2aea4 <__multadd>
   28b34:	d9000c17 	ldw	r4,48(sp)
   28b38:	1023883a 	mov	r17,r2
   28b3c:	0102040e 	bge	zero,r4,29350 <_dtoa_r+0x1600>
   28b40:	d9000615 	stw	r4,24(sp)
   28b44:	0500050e 	bge	zero,r20,28b5c <_dtoa_r+0xe0c>
   28b48:	880b883a 	mov	r5,r17
   28b4c:	a00d883a 	mov	r6,r20
   28b50:	e009883a 	mov	r4,fp
   28b54:	002b5540 	call	2b554 <__lshift>
   28b58:	1023883a 	mov	r17,r2
   28b5c:	9801241e 	bne	r19,zero,28ff0 <_dtoa_r+0x12a0>
   28b60:	8829883a 	mov	r20,r17
   28b64:	d9000617 	ldw	r4,24(sp)
   28b68:	dcc00717 	ldw	r19,28(sp)
   28b6c:	9480004c 	andi	r18,r18,1
   28b70:	20bfffc4 	addi	r2,r4,-1
   28b74:	9885883a 	add	r2,r19,r2
   28b78:	d8800415 	stw	r2,16(sp)
   28b7c:	dc800615 	stw	r18,24(sp)
   28b80:	a80b883a 	mov	r5,r21
   28b84:	8009883a 	mov	r4,r16
   28b88:	0027b500 	call	27b50 <quorem>
   28b8c:	880b883a 	mov	r5,r17
   28b90:	8009883a 	mov	r4,r16
   28b94:	102f883a 	mov	r23,r2
   28b98:	002b69c0 	call	2b69c <__mcmp>
   28b9c:	a80b883a 	mov	r5,r21
   28ba0:	a00d883a 	mov	r6,r20
   28ba4:	e009883a 	mov	r4,fp
   28ba8:	102d883a 	mov	r22,r2
   28bac:	002b6fc0 	call	2b6fc <__mdiff>
   28bb0:	1007883a 	mov	r3,r2
   28bb4:	10800317 	ldw	r2,12(r2)
   28bb8:	bc800c04 	addi	r18,r23,48
   28bbc:	180b883a 	mov	r5,r3
   28bc0:	10004e1e 	bne	r2,zero,28cfc <_dtoa_r+0xfac>
   28bc4:	8009883a 	mov	r4,r16
   28bc8:	d8c01615 	stw	r3,88(sp)
   28bcc:	002b69c0 	call	2b69c <__mcmp>
   28bd0:	d8c01617 	ldw	r3,88(sp)
   28bd4:	e009883a 	mov	r4,fp
   28bd8:	d8801615 	stw	r2,88(sp)
   28bdc:	180b883a 	mov	r5,r3
   28be0:	002ae7c0 	call	2ae7c <_Bfree>
   28be4:	d8801617 	ldw	r2,88(sp)
   28be8:	1000041e 	bne	r2,zero,28bfc <_dtoa_r+0xeac>
   28bec:	d9800317 	ldw	r6,12(sp)
   28bf0:	3000021e 	bne	r6,zero,28bfc <_dtoa_r+0xeac>
   28bf4:	d8c00617 	ldw	r3,24(sp)
   28bf8:	18003726 	beq	r3,zero,28cd8 <_dtoa_r+0xf88>
   28bfc:	b0002016 	blt	r22,zero,28c80 <_dtoa_r+0xf30>
   28c00:	b000041e 	bne	r22,zero,28c14 <_dtoa_r+0xec4>
   28c04:	d9000317 	ldw	r4,12(sp)
   28c08:	2000021e 	bne	r4,zero,28c14 <_dtoa_r+0xec4>
   28c0c:	d8c00617 	ldw	r3,24(sp)
   28c10:	18001b26 	beq	r3,zero,28c80 <_dtoa_r+0xf30>
   28c14:	00810716 	blt	zero,r2,29034 <_dtoa_r+0x12e4>
   28c18:	d8c00417 	ldw	r3,16(sp)
   28c1c:	9d800044 	addi	r22,r19,1
   28c20:	9c800005 	stb	r18,0(r19)
   28c24:	b02f883a 	mov	r23,r22
   28c28:	98c10626 	beq	r19,r3,29044 <_dtoa_r+0x12f4>
   28c2c:	800b883a 	mov	r5,r16
   28c30:	000f883a 	mov	r7,zero
   28c34:	01800284 	movi	r6,10
   28c38:	e009883a 	mov	r4,fp
   28c3c:	002aea40 	call	2aea4 <__multadd>
   28c40:	1021883a 	mov	r16,r2
   28c44:	000f883a 	mov	r7,zero
   28c48:	01800284 	movi	r6,10
   28c4c:	880b883a 	mov	r5,r17
   28c50:	e009883a 	mov	r4,fp
   28c54:	8d002526 	beq	r17,r20,28cec <_dtoa_r+0xf9c>
   28c58:	002aea40 	call	2aea4 <__multadd>
   28c5c:	a00b883a 	mov	r5,r20
   28c60:	000f883a 	mov	r7,zero
   28c64:	01800284 	movi	r6,10
   28c68:	e009883a 	mov	r4,fp
   28c6c:	1023883a 	mov	r17,r2
   28c70:	002aea40 	call	2aea4 <__multadd>
   28c74:	1029883a 	mov	r20,r2
   28c78:	b027883a 	mov	r19,r22
   28c7c:	003fc006 	br	28b80 <__alt_data_end+0xfffe9780>
   28c80:	9011883a 	mov	r8,r18
   28c84:	00800e0e 	bge	zero,r2,28cc0 <_dtoa_r+0xf70>
   28c88:	800b883a 	mov	r5,r16
   28c8c:	01800044 	movi	r6,1
   28c90:	e009883a 	mov	r4,fp
   28c94:	da001715 	stw	r8,92(sp)
   28c98:	002b5540 	call	2b554 <__lshift>
   28c9c:	a80b883a 	mov	r5,r21
   28ca0:	1009883a 	mov	r4,r2
   28ca4:	1021883a 	mov	r16,r2
   28ca8:	002b69c0 	call	2b69c <__mcmp>
   28cac:	da001717 	ldw	r8,92(sp)
   28cb0:	0081960e 	bge	zero,r2,2930c <_dtoa_r+0x15bc>
   28cb4:	00800e44 	movi	r2,57
   28cb8:	40817026 	beq	r8,r2,2927c <_dtoa_r+0x152c>
   28cbc:	ba000c44 	addi	r8,r23,49
   28cc0:	8825883a 	mov	r18,r17
   28cc4:	9dc00044 	addi	r23,r19,1
   28cc8:	9a000005 	stb	r8,0(r19)
   28ccc:	a023883a 	mov	r17,r20
   28cd0:	dc000915 	stw	r16,36(sp)
   28cd4:	003f2406 	br	28968 <__alt_data_end+0xfffe9568>
   28cd8:	00800e44 	movi	r2,57
   28cdc:	9011883a 	mov	r8,r18
   28ce0:	90816626 	beq	r18,r2,2927c <_dtoa_r+0x152c>
   28ce4:	05bff516 	blt	zero,r22,28cbc <__alt_data_end+0xfffe98bc>
   28ce8:	003ff506 	br	28cc0 <__alt_data_end+0xfffe98c0>
   28cec:	002aea40 	call	2aea4 <__multadd>
   28cf0:	1023883a 	mov	r17,r2
   28cf4:	1029883a 	mov	r20,r2
   28cf8:	003fdf06 	br	28c78 <__alt_data_end+0xfffe9878>
   28cfc:	e009883a 	mov	r4,fp
   28d00:	002ae7c0 	call	2ae7c <_Bfree>
   28d04:	00800044 	movi	r2,1
   28d08:	003fbc06 	br	28bfc <__alt_data_end+0xfffe97fc>
   28d0c:	a80b883a 	mov	r5,r21
   28d10:	8009883a 	mov	r4,r16
   28d14:	002b69c0 	call	2b69c <__mcmp>
   28d18:	103edb0e 	bge	r2,zero,28888 <__alt_data_end+0xfffe9488>
   28d1c:	800b883a 	mov	r5,r16
   28d20:	000f883a 	mov	r7,zero
   28d24:	01800284 	movi	r6,10
   28d28:	e009883a 	mov	r4,fp
   28d2c:	002aea40 	call	2aea4 <__multadd>
   28d30:	1021883a 	mov	r16,r2
   28d34:	d8800517 	ldw	r2,20(sp)
   28d38:	d8c00b17 	ldw	r3,44(sp)
   28d3c:	10bfffc4 	addi	r2,r2,-1
   28d40:	d8800515 	stw	r2,20(sp)
   28d44:	183f761e 	bne	r3,zero,28b20 <__alt_data_end+0xfffe9720>
   28d48:	d9000c17 	ldw	r4,48(sp)
   28d4c:	0101730e 	bge	zero,r4,2931c <_dtoa_r+0x15cc>
   28d50:	d9000615 	stw	r4,24(sp)
   28d54:	003ed006 	br	28898 <__alt_data_end+0xfffe9498>
   28d58:	00800084 	movi	r2,2
   28d5c:	3081861e 	bne	r6,r2,29378 <_dtoa_r+0x1628>
   28d60:	d8000b15 	stw	zero,44(sp)
   28d64:	003f3c06 	br	28a58 <__alt_data_end+0xfffe9658>
   28d68:	dc000917 	ldw	r16,36(sp)
   28d6c:	003e9206 	br	287b8 <__alt_data_end+0xfffe93b8>
   28d70:	d9c00317 	ldw	r7,12(sp)
   28d74:	00800084 	movi	r2,2
   28d78:	11fec50e 	bge	r2,r7,28890 <__alt_data_end+0xfffe9490>
   28d7c:	d9000617 	ldw	r4,24(sp)
   28d80:	20013c1e 	bne	r4,zero,29274 <_dtoa_r+0x1524>
   28d84:	a80b883a 	mov	r5,r21
   28d88:	000f883a 	mov	r7,zero
   28d8c:	01800144 	movi	r6,5
   28d90:	e009883a 	mov	r4,fp
   28d94:	002aea40 	call	2aea4 <__multadd>
   28d98:	100b883a 	mov	r5,r2
   28d9c:	8009883a 	mov	r4,r16
   28da0:	102b883a 	mov	r21,r2
   28da4:	002b69c0 	call	2b69c <__mcmp>
   28da8:	dc000915 	stw	r16,36(sp)
   28dac:	00bf410e 	bge	zero,r2,28ab4 <__alt_data_end+0xfffe96b4>
   28db0:	d9c00717 	ldw	r7,28(sp)
   28db4:	00800c44 	movi	r2,49
   28db8:	38800005 	stb	r2,0(r7)
   28dbc:	d8800517 	ldw	r2,20(sp)
   28dc0:	3dc00044 	addi	r23,r7,1
   28dc4:	10800044 	addi	r2,r2,1
   28dc8:	d8800515 	stw	r2,20(sp)
   28dcc:	003f3d06 	br	28ac4 <__alt_data_end+0xfffe96c4>
   28dd0:	d9800517 	ldw	r6,20(sp)
   28dd4:	d9c00717 	ldw	r7,28(sp)
   28dd8:	00800c44 	movi	r2,49
   28ddc:	31800044 	addi	r6,r6,1
   28de0:	d9800515 	stw	r6,20(sp)
   28de4:	38800005 	stb	r2,0(r7)
   28de8:	003edf06 	br	28968 <__alt_data_end+0xfffe9568>
   28dec:	d8000b15 	stw	zero,44(sp)
   28df0:	003c9f06 	br	28070 <__alt_data_end+0xfffe8c70>
   28df4:	903e7e1e 	bne	r18,zero,287f0 <__alt_data_end+0xfffe93f0>
   28df8:	00800434 	movhi	r2,16
   28dfc:	10bfffc4 	addi	r2,r2,-1
   28e00:	9884703a 	and	r2,r19,r2
   28e04:	1000ea1e 	bne	r2,zero,291b0 <_dtoa_r+0x1460>
   28e08:	9cdffc2c 	andhi	r19,r19,32752
   28e0c:	9800e826 	beq	r19,zero,291b0 <_dtoa_r+0x1460>
   28e10:	d9c00817 	ldw	r7,32(sp)
   28e14:	b5800044 	addi	r22,r22,1
   28e18:	04c00044 	movi	r19,1
   28e1c:	39c00044 	addi	r7,r7,1
   28e20:	d9c00815 	stw	r7,32(sp)
   28e24:	d8800d17 	ldw	r2,52(sp)
   28e28:	103e721e 	bne	r2,zero,287f4 <__alt_data_end+0xfffe93f4>
   28e2c:	00800044 	movi	r2,1
   28e30:	003e7906 	br	28818 <__alt_data_end+0xfffe9418>
   28e34:	8009883a 	mov	r4,r16
   28e38:	00252b80 	call	252b8 <__floatsidf>
   28e3c:	d9800f17 	ldw	r6,60(sp)
   28e40:	d9c01017 	ldw	r7,64(sp)
   28e44:	1009883a 	mov	r4,r2
   28e48:	180b883a 	mov	r5,r3
   28e4c:	00242240 	call	24224 <__muldf3>
   28e50:	000d883a 	mov	r6,zero
   28e54:	01d00734 	movhi	r7,16412
   28e58:	1009883a 	mov	r4,r2
   28e5c:	180b883a 	mov	r5,r3
   28e60:	0022ec00 	call	22ec0 <__adddf3>
   28e64:	047f3034 	movhi	r17,64704
   28e68:	1021883a 	mov	r16,r2
   28e6c:	1c63883a 	add	r17,r3,r17
   28e70:	d9000f17 	ldw	r4,60(sp)
   28e74:	d9401017 	ldw	r5,64(sp)
   28e78:	000d883a 	mov	r6,zero
   28e7c:	01d00534 	movhi	r7,16404
   28e80:	002493c0 	call	2493c <__subdf3>
   28e84:	800d883a 	mov	r6,r16
   28e88:	880f883a 	mov	r7,r17
   28e8c:	1009883a 	mov	r4,r2
   28e90:	180b883a 	mov	r5,r3
   28e94:	102b883a 	mov	r21,r2
   28e98:	1829883a 	mov	r20,r3
   28e9c:	00240540 	call	24054 <__gedf2>
   28ea0:	00806c16 	blt	zero,r2,29054 <_dtoa_r+0x1304>
   28ea4:	89e0003c 	xorhi	r7,r17,32768
   28ea8:	800d883a 	mov	r6,r16
   28eac:	a809883a 	mov	r4,r21
   28eb0:	a00b883a 	mov	r5,r20
   28eb4:	00241300 	call	24130 <__ledf2>
   28eb8:	103d7e0e 	bge	r2,zero,284b4 <__alt_data_end+0xfffe90b4>
   28ebc:	002b883a 	mov	r21,zero
   28ec0:	0023883a 	mov	r17,zero
   28ec4:	003efb06 	br	28ab4 <__alt_data_end+0xfffe96b4>
   28ec8:	d8800717 	ldw	r2,28(sp)
   28ecc:	003bd006 	br	27e10 <__alt_data_end+0xfffe8a10>
   28ed0:	d9000a17 	ldw	r4,40(sp)
   28ed4:	d9800d17 	ldw	r6,52(sp)
   28ed8:	dd400a15 	stw	r21,40(sp)
   28edc:	a905c83a 	sub	r2,r21,r4
   28ee0:	308d883a 	add	r6,r6,r2
   28ee4:	d9800d15 	stw	r6,52(sp)
   28ee8:	002b883a 	mov	r21,zero
   28eec:	003e0606 	br	28708 <__alt_data_end+0xfffe9308>
   28ef0:	9023883a 	mov	r17,r18
   28ef4:	9829883a 	mov	r20,r19
   28ef8:	04000084 	movi	r16,2
   28efc:	003c9206 	br	28148 <__alt_data_end+0xfffe8d48>
   28f00:	04000044 	movi	r16,1
   28f04:	dc000c15 	stw	r16,48(sp)
   28f08:	dc000615 	stw	r16,24(sp)
   28f0c:	dc002215 	stw	r16,136(sp)
   28f10:	e0001115 	stw	zero,68(fp)
   28f14:	000b883a 	mov	r5,zero
   28f18:	003c6906 	br	280c0 <__alt_data_end+0xfffe8cc0>
   28f1c:	3021883a 	mov	r16,r6
   28f20:	003ffb06 	br	28f10 <__alt_data_end+0xfffe9b10>
   28f24:	1000021e 	bne	r2,zero,28f30 <_dtoa_r+0x11e0>
   28f28:	4200004c 	andi	r8,r8,1
   28f2c:	403e7d1e 	bne	r8,zero,28924 <__alt_data_end+0xfffe9524>
   28f30:	01000c04 	movi	r4,48
   28f34:	00000106 	br	28f3c <_dtoa_r+0x11ec>
   28f38:	102f883a 	mov	r23,r2
   28f3c:	b8bfffc4 	addi	r2,r23,-1
   28f40:	10c00007 	ldb	r3,0(r2)
   28f44:	193ffc26 	beq	r3,r4,28f38 <__alt_data_end+0xfffe9b38>
   28f48:	003e8706 	br	28968 <__alt_data_end+0xfffe9568>
   28f4c:	d8800517 	ldw	r2,20(sp)
   28f50:	00a3c83a 	sub	r17,zero,r2
   28f54:	8800a426 	beq	r17,zero,291e8 <_dtoa_r+0x1498>
   28f58:	888003cc 	andi	r2,r17,15
   28f5c:	100490fa 	slli	r2,r2,3
   28f60:	00c000f4 	movhi	r3,3
   28f64:	18c91e04 	addi	r3,r3,9336
   28f68:	1885883a 	add	r2,r3,r2
   28f6c:	11800017 	ldw	r6,0(r2)
   28f70:	11c00117 	ldw	r7,4(r2)
   28f74:	9009883a 	mov	r4,r18
   28f78:	980b883a 	mov	r5,r19
   28f7c:	8823d13a 	srai	r17,r17,4
   28f80:	00242240 	call	24224 <__muldf3>
   28f84:	d8800f15 	stw	r2,60(sp)
   28f88:	d8c01015 	stw	r3,64(sp)
   28f8c:	8800e826 	beq	r17,zero,29330 <_dtoa_r+0x15e0>
   28f90:	050000f4 	movhi	r20,3
   28f94:	a5091404 	addi	r20,r20,9296
   28f98:	04000084 	movi	r16,2
   28f9c:	8980004c 	andi	r6,r17,1
   28fa0:	1009883a 	mov	r4,r2
   28fa4:	8823d07a 	srai	r17,r17,1
   28fa8:	180b883a 	mov	r5,r3
   28fac:	30000426 	beq	r6,zero,28fc0 <_dtoa_r+0x1270>
   28fb0:	a1800017 	ldw	r6,0(r20)
   28fb4:	a1c00117 	ldw	r7,4(r20)
   28fb8:	84000044 	addi	r16,r16,1
   28fbc:	00242240 	call	24224 <__muldf3>
   28fc0:	a5000204 	addi	r20,r20,8
   28fc4:	883ff51e 	bne	r17,zero,28f9c <__alt_data_end+0xfffe9b9c>
   28fc8:	d8800f15 	stw	r2,60(sp)
   28fcc:	d8c01015 	stw	r3,64(sp)
   28fd0:	003c7606 	br	281ac <__alt_data_end+0xfffe8dac>
   28fd4:	00c00c04 	movi	r3,48
   28fd8:	10c00005 	stb	r3,0(r2)
   28fdc:	d8c00517 	ldw	r3,20(sp)
   28fe0:	bd3fffc3 	ldbu	r20,-1(r23)
   28fe4:	18c00044 	addi	r3,r3,1
   28fe8:	d8c00515 	stw	r3,20(sp)
   28fec:	003db906 	br	286d4 <__alt_data_end+0xfffe92d4>
   28ff0:	89400117 	ldw	r5,4(r17)
   28ff4:	e009883a 	mov	r4,fp
   28ff8:	002add40 	call	2add4 <_Balloc>
   28ffc:	89800417 	ldw	r6,16(r17)
   29000:	89400304 	addi	r5,r17,12
   29004:	11000304 	addi	r4,r2,12
   29008:	31800084 	addi	r6,r6,2
   2900c:	318d883a 	add	r6,r6,r6
   29010:	318d883a 	add	r6,r6,r6
   29014:	1027883a 	mov	r19,r2
   29018:	002ab640 	call	2ab64 <memcpy>
   2901c:	01800044 	movi	r6,1
   29020:	980b883a 	mov	r5,r19
   29024:	e009883a 	mov	r4,fp
   29028:	002b5540 	call	2b554 <__lshift>
   2902c:	1029883a 	mov	r20,r2
   29030:	003ecc06 	br	28b64 <__alt_data_end+0xfffe9764>
   29034:	00800e44 	movi	r2,57
   29038:	90809026 	beq	r18,r2,2927c <_dtoa_r+0x152c>
   2903c:	92000044 	addi	r8,r18,1
   29040:	003f1f06 	br	28cc0 <__alt_data_end+0xfffe98c0>
   29044:	9011883a 	mov	r8,r18
   29048:	8825883a 	mov	r18,r17
   2904c:	a023883a 	mov	r17,r20
   29050:	003e2906 	br	288f8 <__alt_data_end+0xfffe94f8>
   29054:	002b883a 	mov	r21,zero
   29058:	0023883a 	mov	r17,zero
   2905c:	003f5406 	br	28db0 <__alt_data_end+0xfffe99b0>
   29060:	61bfffc4 	addi	r6,r12,-1
   29064:	300490fa 	slli	r2,r6,3
   29068:	00c000f4 	movhi	r3,3
   2906c:	18c91e04 	addi	r3,r3,9336
   29070:	1885883a 	add	r2,r3,r2
   29074:	11000017 	ldw	r4,0(r2)
   29078:	11400117 	ldw	r5,4(r2)
   2907c:	d8800717 	ldw	r2,28(sp)
   29080:	880f883a 	mov	r7,r17
   29084:	d9801215 	stw	r6,72(sp)
   29088:	800d883a 	mov	r6,r16
   2908c:	db001615 	stw	r12,88(sp)
   29090:	15c00044 	addi	r23,r2,1
   29094:	00242240 	call	24224 <__muldf3>
   29098:	d9401017 	ldw	r5,64(sp)
   2909c:	d9000f17 	ldw	r4,60(sp)
   290a0:	d8c01515 	stw	r3,84(sp)
   290a4:	d8801415 	stw	r2,80(sp)
   290a8:	00252380 	call	25238 <__fixdfsi>
   290ac:	1009883a 	mov	r4,r2
   290b0:	1021883a 	mov	r16,r2
   290b4:	00252b80 	call	252b8 <__floatsidf>
   290b8:	d9000f17 	ldw	r4,60(sp)
   290bc:	d9401017 	ldw	r5,64(sp)
   290c0:	100d883a 	mov	r6,r2
   290c4:	180f883a 	mov	r7,r3
   290c8:	002493c0 	call	2493c <__subdf3>
   290cc:	1829883a 	mov	r20,r3
   290d0:	d8c00717 	ldw	r3,28(sp)
   290d4:	84000c04 	addi	r16,r16,48
   290d8:	1023883a 	mov	r17,r2
   290dc:	1c000005 	stb	r16,0(r3)
   290e0:	db001617 	ldw	r12,88(sp)
   290e4:	00800044 	movi	r2,1
   290e8:	60802226 	beq	r12,r2,29174 <_dtoa_r+0x1424>
   290ec:	d9c00717 	ldw	r7,28(sp)
   290f0:	8805883a 	mov	r2,r17
   290f4:	b82b883a 	mov	r21,r23
   290f8:	3b19883a 	add	r12,r7,r12
   290fc:	6023883a 	mov	r17,r12
   29100:	a007883a 	mov	r3,r20
   29104:	dc800f15 	stw	r18,60(sp)
   29108:	000d883a 	mov	r6,zero
   2910c:	01d00934 	movhi	r7,16420
   29110:	1009883a 	mov	r4,r2
   29114:	180b883a 	mov	r5,r3
   29118:	00242240 	call	24224 <__muldf3>
   2911c:	180b883a 	mov	r5,r3
   29120:	1009883a 	mov	r4,r2
   29124:	1829883a 	mov	r20,r3
   29128:	1025883a 	mov	r18,r2
   2912c:	00252380 	call	25238 <__fixdfsi>
   29130:	1009883a 	mov	r4,r2
   29134:	1021883a 	mov	r16,r2
   29138:	00252b80 	call	252b8 <__floatsidf>
   2913c:	100d883a 	mov	r6,r2
   29140:	180f883a 	mov	r7,r3
   29144:	9009883a 	mov	r4,r18
   29148:	a00b883a 	mov	r5,r20
   2914c:	84000c04 	addi	r16,r16,48
   29150:	002493c0 	call	2493c <__subdf3>
   29154:	ad400044 	addi	r21,r21,1
   29158:	ac3fffc5 	stb	r16,-1(r21)
   2915c:	ac7fea1e 	bne	r21,r17,29108 <__alt_data_end+0xfffe9d08>
   29160:	1023883a 	mov	r17,r2
   29164:	d8801217 	ldw	r2,72(sp)
   29168:	dc800f17 	ldw	r18,60(sp)
   2916c:	1829883a 	mov	r20,r3
   29170:	b8af883a 	add	r23,r23,r2
   29174:	d9001417 	ldw	r4,80(sp)
   29178:	d9401517 	ldw	r5,84(sp)
   2917c:	000d883a 	mov	r6,zero
   29180:	01cff834 	movhi	r7,16352
   29184:	0022ec00 	call	22ec0 <__adddf3>
   29188:	880d883a 	mov	r6,r17
   2918c:	a00f883a 	mov	r7,r20
   29190:	1009883a 	mov	r4,r2
   29194:	180b883a 	mov	r5,r3
   29198:	00241300 	call	24130 <__ledf2>
   2919c:	10003e0e 	bge	r2,zero,29298 <_dtoa_r+0x1548>
   291a0:	d9001317 	ldw	r4,76(sp)
   291a4:	bd3fffc3 	ldbu	r20,-1(r23)
   291a8:	d9000515 	stw	r4,20(sp)
   291ac:	003d3b06 	br	2869c <__alt_data_end+0xfffe929c>
   291b0:	0027883a 	mov	r19,zero
   291b4:	003f1b06 	br	28e24 <__alt_data_end+0xfffe9a24>
   291b8:	d8800817 	ldw	r2,32(sp)
   291bc:	11e9c83a 	sub	r20,r2,r7
   291c0:	0005883a 	mov	r2,zero
   291c4:	003d5406 	br	28718 <__alt_data_end+0xfffe9318>
   291c8:	00800044 	movi	r2,1
   291cc:	003dc706 	br	288ec <__alt_data_end+0xfffe94ec>
   291d0:	d8c00217 	ldw	r3,8(sp)
   291d4:	00800d84 	movi	r2,54
   291d8:	dd400a17 	ldw	r21,40(sp)
   291dc:	10c5c83a 	sub	r2,r2,r3
   291e0:	dd000817 	ldw	r20,32(sp)
   291e4:	003d4c06 	br	28718 <__alt_data_end+0xfffe9318>
   291e8:	dc800f15 	stw	r18,60(sp)
   291ec:	dcc01015 	stw	r19,64(sp)
   291f0:	04000084 	movi	r16,2
   291f4:	003bed06 	br	281ac <__alt_data_end+0xfffe8dac>
   291f8:	d9000617 	ldw	r4,24(sp)
   291fc:	203f0d26 	beq	r4,zero,28e34 <__alt_data_end+0xfffe9a34>
   29200:	d9800c17 	ldw	r6,48(sp)
   29204:	01bcab0e 	bge	zero,r6,284b4 <__alt_data_end+0xfffe90b4>
   29208:	d9401017 	ldw	r5,64(sp)
   2920c:	d9000f17 	ldw	r4,60(sp)
   29210:	000d883a 	mov	r6,zero
   29214:	01d00934 	movhi	r7,16420
   29218:	00242240 	call	24224 <__muldf3>
   2921c:	81000044 	addi	r4,r16,1
   29220:	d8800f15 	stw	r2,60(sp)
   29224:	d8c01015 	stw	r3,64(sp)
   29228:	00252b80 	call	252b8 <__floatsidf>
   2922c:	d9800f17 	ldw	r6,60(sp)
   29230:	d9c01017 	ldw	r7,64(sp)
   29234:	1009883a 	mov	r4,r2
   29238:	180b883a 	mov	r5,r3
   2923c:	00242240 	call	24224 <__muldf3>
   29240:	01d00734 	movhi	r7,16412
   29244:	000d883a 	mov	r6,zero
   29248:	1009883a 	mov	r4,r2
   2924c:	180b883a 	mov	r5,r3
   29250:	0022ec00 	call	22ec0 <__adddf3>
   29254:	d9c00517 	ldw	r7,20(sp)
   29258:	047f3034 	movhi	r17,64704
   2925c:	1021883a 	mov	r16,r2
   29260:	39ffffc4 	addi	r7,r7,-1
   29264:	d9c01315 	stw	r7,76(sp)
   29268:	1c63883a 	add	r17,r3,r17
   2926c:	db000c17 	ldw	r12,48(sp)
   29270:	003bea06 	br	2821c <__alt_data_end+0xfffe8e1c>
   29274:	dc000915 	stw	r16,36(sp)
   29278:	003e0e06 	br	28ab4 <__alt_data_end+0xfffe96b4>
   2927c:	01000e44 	movi	r4,57
   29280:	8825883a 	mov	r18,r17
   29284:	9dc00044 	addi	r23,r19,1
   29288:	99000005 	stb	r4,0(r19)
   2928c:	a023883a 	mov	r17,r20
   29290:	dc000915 	stw	r16,36(sp)
   29294:	003da406 	br	28928 <__alt_data_end+0xfffe9528>
   29298:	d9801417 	ldw	r6,80(sp)
   2929c:	d9c01517 	ldw	r7,84(sp)
   292a0:	0009883a 	mov	r4,zero
   292a4:	014ff834 	movhi	r5,16352
   292a8:	002493c0 	call	2493c <__subdf3>
   292ac:	880d883a 	mov	r6,r17
   292b0:	a00f883a 	mov	r7,r20
   292b4:	1009883a 	mov	r4,r2
   292b8:	180b883a 	mov	r5,r3
   292bc:	00240540 	call	24054 <__gedf2>
   292c0:	00bc7c0e 	bge	zero,r2,284b4 <__alt_data_end+0xfffe90b4>
   292c4:	01000c04 	movi	r4,48
   292c8:	00000106 	br	292d0 <_dtoa_r+0x1580>
   292cc:	102f883a 	mov	r23,r2
   292d0:	b8bfffc4 	addi	r2,r23,-1
   292d4:	10c00007 	ldb	r3,0(r2)
   292d8:	193ffc26 	beq	r3,r4,292cc <__alt_data_end+0xfffe9ecc>
   292dc:	d9801317 	ldw	r6,76(sp)
   292e0:	d9800515 	stw	r6,20(sp)
   292e4:	003c4406 	br	283f8 <__alt_data_end+0xfffe8ff8>
   292e8:	d9801317 	ldw	r6,76(sp)
   292ec:	d9800515 	stw	r6,20(sp)
   292f0:	003cea06 	br	2869c <__alt_data_end+0xfffe929c>
   292f4:	dd800f17 	ldw	r22,60(sp)
   292f8:	dcc01017 	ldw	r19,64(sp)
   292fc:	dc801217 	ldw	r18,72(sp)
   29300:	003c6c06 	br	284b4 <__alt_data_end+0xfffe90b4>
   29304:	903e031e 	bne	r18,zero,28b14 <__alt_data_end+0xfffe9714>
   29308:	003ebb06 	br	28df8 <__alt_data_end+0xfffe99f8>
   2930c:	103e6c1e 	bne	r2,zero,28cc0 <__alt_data_end+0xfffe98c0>
   29310:	4080004c 	andi	r2,r8,1
   29314:	103e6a26 	beq	r2,zero,28cc0 <__alt_data_end+0xfffe98c0>
   29318:	003e6606 	br	28cb4 <__alt_data_end+0xfffe98b4>
   2931c:	d8c00317 	ldw	r3,12(sp)
   29320:	00800084 	movi	r2,2
   29324:	10c02916 	blt	r2,r3,293cc <_dtoa_r+0x167c>
   29328:	d9000c17 	ldw	r4,48(sp)
   2932c:	003e8806 	br	28d50 <__alt_data_end+0xfffe9950>
   29330:	04000084 	movi	r16,2
   29334:	003b9d06 	br	281ac <__alt_data_end+0xfffe8dac>
   29338:	d9001317 	ldw	r4,76(sp)
   2933c:	d9000515 	stw	r4,20(sp)
   29340:	003cd606 	br	2869c <__alt_data_end+0xfffe929c>
   29344:	d8801317 	ldw	r2,76(sp)
   29348:	d8800515 	stw	r2,20(sp)
   2934c:	003c2a06 	br	283f8 <__alt_data_end+0xfffe8ff8>
   29350:	d9800317 	ldw	r6,12(sp)
   29354:	00800084 	movi	r2,2
   29358:	11801516 	blt	r2,r6,293b0 <_dtoa_r+0x1660>
   2935c:	d9c00c17 	ldw	r7,48(sp)
   29360:	d9c00615 	stw	r7,24(sp)
   29364:	003df706 	br	28b44 <__alt_data_end+0xfffe9744>
   29368:	193d3926 	beq	r3,r4,28850 <__alt_data_end+0xfffe9450>
   2936c:	00c00f04 	movi	r3,60
   29370:	1885c83a 	sub	r2,r3,r2
   29374:	003ddf06 	br	28af4 <__alt_data_end+0xfffe96f4>
   29378:	e009883a 	mov	r4,fp
   2937c:	e0001115 	stw	zero,68(fp)
   29380:	000b883a 	mov	r5,zero
   29384:	002add40 	call	2add4 <_Balloc>
   29388:	d8800715 	stw	r2,28(sp)
   2938c:	d8c00717 	ldw	r3,28(sp)
   29390:	00bfffc4 	movi	r2,-1
   29394:	01000044 	movi	r4,1
   29398:	d8800c15 	stw	r2,48(sp)
   2939c:	e0c01015 	stw	r3,64(fp)
   293a0:	d9000b15 	stw	r4,44(sp)
   293a4:	d8800615 	stw	r2,24(sp)
   293a8:	d8002215 	stw	zero,136(sp)
   293ac:	003c4106 	br	284b4 <__alt_data_end+0xfffe90b4>
   293b0:	d8c00c17 	ldw	r3,48(sp)
   293b4:	d8c00615 	stw	r3,24(sp)
   293b8:	003e7006 	br	28d7c <__alt_data_end+0xfffe997c>
   293bc:	04400044 	movi	r17,1
   293c0:	003b2006 	br	28044 <__alt_data_end+0xfffe8c44>
   293c4:	000b883a 	mov	r5,zero
   293c8:	003b3d06 	br	280c0 <__alt_data_end+0xfffe8cc0>
   293cc:	d8800c17 	ldw	r2,48(sp)
   293d0:	d8800615 	stw	r2,24(sp)
   293d4:	003e6906 	br	28d7c <__alt_data_end+0xfffe997c>

000293d8 <__sflush_r>:
   293d8:	2880030b 	ldhu	r2,12(r5)
   293dc:	defffb04 	addi	sp,sp,-20
   293e0:	dcc00315 	stw	r19,12(sp)
   293e4:	dc400115 	stw	r17,4(sp)
   293e8:	dfc00415 	stw	ra,16(sp)
   293ec:	dc800215 	stw	r18,8(sp)
   293f0:	dc000015 	stw	r16,0(sp)
   293f4:	10c0020c 	andi	r3,r2,8
   293f8:	2823883a 	mov	r17,r5
   293fc:	2027883a 	mov	r19,r4
   29400:	1800311e 	bne	r3,zero,294c8 <__sflush_r+0xf0>
   29404:	28c00117 	ldw	r3,4(r5)
   29408:	10820014 	ori	r2,r2,2048
   2940c:	2880030d 	sth	r2,12(r5)
   29410:	00c04b0e 	bge	zero,r3,29540 <__sflush_r+0x168>
   29414:	8a000a17 	ldw	r8,40(r17)
   29418:	40002326 	beq	r8,zero,294a8 <__sflush_r+0xd0>
   2941c:	9c000017 	ldw	r16,0(r19)
   29420:	10c4000c 	andi	r3,r2,4096
   29424:	98000015 	stw	zero,0(r19)
   29428:	18004826 	beq	r3,zero,2954c <__sflush_r+0x174>
   2942c:	89801417 	ldw	r6,80(r17)
   29430:	10c0010c 	andi	r3,r2,4
   29434:	18000626 	beq	r3,zero,29450 <__sflush_r+0x78>
   29438:	88c00117 	ldw	r3,4(r17)
   2943c:	88800c17 	ldw	r2,48(r17)
   29440:	30cdc83a 	sub	r6,r6,r3
   29444:	10000226 	beq	r2,zero,29450 <__sflush_r+0x78>
   29448:	88800f17 	ldw	r2,60(r17)
   2944c:	308dc83a 	sub	r6,r6,r2
   29450:	89400717 	ldw	r5,28(r17)
   29454:	000f883a 	mov	r7,zero
   29458:	9809883a 	mov	r4,r19
   2945c:	403ee83a 	callr	r8
   29460:	00ffffc4 	movi	r3,-1
   29464:	10c04426 	beq	r2,r3,29578 <__sflush_r+0x1a0>
   29468:	88c0030b 	ldhu	r3,12(r17)
   2946c:	89000417 	ldw	r4,16(r17)
   29470:	88000115 	stw	zero,4(r17)
   29474:	197dffcc 	andi	r5,r3,63487
   29478:	8940030d 	sth	r5,12(r17)
   2947c:	89000015 	stw	r4,0(r17)
   29480:	18c4000c 	andi	r3,r3,4096
   29484:	18002c1e 	bne	r3,zero,29538 <__sflush_r+0x160>
   29488:	89400c17 	ldw	r5,48(r17)
   2948c:	9c000015 	stw	r16,0(r19)
   29490:	28000526 	beq	r5,zero,294a8 <__sflush_r+0xd0>
   29494:	88801004 	addi	r2,r17,64
   29498:	28800226 	beq	r5,r2,294a4 <__sflush_r+0xcc>
   2949c:	9809883a 	mov	r4,r19
   294a0:	0029b440 	call	29b44 <_free_r>
   294a4:	88000c15 	stw	zero,48(r17)
   294a8:	0005883a 	mov	r2,zero
   294ac:	dfc00417 	ldw	ra,16(sp)
   294b0:	dcc00317 	ldw	r19,12(sp)
   294b4:	dc800217 	ldw	r18,8(sp)
   294b8:	dc400117 	ldw	r17,4(sp)
   294bc:	dc000017 	ldw	r16,0(sp)
   294c0:	dec00504 	addi	sp,sp,20
   294c4:	f800283a 	ret
   294c8:	2c800417 	ldw	r18,16(r5)
   294cc:	903ff626 	beq	r18,zero,294a8 <__alt_data_end+0xfffea0a8>
   294d0:	2c000017 	ldw	r16,0(r5)
   294d4:	108000cc 	andi	r2,r2,3
   294d8:	2c800015 	stw	r18,0(r5)
   294dc:	84a1c83a 	sub	r16,r16,r18
   294e0:	1000131e 	bne	r2,zero,29530 <__sflush_r+0x158>
   294e4:	28800517 	ldw	r2,20(r5)
   294e8:	88800215 	stw	r2,8(r17)
   294ec:	04000316 	blt	zero,r16,294fc <__sflush_r+0x124>
   294f0:	003fed06 	br	294a8 <__alt_data_end+0xfffea0a8>
   294f4:	90a5883a 	add	r18,r18,r2
   294f8:	043feb0e 	bge	zero,r16,294a8 <__alt_data_end+0xfffea0a8>
   294fc:	88800917 	ldw	r2,36(r17)
   29500:	89400717 	ldw	r5,28(r17)
   29504:	800f883a 	mov	r7,r16
   29508:	900d883a 	mov	r6,r18
   2950c:	9809883a 	mov	r4,r19
   29510:	103ee83a 	callr	r2
   29514:	80a1c83a 	sub	r16,r16,r2
   29518:	00bff616 	blt	zero,r2,294f4 <__alt_data_end+0xfffea0f4>
   2951c:	88c0030b 	ldhu	r3,12(r17)
   29520:	00bfffc4 	movi	r2,-1
   29524:	18c01014 	ori	r3,r3,64
   29528:	88c0030d 	sth	r3,12(r17)
   2952c:	003fdf06 	br	294ac <__alt_data_end+0xfffea0ac>
   29530:	0005883a 	mov	r2,zero
   29534:	003fec06 	br	294e8 <__alt_data_end+0xfffea0e8>
   29538:	88801415 	stw	r2,80(r17)
   2953c:	003fd206 	br	29488 <__alt_data_end+0xfffea088>
   29540:	28c00f17 	ldw	r3,60(r5)
   29544:	00ffb316 	blt	zero,r3,29414 <__alt_data_end+0xfffea014>
   29548:	003fd706 	br	294a8 <__alt_data_end+0xfffea0a8>
   2954c:	89400717 	ldw	r5,28(r17)
   29550:	000d883a 	mov	r6,zero
   29554:	01c00044 	movi	r7,1
   29558:	9809883a 	mov	r4,r19
   2955c:	403ee83a 	callr	r8
   29560:	100d883a 	mov	r6,r2
   29564:	00bfffc4 	movi	r2,-1
   29568:	30801426 	beq	r6,r2,295bc <__sflush_r+0x1e4>
   2956c:	8880030b 	ldhu	r2,12(r17)
   29570:	8a000a17 	ldw	r8,40(r17)
   29574:	003fae06 	br	29430 <__alt_data_end+0xfffea030>
   29578:	98c00017 	ldw	r3,0(r19)
   2957c:	183fba26 	beq	r3,zero,29468 <__alt_data_end+0xfffea068>
   29580:	01000744 	movi	r4,29
   29584:	19000626 	beq	r3,r4,295a0 <__sflush_r+0x1c8>
   29588:	01000584 	movi	r4,22
   2958c:	19000426 	beq	r3,r4,295a0 <__sflush_r+0x1c8>
   29590:	88c0030b 	ldhu	r3,12(r17)
   29594:	18c01014 	ori	r3,r3,64
   29598:	88c0030d 	sth	r3,12(r17)
   2959c:	003fc306 	br	294ac <__alt_data_end+0xfffea0ac>
   295a0:	8880030b 	ldhu	r2,12(r17)
   295a4:	88c00417 	ldw	r3,16(r17)
   295a8:	88000115 	stw	zero,4(r17)
   295ac:	10bdffcc 	andi	r2,r2,63487
   295b0:	8880030d 	sth	r2,12(r17)
   295b4:	88c00015 	stw	r3,0(r17)
   295b8:	003fb306 	br	29488 <__alt_data_end+0xfffea088>
   295bc:	98800017 	ldw	r2,0(r19)
   295c0:	103fea26 	beq	r2,zero,2956c <__alt_data_end+0xfffea16c>
   295c4:	00c00744 	movi	r3,29
   295c8:	10c00226 	beq	r2,r3,295d4 <__sflush_r+0x1fc>
   295cc:	00c00584 	movi	r3,22
   295d0:	10c0031e 	bne	r2,r3,295e0 <__sflush_r+0x208>
   295d4:	9c000015 	stw	r16,0(r19)
   295d8:	0005883a 	mov	r2,zero
   295dc:	003fb306 	br	294ac <__alt_data_end+0xfffea0ac>
   295e0:	88c0030b 	ldhu	r3,12(r17)
   295e4:	3005883a 	mov	r2,r6
   295e8:	18c01014 	ori	r3,r3,64
   295ec:	88c0030d 	sth	r3,12(r17)
   295f0:	003fae06 	br	294ac <__alt_data_end+0xfffea0ac>

000295f4 <_fflush_r>:
   295f4:	defffd04 	addi	sp,sp,-12
   295f8:	dc000115 	stw	r16,4(sp)
   295fc:	dfc00215 	stw	ra,8(sp)
   29600:	2021883a 	mov	r16,r4
   29604:	20000226 	beq	r4,zero,29610 <_fflush_r+0x1c>
   29608:	20800e17 	ldw	r2,56(r4)
   2960c:	10000c26 	beq	r2,zero,29640 <_fflush_r+0x4c>
   29610:	2880030f 	ldh	r2,12(r5)
   29614:	1000051e 	bne	r2,zero,2962c <_fflush_r+0x38>
   29618:	0005883a 	mov	r2,zero
   2961c:	dfc00217 	ldw	ra,8(sp)
   29620:	dc000117 	ldw	r16,4(sp)
   29624:	dec00304 	addi	sp,sp,12
   29628:	f800283a 	ret
   2962c:	8009883a 	mov	r4,r16
   29630:	dfc00217 	ldw	ra,8(sp)
   29634:	dc000117 	ldw	r16,4(sp)
   29638:	dec00304 	addi	sp,sp,12
   2963c:	00293d81 	jmpi	293d8 <__sflush_r>
   29640:	d9400015 	stw	r5,0(sp)
   29644:	00299d00 	call	299d0 <__sinit>
   29648:	d9400017 	ldw	r5,0(sp)
   2964c:	003ff006 	br	29610 <__alt_data_end+0xfffea210>

00029650 <fflush>:
   29650:	20000526 	beq	r4,zero,29668 <fflush+0x18>
   29654:	008000f4 	movhi	r2,3
   29658:	10901e04 	addi	r2,r2,16504
   2965c:	200b883a 	mov	r5,r4
   29660:	11000017 	ldw	r4,0(r2)
   29664:	00295f41 	jmpi	295f4 <_fflush_r>
   29668:	008000f4 	movhi	r2,3
   2966c:	10901d04 	addi	r2,r2,16500
   29670:	11000017 	ldw	r4,0(r2)
   29674:	014000f4 	movhi	r5,3
   29678:	29657d04 	addi	r5,r5,-27148
   2967c:	0029f181 	jmpi	29f18 <_fwalk_reent>

00029680 <__fp_unlock>:
   29680:	0005883a 	mov	r2,zero
   29684:	f800283a 	ret

00029688 <_cleanup_r>:
   29688:	014000f4 	movhi	r5,3
   2968c:	29764204 	addi	r5,r5,-9976
   29690:	0029f181 	jmpi	29f18 <_fwalk_reent>

00029694 <__sinit.part.1>:
   29694:	defff704 	addi	sp,sp,-36
   29698:	00c000f4 	movhi	r3,3
   2969c:	dfc00815 	stw	ra,32(sp)
   296a0:	ddc00715 	stw	r23,28(sp)
   296a4:	dd800615 	stw	r22,24(sp)
   296a8:	dd400515 	stw	r21,20(sp)
   296ac:	dd000415 	stw	r20,16(sp)
   296b0:	dcc00315 	stw	r19,12(sp)
   296b4:	dc800215 	stw	r18,8(sp)
   296b8:	dc400115 	stw	r17,4(sp)
   296bc:	dc000015 	stw	r16,0(sp)
   296c0:	18e5a204 	addi	r3,r3,-27000
   296c4:	24000117 	ldw	r16,4(r4)
   296c8:	20c00f15 	stw	r3,60(r4)
   296cc:	2080bb04 	addi	r2,r4,748
   296d0:	00c000c4 	movi	r3,3
   296d4:	20c0b915 	stw	r3,740(r4)
   296d8:	2080ba15 	stw	r2,744(r4)
   296dc:	2000b815 	stw	zero,736(r4)
   296e0:	05c00204 	movi	r23,8
   296e4:	00800104 	movi	r2,4
   296e8:	2025883a 	mov	r18,r4
   296ec:	b80d883a 	mov	r6,r23
   296f0:	81001704 	addi	r4,r16,92
   296f4:	000b883a 	mov	r5,zero
   296f8:	80000015 	stw	zero,0(r16)
   296fc:	80000115 	stw	zero,4(r16)
   29700:	80000215 	stw	zero,8(r16)
   29704:	8080030d 	sth	r2,12(r16)
   29708:	80001915 	stw	zero,100(r16)
   2970c:	8000038d 	sth	zero,14(r16)
   29710:	80000415 	stw	zero,16(r16)
   29714:	80000515 	stw	zero,20(r16)
   29718:	80000615 	stw	zero,24(r16)
   2971c:	002acac0 	call	2acac <memset>
   29720:	058000f4 	movhi	r22,3
   29724:	94400217 	ldw	r17,8(r18)
   29728:	054000f4 	movhi	r21,3
   2972c:	050000f4 	movhi	r20,3
   29730:	04c000f4 	movhi	r19,3
   29734:	b5afa604 	addi	r22,r22,-16744
   29738:	ad6fbd04 	addi	r21,r21,-16652
   2973c:	a52fdc04 	addi	r20,r20,-16528
   29740:	9ceff304 	addi	r19,r19,-16436
   29744:	85800815 	stw	r22,32(r16)
   29748:	85400915 	stw	r21,36(r16)
   2974c:	85000a15 	stw	r20,40(r16)
   29750:	84c00b15 	stw	r19,44(r16)
   29754:	84000715 	stw	r16,28(r16)
   29758:	00800284 	movi	r2,10
   2975c:	8880030d 	sth	r2,12(r17)
   29760:	00800044 	movi	r2,1
   29764:	b80d883a 	mov	r6,r23
   29768:	89001704 	addi	r4,r17,92
   2976c:	000b883a 	mov	r5,zero
   29770:	88000015 	stw	zero,0(r17)
   29774:	88000115 	stw	zero,4(r17)
   29778:	88000215 	stw	zero,8(r17)
   2977c:	88001915 	stw	zero,100(r17)
   29780:	8880038d 	sth	r2,14(r17)
   29784:	88000415 	stw	zero,16(r17)
   29788:	88000515 	stw	zero,20(r17)
   2978c:	88000615 	stw	zero,24(r17)
   29790:	002acac0 	call	2acac <memset>
   29794:	94000317 	ldw	r16,12(r18)
   29798:	00800484 	movi	r2,18
   2979c:	8c400715 	stw	r17,28(r17)
   297a0:	8d800815 	stw	r22,32(r17)
   297a4:	8d400915 	stw	r21,36(r17)
   297a8:	8d000a15 	stw	r20,40(r17)
   297ac:	8cc00b15 	stw	r19,44(r17)
   297b0:	8080030d 	sth	r2,12(r16)
   297b4:	00800084 	movi	r2,2
   297b8:	80000015 	stw	zero,0(r16)
   297bc:	80000115 	stw	zero,4(r16)
   297c0:	80000215 	stw	zero,8(r16)
   297c4:	80001915 	stw	zero,100(r16)
   297c8:	8080038d 	sth	r2,14(r16)
   297cc:	80000415 	stw	zero,16(r16)
   297d0:	80000515 	stw	zero,20(r16)
   297d4:	80000615 	stw	zero,24(r16)
   297d8:	b80d883a 	mov	r6,r23
   297dc:	000b883a 	mov	r5,zero
   297e0:	81001704 	addi	r4,r16,92
   297e4:	002acac0 	call	2acac <memset>
   297e8:	00800044 	movi	r2,1
   297ec:	84000715 	stw	r16,28(r16)
   297f0:	85800815 	stw	r22,32(r16)
   297f4:	85400915 	stw	r21,36(r16)
   297f8:	85000a15 	stw	r20,40(r16)
   297fc:	84c00b15 	stw	r19,44(r16)
   29800:	90800e15 	stw	r2,56(r18)
   29804:	dfc00817 	ldw	ra,32(sp)
   29808:	ddc00717 	ldw	r23,28(sp)
   2980c:	dd800617 	ldw	r22,24(sp)
   29810:	dd400517 	ldw	r21,20(sp)
   29814:	dd000417 	ldw	r20,16(sp)
   29818:	dcc00317 	ldw	r19,12(sp)
   2981c:	dc800217 	ldw	r18,8(sp)
   29820:	dc400117 	ldw	r17,4(sp)
   29824:	dc000017 	ldw	r16,0(sp)
   29828:	dec00904 	addi	sp,sp,36
   2982c:	f800283a 	ret

00029830 <__fp_lock>:
   29830:	0005883a 	mov	r2,zero
   29834:	f800283a 	ret

00029838 <__sfmoreglue>:
   29838:	defffc04 	addi	sp,sp,-16
   2983c:	dc400115 	stw	r17,4(sp)
   29840:	2c7fffc4 	addi	r17,r5,-1
   29844:	8c401a24 	muli	r17,r17,104
   29848:	dc800215 	stw	r18,8(sp)
   2984c:	2825883a 	mov	r18,r5
   29850:	89401d04 	addi	r5,r17,116
   29854:	dc000015 	stw	r16,0(sp)
   29858:	dfc00315 	stw	ra,12(sp)
   2985c:	002a2740 	call	2a274 <_malloc_r>
   29860:	1021883a 	mov	r16,r2
   29864:	10000726 	beq	r2,zero,29884 <__sfmoreglue+0x4c>
   29868:	11000304 	addi	r4,r2,12
   2986c:	10000015 	stw	zero,0(r2)
   29870:	14800115 	stw	r18,4(r2)
   29874:	11000215 	stw	r4,8(r2)
   29878:	89801a04 	addi	r6,r17,104
   2987c:	000b883a 	mov	r5,zero
   29880:	002acac0 	call	2acac <memset>
   29884:	8005883a 	mov	r2,r16
   29888:	dfc00317 	ldw	ra,12(sp)
   2988c:	dc800217 	ldw	r18,8(sp)
   29890:	dc400117 	ldw	r17,4(sp)
   29894:	dc000017 	ldw	r16,0(sp)
   29898:	dec00404 	addi	sp,sp,16
   2989c:	f800283a 	ret

000298a0 <__sfp>:
   298a0:	defffb04 	addi	sp,sp,-20
   298a4:	dc000015 	stw	r16,0(sp)
   298a8:	040000f4 	movhi	r16,3
   298ac:	84101d04 	addi	r16,r16,16500
   298b0:	dcc00315 	stw	r19,12(sp)
   298b4:	2027883a 	mov	r19,r4
   298b8:	81000017 	ldw	r4,0(r16)
   298bc:	dfc00415 	stw	ra,16(sp)
   298c0:	dc800215 	stw	r18,8(sp)
   298c4:	20800e17 	ldw	r2,56(r4)
   298c8:	dc400115 	stw	r17,4(sp)
   298cc:	1000021e 	bne	r2,zero,298d8 <__sfp+0x38>
   298d0:	00296940 	call	29694 <__sinit.part.1>
   298d4:	81000017 	ldw	r4,0(r16)
   298d8:	2480b804 	addi	r18,r4,736
   298dc:	047fffc4 	movi	r17,-1
   298e0:	91000117 	ldw	r4,4(r18)
   298e4:	94000217 	ldw	r16,8(r18)
   298e8:	213fffc4 	addi	r4,r4,-1
   298ec:	20000a16 	blt	r4,zero,29918 <__sfp+0x78>
   298f0:	8080030f 	ldh	r2,12(r16)
   298f4:	10000c26 	beq	r2,zero,29928 <__sfp+0x88>
   298f8:	80c01d04 	addi	r3,r16,116
   298fc:	00000206 	br	29908 <__sfp+0x68>
   29900:	18bfe60f 	ldh	r2,-104(r3)
   29904:	10000826 	beq	r2,zero,29928 <__sfp+0x88>
   29908:	213fffc4 	addi	r4,r4,-1
   2990c:	1c3ffd04 	addi	r16,r3,-12
   29910:	18c01a04 	addi	r3,r3,104
   29914:	247ffa1e 	bne	r4,r17,29900 <__alt_data_end+0xfffea500>
   29918:	90800017 	ldw	r2,0(r18)
   2991c:	10001d26 	beq	r2,zero,29994 <__sfp+0xf4>
   29920:	1025883a 	mov	r18,r2
   29924:	003fee06 	br	298e0 <__alt_data_end+0xfffea4e0>
   29928:	00bfffc4 	movi	r2,-1
   2992c:	8080038d 	sth	r2,14(r16)
   29930:	00800044 	movi	r2,1
   29934:	8080030d 	sth	r2,12(r16)
   29938:	80001915 	stw	zero,100(r16)
   2993c:	80000015 	stw	zero,0(r16)
   29940:	80000215 	stw	zero,8(r16)
   29944:	80000115 	stw	zero,4(r16)
   29948:	80000415 	stw	zero,16(r16)
   2994c:	80000515 	stw	zero,20(r16)
   29950:	80000615 	stw	zero,24(r16)
   29954:	01800204 	movi	r6,8
   29958:	000b883a 	mov	r5,zero
   2995c:	81001704 	addi	r4,r16,92
   29960:	002acac0 	call	2acac <memset>
   29964:	8005883a 	mov	r2,r16
   29968:	80000c15 	stw	zero,48(r16)
   2996c:	80000d15 	stw	zero,52(r16)
   29970:	80001115 	stw	zero,68(r16)
   29974:	80001215 	stw	zero,72(r16)
   29978:	dfc00417 	ldw	ra,16(sp)
   2997c:	dcc00317 	ldw	r19,12(sp)
   29980:	dc800217 	ldw	r18,8(sp)
   29984:	dc400117 	ldw	r17,4(sp)
   29988:	dc000017 	ldw	r16,0(sp)
   2998c:	dec00504 	addi	sp,sp,20
   29990:	f800283a 	ret
   29994:	01400104 	movi	r5,4
   29998:	9809883a 	mov	r4,r19
   2999c:	00298380 	call	29838 <__sfmoreglue>
   299a0:	90800015 	stw	r2,0(r18)
   299a4:	103fde1e 	bne	r2,zero,29920 <__alt_data_end+0xfffea520>
   299a8:	00800304 	movi	r2,12
   299ac:	98800015 	stw	r2,0(r19)
   299b0:	0005883a 	mov	r2,zero
   299b4:	003ff006 	br	29978 <__alt_data_end+0xfffea578>

000299b8 <_cleanup>:
   299b8:	008000f4 	movhi	r2,3
   299bc:	10901d04 	addi	r2,r2,16500
   299c0:	11000017 	ldw	r4,0(r2)
   299c4:	014000f4 	movhi	r5,3
   299c8:	29764204 	addi	r5,r5,-9976
   299cc:	0029f181 	jmpi	29f18 <_fwalk_reent>

000299d0 <__sinit>:
   299d0:	20800e17 	ldw	r2,56(r4)
   299d4:	10000126 	beq	r2,zero,299dc <__sinit+0xc>
   299d8:	f800283a 	ret
   299dc:	00296941 	jmpi	29694 <__sinit.part.1>

000299e0 <__sfp_lock_acquire>:
   299e0:	f800283a 	ret

000299e4 <__sfp_lock_release>:
   299e4:	f800283a 	ret

000299e8 <__sinit_lock_acquire>:
   299e8:	f800283a 	ret

000299ec <__sinit_lock_release>:
   299ec:	f800283a 	ret

000299f0 <__fp_lock_all>:
   299f0:	008000f4 	movhi	r2,3
   299f4:	10901e04 	addi	r2,r2,16504
   299f8:	11000017 	ldw	r4,0(r2)
   299fc:	014000f4 	movhi	r5,3
   29a00:	29660c04 	addi	r5,r5,-26576
   29a04:	0029e541 	jmpi	29e54 <_fwalk>

00029a08 <__fp_unlock_all>:
   29a08:	008000f4 	movhi	r2,3
   29a0c:	10901e04 	addi	r2,r2,16504
   29a10:	11000017 	ldw	r4,0(r2)
   29a14:	014000f4 	movhi	r5,3
   29a18:	2965a004 	addi	r5,r5,-27008
   29a1c:	0029e541 	jmpi	29e54 <_fwalk>

00029a20 <_malloc_trim_r>:
   29a20:	defffb04 	addi	sp,sp,-20
   29a24:	dcc00315 	stw	r19,12(sp)
   29a28:	04c000f4 	movhi	r19,3
   29a2c:	dc800215 	stw	r18,8(sp)
   29a30:	dc400115 	stw	r17,4(sp)
   29a34:	dc000015 	stw	r16,0(sp)
   29a38:	dfc00415 	stw	ra,16(sp)
   29a3c:	2821883a 	mov	r16,r5
   29a40:	9cca8d04 	addi	r19,r19,10804
   29a44:	2025883a 	mov	r18,r4
   29a48:	002fd9c0 	call	2fd9c <__malloc_lock>
   29a4c:	98800217 	ldw	r2,8(r19)
   29a50:	14400117 	ldw	r17,4(r2)
   29a54:	00bfff04 	movi	r2,-4
   29a58:	88a2703a 	and	r17,r17,r2
   29a5c:	8c21c83a 	sub	r16,r17,r16
   29a60:	8403fbc4 	addi	r16,r16,4079
   29a64:	8020d33a 	srli	r16,r16,12
   29a68:	0083ffc4 	movi	r2,4095
   29a6c:	843fffc4 	addi	r16,r16,-1
   29a70:	8020933a 	slli	r16,r16,12
   29a74:	1400060e 	bge	r2,r16,29a90 <_malloc_trim_r+0x70>
   29a78:	000b883a 	mov	r5,zero
   29a7c:	9009883a 	mov	r4,r18
   29a80:	002be440 	call	2be44 <_sbrk_r>
   29a84:	98c00217 	ldw	r3,8(r19)
   29a88:	1c47883a 	add	r3,r3,r17
   29a8c:	10c00a26 	beq	r2,r3,29ab8 <_malloc_trim_r+0x98>
   29a90:	9009883a 	mov	r4,r18
   29a94:	002fdc00 	call	2fdc0 <__malloc_unlock>
   29a98:	0005883a 	mov	r2,zero
   29a9c:	dfc00417 	ldw	ra,16(sp)
   29aa0:	dcc00317 	ldw	r19,12(sp)
   29aa4:	dc800217 	ldw	r18,8(sp)
   29aa8:	dc400117 	ldw	r17,4(sp)
   29aac:	dc000017 	ldw	r16,0(sp)
   29ab0:	dec00504 	addi	sp,sp,20
   29ab4:	f800283a 	ret
   29ab8:	040bc83a 	sub	r5,zero,r16
   29abc:	9009883a 	mov	r4,r18
   29ac0:	002be440 	call	2be44 <_sbrk_r>
   29ac4:	00ffffc4 	movi	r3,-1
   29ac8:	10c00d26 	beq	r2,r3,29b00 <_malloc_trim_r+0xe0>
   29acc:	00c000f4 	movhi	r3,3
   29ad0:	18d71304 	addi	r3,r3,23628
   29ad4:	18800017 	ldw	r2,0(r3)
   29ad8:	99000217 	ldw	r4,8(r19)
   29adc:	8c23c83a 	sub	r17,r17,r16
   29ae0:	8c400054 	ori	r17,r17,1
   29ae4:	1421c83a 	sub	r16,r2,r16
   29ae8:	24400115 	stw	r17,4(r4)
   29aec:	9009883a 	mov	r4,r18
   29af0:	1c000015 	stw	r16,0(r3)
   29af4:	002fdc00 	call	2fdc0 <__malloc_unlock>
   29af8:	00800044 	movi	r2,1
   29afc:	003fe706 	br	29a9c <__alt_data_end+0xfffea69c>
   29b00:	000b883a 	mov	r5,zero
   29b04:	9009883a 	mov	r4,r18
   29b08:	002be440 	call	2be44 <_sbrk_r>
   29b0c:	99000217 	ldw	r4,8(r19)
   29b10:	014003c4 	movi	r5,15
   29b14:	1107c83a 	sub	r3,r2,r4
   29b18:	28ffdd0e 	bge	r5,r3,29a90 <__alt_data_end+0xfffea690>
   29b1c:	014000f4 	movhi	r5,3
   29b20:	29502004 	addi	r5,r5,16512
   29b24:	29400017 	ldw	r5,0(r5)
   29b28:	18c00054 	ori	r3,r3,1
   29b2c:	20c00115 	stw	r3,4(r4)
   29b30:	00c000f4 	movhi	r3,3
   29b34:	1145c83a 	sub	r2,r2,r5
   29b38:	18d71304 	addi	r3,r3,23628
   29b3c:	18800015 	stw	r2,0(r3)
   29b40:	003fd306 	br	29a90 <__alt_data_end+0xfffea690>

00029b44 <_free_r>:
   29b44:	28004126 	beq	r5,zero,29c4c <_free_r+0x108>
   29b48:	defffd04 	addi	sp,sp,-12
   29b4c:	dc400115 	stw	r17,4(sp)
   29b50:	dc000015 	stw	r16,0(sp)
   29b54:	2023883a 	mov	r17,r4
   29b58:	2821883a 	mov	r16,r5
   29b5c:	dfc00215 	stw	ra,8(sp)
   29b60:	002fd9c0 	call	2fd9c <__malloc_lock>
   29b64:	81ffff17 	ldw	r7,-4(r16)
   29b68:	00bfff84 	movi	r2,-2
   29b6c:	010000f4 	movhi	r4,3
   29b70:	81bffe04 	addi	r6,r16,-8
   29b74:	3884703a 	and	r2,r7,r2
   29b78:	210a8d04 	addi	r4,r4,10804
   29b7c:	308b883a 	add	r5,r6,r2
   29b80:	2a400117 	ldw	r9,4(r5)
   29b84:	22000217 	ldw	r8,8(r4)
   29b88:	00ffff04 	movi	r3,-4
   29b8c:	48c6703a 	and	r3,r9,r3
   29b90:	2a005726 	beq	r5,r8,29cf0 <_free_r+0x1ac>
   29b94:	28c00115 	stw	r3,4(r5)
   29b98:	39c0004c 	andi	r7,r7,1
   29b9c:	3800091e 	bne	r7,zero,29bc4 <_free_r+0x80>
   29ba0:	823ffe17 	ldw	r8,-8(r16)
   29ba4:	22400204 	addi	r9,r4,8
   29ba8:	320dc83a 	sub	r6,r6,r8
   29bac:	31c00217 	ldw	r7,8(r6)
   29bb0:	1205883a 	add	r2,r2,r8
   29bb4:	3a406526 	beq	r7,r9,29d4c <_free_r+0x208>
   29bb8:	32000317 	ldw	r8,12(r6)
   29bbc:	3a000315 	stw	r8,12(r7)
   29bc0:	41c00215 	stw	r7,8(r8)
   29bc4:	28cf883a 	add	r7,r5,r3
   29bc8:	39c00117 	ldw	r7,4(r7)
   29bcc:	39c0004c 	andi	r7,r7,1
   29bd0:	38003a26 	beq	r7,zero,29cbc <_free_r+0x178>
   29bd4:	10c00054 	ori	r3,r2,1
   29bd8:	30c00115 	stw	r3,4(r6)
   29bdc:	3087883a 	add	r3,r6,r2
   29be0:	18800015 	stw	r2,0(r3)
   29be4:	00c07fc4 	movi	r3,511
   29be8:	18801936 	bltu	r3,r2,29c50 <_free_r+0x10c>
   29bec:	1004d0fa 	srli	r2,r2,3
   29bf0:	01c00044 	movi	r7,1
   29bf4:	21400117 	ldw	r5,4(r4)
   29bf8:	10c00044 	addi	r3,r2,1
   29bfc:	18c7883a 	add	r3,r3,r3
   29c00:	1005d0ba 	srai	r2,r2,2
   29c04:	18c7883a 	add	r3,r3,r3
   29c08:	18c7883a 	add	r3,r3,r3
   29c0c:	1907883a 	add	r3,r3,r4
   29c10:	3884983a 	sll	r2,r7,r2
   29c14:	19c00017 	ldw	r7,0(r3)
   29c18:	1a3ffe04 	addi	r8,r3,-8
   29c1c:	1144b03a 	or	r2,r2,r5
   29c20:	32000315 	stw	r8,12(r6)
   29c24:	31c00215 	stw	r7,8(r6)
   29c28:	20800115 	stw	r2,4(r4)
   29c2c:	19800015 	stw	r6,0(r3)
   29c30:	39800315 	stw	r6,12(r7)
   29c34:	8809883a 	mov	r4,r17
   29c38:	dfc00217 	ldw	ra,8(sp)
   29c3c:	dc400117 	ldw	r17,4(sp)
   29c40:	dc000017 	ldw	r16,0(sp)
   29c44:	dec00304 	addi	sp,sp,12
   29c48:	002fdc01 	jmpi	2fdc0 <__malloc_unlock>
   29c4c:	f800283a 	ret
   29c50:	100ad27a 	srli	r5,r2,9
   29c54:	00c00104 	movi	r3,4
   29c58:	19404a36 	bltu	r3,r5,29d84 <_free_r+0x240>
   29c5c:	100ad1ba 	srli	r5,r2,6
   29c60:	28c00e44 	addi	r3,r5,57
   29c64:	18c7883a 	add	r3,r3,r3
   29c68:	29400e04 	addi	r5,r5,56
   29c6c:	18c7883a 	add	r3,r3,r3
   29c70:	18c7883a 	add	r3,r3,r3
   29c74:	1909883a 	add	r4,r3,r4
   29c78:	20c00017 	ldw	r3,0(r4)
   29c7c:	01c000f4 	movhi	r7,3
   29c80:	213ffe04 	addi	r4,r4,-8
   29c84:	39ca8d04 	addi	r7,r7,10804
   29c88:	20c04426 	beq	r4,r3,29d9c <_free_r+0x258>
   29c8c:	01ffff04 	movi	r7,-4
   29c90:	19400117 	ldw	r5,4(r3)
   29c94:	29ca703a 	and	r5,r5,r7
   29c98:	1140022e 	bgeu	r2,r5,29ca4 <_free_r+0x160>
   29c9c:	18c00217 	ldw	r3,8(r3)
   29ca0:	20fffb1e 	bne	r4,r3,29c90 <__alt_data_end+0xfffea890>
   29ca4:	19000317 	ldw	r4,12(r3)
   29ca8:	31000315 	stw	r4,12(r6)
   29cac:	30c00215 	stw	r3,8(r6)
   29cb0:	21800215 	stw	r6,8(r4)
   29cb4:	19800315 	stw	r6,12(r3)
   29cb8:	003fde06 	br	29c34 <__alt_data_end+0xfffea834>
   29cbc:	29c00217 	ldw	r7,8(r5)
   29cc0:	10c5883a 	add	r2,r2,r3
   29cc4:	00c000f4 	movhi	r3,3
   29cc8:	18ca8f04 	addi	r3,r3,10812
   29ccc:	38c03b26 	beq	r7,r3,29dbc <_free_r+0x278>
   29cd0:	2a000317 	ldw	r8,12(r5)
   29cd4:	11400054 	ori	r5,r2,1
   29cd8:	3087883a 	add	r3,r6,r2
   29cdc:	3a000315 	stw	r8,12(r7)
   29ce0:	41c00215 	stw	r7,8(r8)
   29ce4:	31400115 	stw	r5,4(r6)
   29ce8:	18800015 	stw	r2,0(r3)
   29cec:	003fbd06 	br	29be4 <__alt_data_end+0xfffea7e4>
   29cf0:	39c0004c 	andi	r7,r7,1
   29cf4:	10c5883a 	add	r2,r2,r3
   29cf8:	3800071e 	bne	r7,zero,29d18 <_free_r+0x1d4>
   29cfc:	81fffe17 	ldw	r7,-8(r16)
   29d00:	31cdc83a 	sub	r6,r6,r7
   29d04:	30c00317 	ldw	r3,12(r6)
   29d08:	31400217 	ldw	r5,8(r6)
   29d0c:	11c5883a 	add	r2,r2,r7
   29d10:	28c00315 	stw	r3,12(r5)
   29d14:	19400215 	stw	r5,8(r3)
   29d18:	10c00054 	ori	r3,r2,1
   29d1c:	30c00115 	stw	r3,4(r6)
   29d20:	00c000f4 	movhi	r3,3
   29d24:	18d02104 	addi	r3,r3,16516
   29d28:	18c00017 	ldw	r3,0(r3)
   29d2c:	21800215 	stw	r6,8(r4)
   29d30:	10ffc036 	bltu	r2,r3,29c34 <__alt_data_end+0xfffea834>
   29d34:	008000f4 	movhi	r2,3
   29d38:	1096fb04 	addi	r2,r2,23532
   29d3c:	11400017 	ldw	r5,0(r2)
   29d40:	8809883a 	mov	r4,r17
   29d44:	0029a200 	call	29a20 <_malloc_trim_r>
   29d48:	003fba06 	br	29c34 <__alt_data_end+0xfffea834>
   29d4c:	28c9883a 	add	r4,r5,r3
   29d50:	21000117 	ldw	r4,4(r4)
   29d54:	2100004c 	andi	r4,r4,1
   29d58:	2000391e 	bne	r4,zero,29e40 <_free_r+0x2fc>
   29d5c:	29c00217 	ldw	r7,8(r5)
   29d60:	29000317 	ldw	r4,12(r5)
   29d64:	1885883a 	add	r2,r3,r2
   29d68:	10c00054 	ori	r3,r2,1
   29d6c:	39000315 	stw	r4,12(r7)
   29d70:	21c00215 	stw	r7,8(r4)
   29d74:	30c00115 	stw	r3,4(r6)
   29d78:	308d883a 	add	r6,r6,r2
   29d7c:	30800015 	stw	r2,0(r6)
   29d80:	003fac06 	br	29c34 <__alt_data_end+0xfffea834>
   29d84:	00c00504 	movi	r3,20
   29d88:	19401536 	bltu	r3,r5,29de0 <_free_r+0x29c>
   29d8c:	28c01704 	addi	r3,r5,92
   29d90:	18c7883a 	add	r3,r3,r3
   29d94:	294016c4 	addi	r5,r5,91
   29d98:	003fb406 	br	29c6c <__alt_data_end+0xfffea86c>
   29d9c:	280bd0ba 	srai	r5,r5,2
   29da0:	00c00044 	movi	r3,1
   29da4:	38800117 	ldw	r2,4(r7)
   29da8:	194a983a 	sll	r5,r3,r5
   29dac:	2007883a 	mov	r3,r4
   29db0:	2884b03a 	or	r2,r5,r2
   29db4:	38800115 	stw	r2,4(r7)
   29db8:	003fbb06 	br	29ca8 <__alt_data_end+0xfffea8a8>
   29dbc:	21800515 	stw	r6,20(r4)
   29dc0:	21800415 	stw	r6,16(r4)
   29dc4:	10c00054 	ori	r3,r2,1
   29dc8:	31c00315 	stw	r7,12(r6)
   29dcc:	31c00215 	stw	r7,8(r6)
   29dd0:	30c00115 	stw	r3,4(r6)
   29dd4:	308d883a 	add	r6,r6,r2
   29dd8:	30800015 	stw	r2,0(r6)
   29ddc:	003f9506 	br	29c34 <__alt_data_end+0xfffea834>
   29de0:	00c01504 	movi	r3,84
   29de4:	19400536 	bltu	r3,r5,29dfc <_free_r+0x2b8>
   29de8:	100ad33a 	srli	r5,r2,12
   29dec:	28c01bc4 	addi	r3,r5,111
   29df0:	18c7883a 	add	r3,r3,r3
   29df4:	29401b84 	addi	r5,r5,110
   29df8:	003f9c06 	br	29c6c <__alt_data_end+0xfffea86c>
   29dfc:	00c05504 	movi	r3,340
   29e00:	19400536 	bltu	r3,r5,29e18 <_free_r+0x2d4>
   29e04:	100ad3fa 	srli	r5,r2,15
   29e08:	28c01e04 	addi	r3,r5,120
   29e0c:	18c7883a 	add	r3,r3,r3
   29e10:	29401dc4 	addi	r5,r5,119
   29e14:	003f9506 	br	29c6c <__alt_data_end+0xfffea86c>
   29e18:	00c15504 	movi	r3,1364
   29e1c:	19400536 	bltu	r3,r5,29e34 <_free_r+0x2f0>
   29e20:	100ad4ba 	srli	r5,r2,18
   29e24:	28c01f44 	addi	r3,r5,125
   29e28:	18c7883a 	add	r3,r3,r3
   29e2c:	29401f04 	addi	r5,r5,124
   29e30:	003f8e06 	br	29c6c <__alt_data_end+0xfffea86c>
   29e34:	00c03f84 	movi	r3,254
   29e38:	01401f84 	movi	r5,126
   29e3c:	003f8b06 	br	29c6c <__alt_data_end+0xfffea86c>
   29e40:	10c00054 	ori	r3,r2,1
   29e44:	30c00115 	stw	r3,4(r6)
   29e48:	308d883a 	add	r6,r6,r2
   29e4c:	30800015 	stw	r2,0(r6)
   29e50:	003f7806 	br	29c34 <__alt_data_end+0xfffea834>

00029e54 <_fwalk>:
   29e54:	defff704 	addi	sp,sp,-36
   29e58:	dd000415 	stw	r20,16(sp)
   29e5c:	dfc00815 	stw	ra,32(sp)
   29e60:	ddc00715 	stw	r23,28(sp)
   29e64:	dd800615 	stw	r22,24(sp)
   29e68:	dd400515 	stw	r21,20(sp)
   29e6c:	dcc00315 	stw	r19,12(sp)
   29e70:	dc800215 	stw	r18,8(sp)
   29e74:	dc400115 	stw	r17,4(sp)
   29e78:	dc000015 	stw	r16,0(sp)
   29e7c:	2500b804 	addi	r20,r4,736
   29e80:	a0002326 	beq	r20,zero,29f10 <_fwalk+0xbc>
   29e84:	282b883a 	mov	r21,r5
   29e88:	002f883a 	mov	r23,zero
   29e8c:	05800044 	movi	r22,1
   29e90:	04ffffc4 	movi	r19,-1
   29e94:	a4400117 	ldw	r17,4(r20)
   29e98:	a4800217 	ldw	r18,8(r20)
   29e9c:	8c7fffc4 	addi	r17,r17,-1
   29ea0:	88000d16 	blt	r17,zero,29ed8 <_fwalk+0x84>
   29ea4:	94000304 	addi	r16,r18,12
   29ea8:	94800384 	addi	r18,r18,14
   29eac:	8080000b 	ldhu	r2,0(r16)
   29eb0:	8c7fffc4 	addi	r17,r17,-1
   29eb4:	813ffd04 	addi	r4,r16,-12
   29eb8:	b080042e 	bgeu	r22,r2,29ecc <_fwalk+0x78>
   29ebc:	9080000f 	ldh	r2,0(r18)
   29ec0:	14c00226 	beq	r2,r19,29ecc <_fwalk+0x78>
   29ec4:	a83ee83a 	callr	r21
   29ec8:	b8aeb03a 	or	r23,r23,r2
   29ecc:	84001a04 	addi	r16,r16,104
   29ed0:	94801a04 	addi	r18,r18,104
   29ed4:	8cfff51e 	bne	r17,r19,29eac <__alt_data_end+0xfffeaaac>
   29ed8:	a5000017 	ldw	r20,0(r20)
   29edc:	a03fed1e 	bne	r20,zero,29e94 <__alt_data_end+0xfffeaa94>
   29ee0:	b805883a 	mov	r2,r23
   29ee4:	dfc00817 	ldw	ra,32(sp)
   29ee8:	ddc00717 	ldw	r23,28(sp)
   29eec:	dd800617 	ldw	r22,24(sp)
   29ef0:	dd400517 	ldw	r21,20(sp)
   29ef4:	dd000417 	ldw	r20,16(sp)
   29ef8:	dcc00317 	ldw	r19,12(sp)
   29efc:	dc800217 	ldw	r18,8(sp)
   29f00:	dc400117 	ldw	r17,4(sp)
   29f04:	dc000017 	ldw	r16,0(sp)
   29f08:	dec00904 	addi	sp,sp,36
   29f0c:	f800283a 	ret
   29f10:	002f883a 	mov	r23,zero
   29f14:	003ff206 	br	29ee0 <__alt_data_end+0xfffeaae0>

00029f18 <_fwalk_reent>:
   29f18:	defff704 	addi	sp,sp,-36
   29f1c:	dd000415 	stw	r20,16(sp)
   29f20:	dfc00815 	stw	ra,32(sp)
   29f24:	ddc00715 	stw	r23,28(sp)
   29f28:	dd800615 	stw	r22,24(sp)
   29f2c:	dd400515 	stw	r21,20(sp)
   29f30:	dcc00315 	stw	r19,12(sp)
   29f34:	dc800215 	stw	r18,8(sp)
   29f38:	dc400115 	stw	r17,4(sp)
   29f3c:	dc000015 	stw	r16,0(sp)
   29f40:	2500b804 	addi	r20,r4,736
   29f44:	a0002326 	beq	r20,zero,29fd4 <_fwalk_reent+0xbc>
   29f48:	282b883a 	mov	r21,r5
   29f4c:	2027883a 	mov	r19,r4
   29f50:	002f883a 	mov	r23,zero
   29f54:	05800044 	movi	r22,1
   29f58:	04bfffc4 	movi	r18,-1
   29f5c:	a4400117 	ldw	r17,4(r20)
   29f60:	a4000217 	ldw	r16,8(r20)
   29f64:	8c7fffc4 	addi	r17,r17,-1
   29f68:	88000c16 	blt	r17,zero,29f9c <_fwalk_reent+0x84>
   29f6c:	84000304 	addi	r16,r16,12
   29f70:	8080000b 	ldhu	r2,0(r16)
   29f74:	8c7fffc4 	addi	r17,r17,-1
   29f78:	817ffd04 	addi	r5,r16,-12
   29f7c:	b080052e 	bgeu	r22,r2,29f94 <_fwalk_reent+0x7c>
   29f80:	8080008f 	ldh	r2,2(r16)
   29f84:	9809883a 	mov	r4,r19
   29f88:	14800226 	beq	r2,r18,29f94 <_fwalk_reent+0x7c>
   29f8c:	a83ee83a 	callr	r21
   29f90:	b8aeb03a 	or	r23,r23,r2
   29f94:	84001a04 	addi	r16,r16,104
   29f98:	8cbff51e 	bne	r17,r18,29f70 <__alt_data_end+0xfffeab70>
   29f9c:	a5000017 	ldw	r20,0(r20)
   29fa0:	a03fee1e 	bne	r20,zero,29f5c <__alt_data_end+0xfffeab5c>
   29fa4:	b805883a 	mov	r2,r23
   29fa8:	dfc00817 	ldw	ra,32(sp)
   29fac:	ddc00717 	ldw	r23,28(sp)
   29fb0:	dd800617 	ldw	r22,24(sp)
   29fb4:	dd400517 	ldw	r21,20(sp)
   29fb8:	dd000417 	ldw	r20,16(sp)
   29fbc:	dcc00317 	ldw	r19,12(sp)
   29fc0:	dc800217 	ldw	r18,8(sp)
   29fc4:	dc400117 	ldw	r17,4(sp)
   29fc8:	dc000017 	ldw	r16,0(sp)
   29fcc:	dec00904 	addi	sp,sp,36
   29fd0:	f800283a 	ret
   29fd4:	002f883a 	mov	r23,zero
   29fd8:	003ff206 	br	29fa4 <__alt_data_end+0xfffeaba4>

00029fdc <_setlocale_r>:
   29fdc:	30001b26 	beq	r6,zero,2a04c <_setlocale_r+0x70>
   29fe0:	014000f4 	movhi	r5,3
   29fe4:	defffe04 	addi	sp,sp,-8
   29fe8:	29490404 	addi	r5,r5,9232
   29fec:	3009883a 	mov	r4,r6
   29ff0:	dc000015 	stw	r16,0(sp)
   29ff4:	dfc00115 	stw	ra,4(sp)
   29ff8:	3021883a 	mov	r16,r6
   29ffc:	002bfd40 	call	2bfd4 <strcmp>
   2a000:	1000061e 	bne	r2,zero,2a01c <_setlocale_r+0x40>
   2a004:	008000f4 	movhi	r2,3
   2a008:	1088e604 	addi	r2,r2,9112
   2a00c:	dfc00117 	ldw	ra,4(sp)
   2a010:	dc000017 	ldw	r16,0(sp)
   2a014:	dec00204 	addi	sp,sp,8
   2a018:	f800283a 	ret
   2a01c:	014000f4 	movhi	r5,3
   2a020:	2948e604 	addi	r5,r5,9112
   2a024:	8009883a 	mov	r4,r16
   2a028:	002bfd40 	call	2bfd4 <strcmp>
   2a02c:	103ff526 	beq	r2,zero,2a004 <__alt_data_end+0xfffeac04>
   2a030:	014000f4 	movhi	r5,3
   2a034:	2948ef04 	addi	r5,r5,9148
   2a038:	8009883a 	mov	r4,r16
   2a03c:	002bfd40 	call	2bfd4 <strcmp>
   2a040:	103ff026 	beq	r2,zero,2a004 <__alt_data_end+0xfffeac04>
   2a044:	0005883a 	mov	r2,zero
   2a048:	003ff006 	br	2a00c <__alt_data_end+0xfffeac0c>
   2a04c:	008000f4 	movhi	r2,3
   2a050:	1088e604 	addi	r2,r2,9112
   2a054:	f800283a 	ret

0002a058 <__locale_charset>:
   2a058:	008000f4 	movhi	r2,3
   2a05c:	108a7704 	addi	r2,r2,10716
   2a060:	f800283a 	ret

0002a064 <__locale_mb_cur_max>:
   2a064:	008000f4 	movhi	r2,3
   2a068:	10901f04 	addi	r2,r2,16508
   2a06c:	10800017 	ldw	r2,0(r2)
   2a070:	f800283a 	ret

0002a074 <__locale_msgcharset>:
   2a074:	008000f4 	movhi	r2,3
   2a078:	108a6f04 	addi	r2,r2,10684
   2a07c:	f800283a 	ret

0002a080 <__locale_cjk_lang>:
   2a080:	0005883a 	mov	r2,zero
   2a084:	f800283a 	ret

0002a088 <_localeconv_r>:
   2a088:	008000f4 	movhi	r2,3
   2a08c:	108a7f04 	addi	r2,r2,10748
   2a090:	f800283a 	ret

0002a094 <setlocale>:
   2a094:	008000f4 	movhi	r2,3
   2a098:	10901e04 	addi	r2,r2,16504
   2a09c:	280d883a 	mov	r6,r5
   2a0a0:	200b883a 	mov	r5,r4
   2a0a4:	11000017 	ldw	r4,0(r2)
   2a0a8:	0029fdc1 	jmpi	29fdc <_setlocale_r>

0002a0ac <localeconv>:
   2a0ac:	008000f4 	movhi	r2,3
   2a0b0:	108a7f04 	addi	r2,r2,10748
   2a0b4:	f800283a 	ret

0002a0b8 <__smakebuf_r>:
   2a0b8:	2880030b 	ldhu	r2,12(r5)
   2a0bc:	10c0008c 	andi	r3,r2,2
   2a0c0:	1800411e 	bne	r3,zero,2a1c8 <__smakebuf_r+0x110>
   2a0c4:	deffec04 	addi	sp,sp,-80
   2a0c8:	dc000f15 	stw	r16,60(sp)
   2a0cc:	2821883a 	mov	r16,r5
   2a0d0:	2940038f 	ldh	r5,14(r5)
   2a0d4:	dc401015 	stw	r17,64(sp)
   2a0d8:	dfc01315 	stw	ra,76(sp)
   2a0dc:	dcc01215 	stw	r19,72(sp)
   2a0e0:	dc801115 	stw	r18,68(sp)
   2a0e4:	2023883a 	mov	r17,r4
   2a0e8:	28001c16 	blt	r5,zero,2a15c <__smakebuf_r+0xa4>
   2a0ec:	d80d883a 	mov	r6,sp
   2a0f0:	002dc140 	call	2dc14 <_fstat_r>
   2a0f4:	10001816 	blt	r2,zero,2a158 <__smakebuf_r+0xa0>
   2a0f8:	d8800117 	ldw	r2,4(sp)
   2a0fc:	00e00014 	movui	r3,32768
   2a100:	10bc000c 	andi	r2,r2,61440
   2a104:	14c80020 	cmpeqi	r19,r2,8192
   2a108:	10c03726 	beq	r2,r3,2a1e8 <__smakebuf_r+0x130>
   2a10c:	80c0030b 	ldhu	r3,12(r16)
   2a110:	18c20014 	ori	r3,r3,2048
   2a114:	80c0030d 	sth	r3,12(r16)
   2a118:	00c80004 	movi	r3,8192
   2a11c:	10c0521e 	bne	r2,r3,2a268 <__smakebuf_r+0x1b0>
   2a120:	8140038f 	ldh	r5,14(r16)
   2a124:	8809883a 	mov	r4,r17
   2a128:	002e12c0 	call	2e12c <_isatty_r>
   2a12c:	10004c26 	beq	r2,zero,2a260 <__smakebuf_r+0x1a8>
   2a130:	8080030b 	ldhu	r2,12(r16)
   2a134:	80c010c4 	addi	r3,r16,67
   2a138:	80c00015 	stw	r3,0(r16)
   2a13c:	10800054 	ori	r2,r2,1
   2a140:	8080030d 	sth	r2,12(r16)
   2a144:	00800044 	movi	r2,1
   2a148:	80c00415 	stw	r3,16(r16)
   2a14c:	80800515 	stw	r2,20(r16)
   2a150:	04810004 	movi	r18,1024
   2a154:	00000706 	br	2a174 <__smakebuf_r+0xbc>
   2a158:	8080030b 	ldhu	r2,12(r16)
   2a15c:	10c0200c 	andi	r3,r2,128
   2a160:	18001f1e 	bne	r3,zero,2a1e0 <__smakebuf_r+0x128>
   2a164:	04810004 	movi	r18,1024
   2a168:	10820014 	ori	r2,r2,2048
   2a16c:	8080030d 	sth	r2,12(r16)
   2a170:	0027883a 	mov	r19,zero
   2a174:	900b883a 	mov	r5,r18
   2a178:	8809883a 	mov	r4,r17
   2a17c:	002a2740 	call	2a274 <_malloc_r>
   2a180:	10002c26 	beq	r2,zero,2a234 <__smakebuf_r+0x17c>
   2a184:	80c0030b 	ldhu	r3,12(r16)
   2a188:	010000f4 	movhi	r4,3
   2a18c:	2125a204 	addi	r4,r4,-27000
   2a190:	89000f15 	stw	r4,60(r17)
   2a194:	18c02014 	ori	r3,r3,128
   2a198:	80c0030d 	sth	r3,12(r16)
   2a19c:	80800015 	stw	r2,0(r16)
   2a1a0:	80800415 	stw	r2,16(r16)
   2a1a4:	84800515 	stw	r18,20(r16)
   2a1a8:	98001a1e 	bne	r19,zero,2a214 <__smakebuf_r+0x15c>
   2a1ac:	dfc01317 	ldw	ra,76(sp)
   2a1b0:	dcc01217 	ldw	r19,72(sp)
   2a1b4:	dc801117 	ldw	r18,68(sp)
   2a1b8:	dc401017 	ldw	r17,64(sp)
   2a1bc:	dc000f17 	ldw	r16,60(sp)
   2a1c0:	dec01404 	addi	sp,sp,80
   2a1c4:	f800283a 	ret
   2a1c8:	288010c4 	addi	r2,r5,67
   2a1cc:	28800015 	stw	r2,0(r5)
   2a1d0:	28800415 	stw	r2,16(r5)
   2a1d4:	00800044 	movi	r2,1
   2a1d8:	28800515 	stw	r2,20(r5)
   2a1dc:	f800283a 	ret
   2a1e0:	04801004 	movi	r18,64
   2a1e4:	003fe006 	br	2a168 <__alt_data_end+0xfffead68>
   2a1e8:	81000a17 	ldw	r4,40(r16)
   2a1ec:	00c000f4 	movhi	r3,3
   2a1f0:	18efdc04 	addi	r3,r3,-16528
   2a1f4:	20ffc51e 	bne	r4,r3,2a10c <__alt_data_end+0xfffead0c>
   2a1f8:	8080030b 	ldhu	r2,12(r16)
   2a1fc:	04810004 	movi	r18,1024
   2a200:	84801315 	stw	r18,76(r16)
   2a204:	1484b03a 	or	r2,r2,r18
   2a208:	8080030d 	sth	r2,12(r16)
   2a20c:	0027883a 	mov	r19,zero
   2a210:	003fd806 	br	2a174 <__alt_data_end+0xfffead74>
   2a214:	8140038f 	ldh	r5,14(r16)
   2a218:	8809883a 	mov	r4,r17
   2a21c:	002e12c0 	call	2e12c <_isatty_r>
   2a220:	103fe226 	beq	r2,zero,2a1ac <__alt_data_end+0xfffeadac>
   2a224:	8080030b 	ldhu	r2,12(r16)
   2a228:	10800054 	ori	r2,r2,1
   2a22c:	8080030d 	sth	r2,12(r16)
   2a230:	003fde06 	br	2a1ac <__alt_data_end+0xfffeadac>
   2a234:	8080030b 	ldhu	r2,12(r16)
   2a238:	10c0800c 	andi	r3,r2,512
   2a23c:	183fdb1e 	bne	r3,zero,2a1ac <__alt_data_end+0xfffeadac>
   2a240:	10800094 	ori	r2,r2,2
   2a244:	80c010c4 	addi	r3,r16,67
   2a248:	8080030d 	sth	r2,12(r16)
   2a24c:	00800044 	movi	r2,1
   2a250:	80c00015 	stw	r3,0(r16)
   2a254:	80c00415 	stw	r3,16(r16)
   2a258:	80800515 	stw	r2,20(r16)
   2a25c:	003fd306 	br	2a1ac <__alt_data_end+0xfffeadac>
   2a260:	04810004 	movi	r18,1024
   2a264:	003fc306 	br	2a174 <__alt_data_end+0xfffead74>
   2a268:	0027883a 	mov	r19,zero
   2a26c:	04810004 	movi	r18,1024
   2a270:	003fc006 	br	2a174 <__alt_data_end+0xfffead74>

0002a274 <_malloc_r>:
   2a274:	defff504 	addi	sp,sp,-44
   2a278:	dc800315 	stw	r18,12(sp)
   2a27c:	dfc00a15 	stw	ra,40(sp)
   2a280:	df000915 	stw	fp,36(sp)
   2a284:	ddc00815 	stw	r23,32(sp)
   2a288:	dd800715 	stw	r22,28(sp)
   2a28c:	dd400615 	stw	r21,24(sp)
   2a290:	dd000515 	stw	r20,20(sp)
   2a294:	dcc00415 	stw	r19,16(sp)
   2a298:	dc400215 	stw	r17,8(sp)
   2a29c:	dc000115 	stw	r16,4(sp)
   2a2a0:	288002c4 	addi	r2,r5,11
   2a2a4:	00c00584 	movi	r3,22
   2a2a8:	2025883a 	mov	r18,r4
   2a2ac:	18807f2e 	bgeu	r3,r2,2a4ac <_malloc_r+0x238>
   2a2b0:	047ffe04 	movi	r17,-8
   2a2b4:	1462703a 	and	r17,r2,r17
   2a2b8:	8800a316 	blt	r17,zero,2a548 <_malloc_r+0x2d4>
   2a2bc:	8940a236 	bltu	r17,r5,2a548 <_malloc_r+0x2d4>
   2a2c0:	002fd9c0 	call	2fd9c <__malloc_lock>
   2a2c4:	00807dc4 	movi	r2,503
   2a2c8:	1441e92e 	bgeu	r2,r17,2aa70 <_malloc_r+0x7fc>
   2a2cc:	8804d27a 	srli	r2,r17,9
   2a2d0:	1000a126 	beq	r2,zero,2a558 <_malloc_r+0x2e4>
   2a2d4:	00c00104 	movi	r3,4
   2a2d8:	18811e36 	bltu	r3,r2,2a754 <_malloc_r+0x4e0>
   2a2dc:	8804d1ba 	srli	r2,r17,6
   2a2e0:	12000e44 	addi	r8,r2,57
   2a2e4:	11c00e04 	addi	r7,r2,56
   2a2e8:	4209883a 	add	r4,r8,r8
   2a2ec:	04c000f4 	movhi	r19,3
   2a2f0:	2109883a 	add	r4,r4,r4
   2a2f4:	9cca8d04 	addi	r19,r19,10804
   2a2f8:	2109883a 	add	r4,r4,r4
   2a2fc:	9909883a 	add	r4,r19,r4
   2a300:	24000117 	ldw	r16,4(r4)
   2a304:	213ffe04 	addi	r4,r4,-8
   2a308:	24009726 	beq	r4,r16,2a568 <_malloc_r+0x2f4>
   2a30c:	80800117 	ldw	r2,4(r16)
   2a310:	01bfff04 	movi	r6,-4
   2a314:	014003c4 	movi	r5,15
   2a318:	1184703a 	and	r2,r2,r6
   2a31c:	1447c83a 	sub	r3,r2,r17
   2a320:	28c00716 	blt	r5,r3,2a340 <_malloc_r+0xcc>
   2a324:	1800920e 	bge	r3,zero,2a570 <_malloc_r+0x2fc>
   2a328:	84000317 	ldw	r16,12(r16)
   2a32c:	24008e26 	beq	r4,r16,2a568 <_malloc_r+0x2f4>
   2a330:	80800117 	ldw	r2,4(r16)
   2a334:	1184703a 	and	r2,r2,r6
   2a338:	1447c83a 	sub	r3,r2,r17
   2a33c:	28fff90e 	bge	r5,r3,2a324 <__alt_data_end+0xfffeaf24>
   2a340:	3809883a 	mov	r4,r7
   2a344:	018000f4 	movhi	r6,3
   2a348:	9c000417 	ldw	r16,16(r19)
   2a34c:	318a8d04 	addi	r6,r6,10804
   2a350:	32000204 	addi	r8,r6,8
   2a354:	82013426 	beq	r16,r8,2a828 <_malloc_r+0x5b4>
   2a358:	80c00117 	ldw	r3,4(r16)
   2a35c:	00bfff04 	movi	r2,-4
   2a360:	188e703a 	and	r7,r3,r2
   2a364:	3c45c83a 	sub	r2,r7,r17
   2a368:	00c003c4 	movi	r3,15
   2a36c:	18811f16 	blt	r3,r2,2a7ec <_malloc_r+0x578>
   2a370:	32000515 	stw	r8,20(r6)
   2a374:	32000415 	stw	r8,16(r6)
   2a378:	10007f0e 	bge	r2,zero,2a578 <_malloc_r+0x304>
   2a37c:	00807fc4 	movi	r2,511
   2a380:	11c0fd36 	bltu	r2,r7,2a778 <_malloc_r+0x504>
   2a384:	3806d0fa 	srli	r3,r7,3
   2a388:	01c00044 	movi	r7,1
   2a38c:	30800117 	ldw	r2,4(r6)
   2a390:	19400044 	addi	r5,r3,1
   2a394:	294b883a 	add	r5,r5,r5
   2a398:	1807d0ba 	srai	r3,r3,2
   2a39c:	294b883a 	add	r5,r5,r5
   2a3a0:	294b883a 	add	r5,r5,r5
   2a3a4:	298b883a 	add	r5,r5,r6
   2a3a8:	38c6983a 	sll	r3,r7,r3
   2a3ac:	29c00017 	ldw	r7,0(r5)
   2a3b0:	2a7ffe04 	addi	r9,r5,-8
   2a3b4:	1886b03a 	or	r3,r3,r2
   2a3b8:	82400315 	stw	r9,12(r16)
   2a3bc:	81c00215 	stw	r7,8(r16)
   2a3c0:	30c00115 	stw	r3,4(r6)
   2a3c4:	2c000015 	stw	r16,0(r5)
   2a3c8:	3c000315 	stw	r16,12(r7)
   2a3cc:	2005d0ba 	srai	r2,r4,2
   2a3d0:	01400044 	movi	r5,1
   2a3d4:	288a983a 	sll	r5,r5,r2
   2a3d8:	19406f36 	bltu	r3,r5,2a598 <_malloc_r+0x324>
   2a3dc:	28c4703a 	and	r2,r5,r3
   2a3e0:	10000a1e 	bne	r2,zero,2a40c <_malloc_r+0x198>
   2a3e4:	00bfff04 	movi	r2,-4
   2a3e8:	294b883a 	add	r5,r5,r5
   2a3ec:	2088703a 	and	r4,r4,r2
   2a3f0:	28c4703a 	and	r2,r5,r3
   2a3f4:	21000104 	addi	r4,r4,4
   2a3f8:	1000041e 	bne	r2,zero,2a40c <_malloc_r+0x198>
   2a3fc:	294b883a 	add	r5,r5,r5
   2a400:	28c4703a 	and	r2,r5,r3
   2a404:	21000104 	addi	r4,r4,4
   2a408:	103ffc26 	beq	r2,zero,2a3fc <__alt_data_end+0xfffeaffc>
   2a40c:	02bfff04 	movi	r10,-4
   2a410:	024003c4 	movi	r9,15
   2a414:	21800044 	addi	r6,r4,1
   2a418:	318d883a 	add	r6,r6,r6
   2a41c:	318d883a 	add	r6,r6,r6
   2a420:	318d883a 	add	r6,r6,r6
   2a424:	998d883a 	add	r6,r19,r6
   2a428:	333ffe04 	addi	r12,r6,-8
   2a42c:	2017883a 	mov	r11,r4
   2a430:	31800104 	addi	r6,r6,4
   2a434:	34000017 	ldw	r16,0(r6)
   2a438:	31fffd04 	addi	r7,r6,-12
   2a43c:	81c0041e 	bne	r16,r7,2a450 <_malloc_r+0x1dc>
   2a440:	0000fb06 	br	2a830 <_malloc_r+0x5bc>
   2a444:	1801030e 	bge	r3,zero,2a854 <_malloc_r+0x5e0>
   2a448:	84000317 	ldw	r16,12(r16)
   2a44c:	81c0f826 	beq	r16,r7,2a830 <_malloc_r+0x5bc>
   2a450:	80800117 	ldw	r2,4(r16)
   2a454:	1284703a 	and	r2,r2,r10
   2a458:	1447c83a 	sub	r3,r2,r17
   2a45c:	48fff90e 	bge	r9,r3,2a444 <__alt_data_end+0xfffeb044>
   2a460:	80800317 	ldw	r2,12(r16)
   2a464:	81000217 	ldw	r4,8(r16)
   2a468:	89400054 	ori	r5,r17,1
   2a46c:	81400115 	stw	r5,4(r16)
   2a470:	20800315 	stw	r2,12(r4)
   2a474:	11000215 	stw	r4,8(r2)
   2a478:	8463883a 	add	r17,r16,r17
   2a47c:	9c400515 	stw	r17,20(r19)
   2a480:	9c400415 	stw	r17,16(r19)
   2a484:	18800054 	ori	r2,r3,1
   2a488:	88800115 	stw	r2,4(r17)
   2a48c:	8a000315 	stw	r8,12(r17)
   2a490:	8a000215 	stw	r8,8(r17)
   2a494:	88e3883a 	add	r17,r17,r3
   2a498:	88c00015 	stw	r3,0(r17)
   2a49c:	9009883a 	mov	r4,r18
   2a4a0:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a4a4:	80800204 	addi	r2,r16,8
   2a4a8:	00001b06 	br	2a518 <_malloc_r+0x2a4>
   2a4ac:	04400404 	movi	r17,16
   2a4b0:	89402536 	bltu	r17,r5,2a548 <_malloc_r+0x2d4>
   2a4b4:	002fd9c0 	call	2fd9c <__malloc_lock>
   2a4b8:	00800184 	movi	r2,6
   2a4bc:	01000084 	movi	r4,2
   2a4c0:	04c000f4 	movhi	r19,3
   2a4c4:	1085883a 	add	r2,r2,r2
   2a4c8:	9cca8d04 	addi	r19,r19,10804
   2a4cc:	1085883a 	add	r2,r2,r2
   2a4d0:	9885883a 	add	r2,r19,r2
   2a4d4:	14000117 	ldw	r16,4(r2)
   2a4d8:	10fffe04 	addi	r3,r2,-8
   2a4dc:	80c0d926 	beq	r16,r3,2a844 <_malloc_r+0x5d0>
   2a4e0:	80c00117 	ldw	r3,4(r16)
   2a4e4:	81000317 	ldw	r4,12(r16)
   2a4e8:	00bfff04 	movi	r2,-4
   2a4ec:	1884703a 	and	r2,r3,r2
   2a4f0:	81400217 	ldw	r5,8(r16)
   2a4f4:	8085883a 	add	r2,r16,r2
   2a4f8:	10c00117 	ldw	r3,4(r2)
   2a4fc:	29000315 	stw	r4,12(r5)
   2a500:	21400215 	stw	r5,8(r4)
   2a504:	18c00054 	ori	r3,r3,1
   2a508:	10c00115 	stw	r3,4(r2)
   2a50c:	9009883a 	mov	r4,r18
   2a510:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a514:	80800204 	addi	r2,r16,8
   2a518:	dfc00a17 	ldw	ra,40(sp)
   2a51c:	df000917 	ldw	fp,36(sp)
   2a520:	ddc00817 	ldw	r23,32(sp)
   2a524:	dd800717 	ldw	r22,28(sp)
   2a528:	dd400617 	ldw	r21,24(sp)
   2a52c:	dd000517 	ldw	r20,20(sp)
   2a530:	dcc00417 	ldw	r19,16(sp)
   2a534:	dc800317 	ldw	r18,12(sp)
   2a538:	dc400217 	ldw	r17,8(sp)
   2a53c:	dc000117 	ldw	r16,4(sp)
   2a540:	dec00b04 	addi	sp,sp,44
   2a544:	f800283a 	ret
   2a548:	00800304 	movi	r2,12
   2a54c:	90800015 	stw	r2,0(r18)
   2a550:	0005883a 	mov	r2,zero
   2a554:	003ff006 	br	2a518 <__alt_data_end+0xfffeb118>
   2a558:	01002004 	movi	r4,128
   2a55c:	02001004 	movi	r8,64
   2a560:	01c00fc4 	movi	r7,63
   2a564:	003f6106 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a568:	4009883a 	mov	r4,r8
   2a56c:	003f7506 	br	2a344 <__alt_data_end+0xfffeaf44>
   2a570:	81000317 	ldw	r4,12(r16)
   2a574:	003fde06 	br	2a4f0 <__alt_data_end+0xfffeb0f0>
   2a578:	81c5883a 	add	r2,r16,r7
   2a57c:	11400117 	ldw	r5,4(r2)
   2a580:	9009883a 	mov	r4,r18
   2a584:	29400054 	ori	r5,r5,1
   2a588:	11400115 	stw	r5,4(r2)
   2a58c:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a590:	80800204 	addi	r2,r16,8
   2a594:	003fe006 	br	2a518 <__alt_data_end+0xfffeb118>
   2a598:	9c000217 	ldw	r16,8(r19)
   2a59c:	00bfff04 	movi	r2,-4
   2a5a0:	85800117 	ldw	r22,4(r16)
   2a5a4:	b0ac703a 	and	r22,r22,r2
   2a5a8:	b4400336 	bltu	r22,r17,2a5b8 <_malloc_r+0x344>
   2a5ac:	b445c83a 	sub	r2,r22,r17
   2a5b0:	00c003c4 	movi	r3,15
   2a5b4:	18805d16 	blt	r3,r2,2a72c <_malloc_r+0x4b8>
   2a5b8:	05c000f4 	movhi	r23,3
   2a5bc:	008000f4 	movhi	r2,3
   2a5c0:	1096fb04 	addi	r2,r2,23532
   2a5c4:	bdd02004 	addi	r23,r23,16512
   2a5c8:	15400017 	ldw	r21,0(r2)
   2a5cc:	b8c00017 	ldw	r3,0(r23)
   2a5d0:	00bfffc4 	movi	r2,-1
   2a5d4:	858d883a 	add	r6,r16,r22
   2a5d8:	8d6b883a 	add	r21,r17,r21
   2a5dc:	1880ea26 	beq	r3,r2,2a988 <_malloc_r+0x714>
   2a5e0:	ad4403c4 	addi	r21,r21,4111
   2a5e4:	00bc0004 	movi	r2,-4096
   2a5e8:	a8aa703a 	and	r21,r21,r2
   2a5ec:	a80b883a 	mov	r5,r21
   2a5f0:	9009883a 	mov	r4,r18
   2a5f4:	d9800015 	stw	r6,0(sp)
   2a5f8:	002be440 	call	2be44 <_sbrk_r>
   2a5fc:	1029883a 	mov	r20,r2
   2a600:	00bfffc4 	movi	r2,-1
   2a604:	d9800017 	ldw	r6,0(sp)
   2a608:	a080e826 	beq	r20,r2,2a9ac <_malloc_r+0x738>
   2a60c:	a180a636 	bltu	r20,r6,2a8a8 <_malloc_r+0x634>
   2a610:	070000f4 	movhi	fp,3
   2a614:	e7171304 	addi	fp,fp,23628
   2a618:	e0800017 	ldw	r2,0(fp)
   2a61c:	a887883a 	add	r3,r21,r2
   2a620:	e0c00015 	stw	r3,0(fp)
   2a624:	3500e626 	beq	r6,r20,2a9c0 <_malloc_r+0x74c>
   2a628:	b9000017 	ldw	r4,0(r23)
   2a62c:	00bfffc4 	movi	r2,-1
   2a630:	2080ee26 	beq	r4,r2,2a9ec <_malloc_r+0x778>
   2a634:	a185c83a 	sub	r2,r20,r6
   2a638:	10c5883a 	add	r2,r2,r3
   2a63c:	e0800015 	stw	r2,0(fp)
   2a640:	a0c001cc 	andi	r3,r20,7
   2a644:	1800bc26 	beq	r3,zero,2a938 <_malloc_r+0x6c4>
   2a648:	a0e9c83a 	sub	r20,r20,r3
   2a64c:	00840204 	movi	r2,4104
   2a650:	a5000204 	addi	r20,r20,8
   2a654:	10c7c83a 	sub	r3,r2,r3
   2a658:	a545883a 	add	r2,r20,r21
   2a65c:	1083ffcc 	andi	r2,r2,4095
   2a660:	18abc83a 	sub	r21,r3,r2
   2a664:	a80b883a 	mov	r5,r21
   2a668:	9009883a 	mov	r4,r18
   2a66c:	002be440 	call	2be44 <_sbrk_r>
   2a670:	00ffffc4 	movi	r3,-1
   2a674:	10c0e126 	beq	r2,r3,2a9fc <_malloc_r+0x788>
   2a678:	1505c83a 	sub	r2,r2,r20
   2a67c:	1545883a 	add	r2,r2,r21
   2a680:	10800054 	ori	r2,r2,1
   2a684:	e0c00017 	ldw	r3,0(fp)
   2a688:	9d000215 	stw	r20,8(r19)
   2a68c:	a0800115 	stw	r2,4(r20)
   2a690:	a8c7883a 	add	r3,r21,r3
   2a694:	e0c00015 	stw	r3,0(fp)
   2a698:	84c00e26 	beq	r16,r19,2a6d4 <_malloc_r+0x460>
   2a69c:	018003c4 	movi	r6,15
   2a6a0:	3580a72e 	bgeu	r6,r22,2a940 <_malloc_r+0x6cc>
   2a6a4:	81400117 	ldw	r5,4(r16)
   2a6a8:	013ffe04 	movi	r4,-8
   2a6ac:	b0bffd04 	addi	r2,r22,-12
   2a6b0:	1104703a 	and	r2,r2,r4
   2a6b4:	2900004c 	andi	r4,r5,1
   2a6b8:	2088b03a 	or	r4,r4,r2
   2a6bc:	81000115 	stw	r4,4(r16)
   2a6c0:	01400144 	movi	r5,5
   2a6c4:	8089883a 	add	r4,r16,r2
   2a6c8:	21400115 	stw	r5,4(r4)
   2a6cc:	21400215 	stw	r5,8(r4)
   2a6d0:	3080cd36 	bltu	r6,r2,2aa08 <_malloc_r+0x794>
   2a6d4:	008000f4 	movhi	r2,3
   2a6d8:	1096fa04 	addi	r2,r2,23528
   2a6dc:	11000017 	ldw	r4,0(r2)
   2a6e0:	20c0012e 	bgeu	r4,r3,2a6e8 <_malloc_r+0x474>
   2a6e4:	10c00015 	stw	r3,0(r2)
   2a6e8:	008000f4 	movhi	r2,3
   2a6ec:	1096f904 	addi	r2,r2,23524
   2a6f0:	11000017 	ldw	r4,0(r2)
   2a6f4:	9c000217 	ldw	r16,8(r19)
   2a6f8:	20c0012e 	bgeu	r4,r3,2a700 <_malloc_r+0x48c>
   2a6fc:	10c00015 	stw	r3,0(r2)
   2a700:	80c00117 	ldw	r3,4(r16)
   2a704:	00bfff04 	movi	r2,-4
   2a708:	1886703a 	and	r3,r3,r2
   2a70c:	1c45c83a 	sub	r2,r3,r17
   2a710:	1c400236 	bltu	r3,r17,2a71c <_malloc_r+0x4a8>
   2a714:	00c003c4 	movi	r3,15
   2a718:	18800416 	blt	r3,r2,2a72c <_malloc_r+0x4b8>
   2a71c:	9009883a 	mov	r4,r18
   2a720:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a724:	0005883a 	mov	r2,zero
   2a728:	003f7b06 	br	2a518 <__alt_data_end+0xfffeb118>
   2a72c:	88c00054 	ori	r3,r17,1
   2a730:	80c00115 	stw	r3,4(r16)
   2a734:	8463883a 	add	r17,r16,r17
   2a738:	10800054 	ori	r2,r2,1
   2a73c:	9c400215 	stw	r17,8(r19)
   2a740:	88800115 	stw	r2,4(r17)
   2a744:	9009883a 	mov	r4,r18
   2a748:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a74c:	80800204 	addi	r2,r16,8
   2a750:	003f7106 	br	2a518 <__alt_data_end+0xfffeb118>
   2a754:	00c00504 	movi	r3,20
   2a758:	18804a2e 	bgeu	r3,r2,2a884 <_malloc_r+0x610>
   2a75c:	00c01504 	movi	r3,84
   2a760:	18806e36 	bltu	r3,r2,2a91c <_malloc_r+0x6a8>
   2a764:	8804d33a 	srli	r2,r17,12
   2a768:	12001bc4 	addi	r8,r2,111
   2a76c:	11c01b84 	addi	r7,r2,110
   2a770:	4209883a 	add	r4,r8,r8
   2a774:	003edd06 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a778:	3804d27a 	srli	r2,r7,9
   2a77c:	00c00104 	movi	r3,4
   2a780:	1880442e 	bgeu	r3,r2,2a894 <_malloc_r+0x620>
   2a784:	00c00504 	movi	r3,20
   2a788:	18808136 	bltu	r3,r2,2a990 <_malloc_r+0x71c>
   2a78c:	11401704 	addi	r5,r2,92
   2a790:	10c016c4 	addi	r3,r2,91
   2a794:	294b883a 	add	r5,r5,r5
   2a798:	294b883a 	add	r5,r5,r5
   2a79c:	294b883a 	add	r5,r5,r5
   2a7a0:	994b883a 	add	r5,r19,r5
   2a7a4:	28800017 	ldw	r2,0(r5)
   2a7a8:	018000f4 	movhi	r6,3
   2a7ac:	297ffe04 	addi	r5,r5,-8
   2a7b0:	318a8d04 	addi	r6,r6,10804
   2a7b4:	28806526 	beq	r5,r2,2a94c <_malloc_r+0x6d8>
   2a7b8:	01bfff04 	movi	r6,-4
   2a7bc:	10c00117 	ldw	r3,4(r2)
   2a7c0:	1986703a 	and	r3,r3,r6
   2a7c4:	38c0022e 	bgeu	r7,r3,2a7d0 <_malloc_r+0x55c>
   2a7c8:	10800217 	ldw	r2,8(r2)
   2a7cc:	28bffb1e 	bne	r5,r2,2a7bc <__alt_data_end+0xfffeb3bc>
   2a7d0:	11400317 	ldw	r5,12(r2)
   2a7d4:	98c00117 	ldw	r3,4(r19)
   2a7d8:	81400315 	stw	r5,12(r16)
   2a7dc:	80800215 	stw	r2,8(r16)
   2a7e0:	2c000215 	stw	r16,8(r5)
   2a7e4:	14000315 	stw	r16,12(r2)
   2a7e8:	003ef806 	br	2a3cc <__alt_data_end+0xfffeafcc>
   2a7ec:	88c00054 	ori	r3,r17,1
   2a7f0:	80c00115 	stw	r3,4(r16)
   2a7f4:	8463883a 	add	r17,r16,r17
   2a7f8:	34400515 	stw	r17,20(r6)
   2a7fc:	34400415 	stw	r17,16(r6)
   2a800:	10c00054 	ori	r3,r2,1
   2a804:	8a000315 	stw	r8,12(r17)
   2a808:	8a000215 	stw	r8,8(r17)
   2a80c:	88c00115 	stw	r3,4(r17)
   2a810:	88a3883a 	add	r17,r17,r2
   2a814:	88800015 	stw	r2,0(r17)
   2a818:	9009883a 	mov	r4,r18
   2a81c:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a820:	80800204 	addi	r2,r16,8
   2a824:	003f3c06 	br	2a518 <__alt_data_end+0xfffeb118>
   2a828:	30c00117 	ldw	r3,4(r6)
   2a82c:	003ee706 	br	2a3cc <__alt_data_end+0xfffeafcc>
   2a830:	5ac00044 	addi	r11,r11,1
   2a834:	588000cc 	andi	r2,r11,3
   2a838:	31800204 	addi	r6,r6,8
   2a83c:	103efd1e 	bne	r2,zero,2a434 <__alt_data_end+0xfffeb034>
   2a840:	00002406 	br	2a8d4 <_malloc_r+0x660>
   2a844:	14000317 	ldw	r16,12(r2)
   2a848:	143f251e 	bne	r2,r16,2a4e0 <__alt_data_end+0xfffeb0e0>
   2a84c:	21000084 	addi	r4,r4,2
   2a850:	003ebc06 	br	2a344 <__alt_data_end+0xfffeaf44>
   2a854:	8085883a 	add	r2,r16,r2
   2a858:	10c00117 	ldw	r3,4(r2)
   2a85c:	81000317 	ldw	r4,12(r16)
   2a860:	81400217 	ldw	r5,8(r16)
   2a864:	18c00054 	ori	r3,r3,1
   2a868:	10c00115 	stw	r3,4(r2)
   2a86c:	29000315 	stw	r4,12(r5)
   2a870:	21400215 	stw	r5,8(r4)
   2a874:	9009883a 	mov	r4,r18
   2a878:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2a87c:	80800204 	addi	r2,r16,8
   2a880:	003f2506 	br	2a518 <__alt_data_end+0xfffeb118>
   2a884:	12001704 	addi	r8,r2,92
   2a888:	11c016c4 	addi	r7,r2,91
   2a88c:	4209883a 	add	r4,r8,r8
   2a890:	003e9606 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a894:	3804d1ba 	srli	r2,r7,6
   2a898:	11400e44 	addi	r5,r2,57
   2a89c:	10c00e04 	addi	r3,r2,56
   2a8a0:	294b883a 	add	r5,r5,r5
   2a8a4:	003fbc06 	br	2a798 <__alt_data_end+0xfffeb398>
   2a8a8:	84ff5926 	beq	r16,r19,2a610 <__alt_data_end+0xfffeb210>
   2a8ac:	008000f4 	movhi	r2,3
   2a8b0:	108a8d04 	addi	r2,r2,10804
   2a8b4:	14000217 	ldw	r16,8(r2)
   2a8b8:	00bfff04 	movi	r2,-4
   2a8bc:	80c00117 	ldw	r3,4(r16)
   2a8c0:	1886703a 	and	r3,r3,r2
   2a8c4:	003f9106 	br	2a70c <__alt_data_end+0xfffeb30c>
   2a8c8:	60800217 	ldw	r2,8(r12)
   2a8cc:	213fffc4 	addi	r4,r4,-1
   2a8d0:	1300651e 	bne	r2,r12,2aa68 <_malloc_r+0x7f4>
   2a8d4:	208000cc 	andi	r2,r4,3
   2a8d8:	633ffe04 	addi	r12,r12,-8
   2a8dc:	103ffa1e 	bne	r2,zero,2a8c8 <__alt_data_end+0xfffeb4c8>
   2a8e0:	98800117 	ldw	r2,4(r19)
   2a8e4:	0146303a 	nor	r3,zero,r5
   2a8e8:	1884703a 	and	r2,r3,r2
   2a8ec:	98800115 	stw	r2,4(r19)
   2a8f0:	294b883a 	add	r5,r5,r5
   2a8f4:	117f2836 	bltu	r2,r5,2a598 <__alt_data_end+0xfffeb198>
   2a8f8:	283f2726 	beq	r5,zero,2a598 <__alt_data_end+0xfffeb198>
   2a8fc:	2886703a 	and	r3,r5,r2
   2a900:	5809883a 	mov	r4,r11
   2a904:	183ec31e 	bne	r3,zero,2a414 <__alt_data_end+0xfffeb014>
   2a908:	294b883a 	add	r5,r5,r5
   2a90c:	2886703a 	and	r3,r5,r2
   2a910:	21000104 	addi	r4,r4,4
   2a914:	183ffc26 	beq	r3,zero,2a908 <__alt_data_end+0xfffeb508>
   2a918:	003ebe06 	br	2a414 <__alt_data_end+0xfffeb014>
   2a91c:	00c05504 	movi	r3,340
   2a920:	18801236 	bltu	r3,r2,2a96c <_malloc_r+0x6f8>
   2a924:	8804d3fa 	srli	r2,r17,15
   2a928:	12001e04 	addi	r8,r2,120
   2a92c:	11c01dc4 	addi	r7,r2,119
   2a930:	4209883a 	add	r4,r8,r8
   2a934:	003e6d06 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a938:	00c40004 	movi	r3,4096
   2a93c:	003f4606 	br	2a658 <__alt_data_end+0xfffeb258>
   2a940:	00800044 	movi	r2,1
   2a944:	a0800115 	stw	r2,4(r20)
   2a948:	003f7406 	br	2a71c <__alt_data_end+0xfffeb31c>
   2a94c:	1805d0ba 	srai	r2,r3,2
   2a950:	01c00044 	movi	r7,1
   2a954:	30c00117 	ldw	r3,4(r6)
   2a958:	388e983a 	sll	r7,r7,r2
   2a95c:	2805883a 	mov	r2,r5
   2a960:	38c6b03a 	or	r3,r7,r3
   2a964:	30c00115 	stw	r3,4(r6)
   2a968:	003f9b06 	br	2a7d8 <__alt_data_end+0xfffeb3d8>
   2a96c:	00c15504 	movi	r3,1364
   2a970:	18801a36 	bltu	r3,r2,2a9dc <_malloc_r+0x768>
   2a974:	8804d4ba 	srli	r2,r17,18
   2a978:	12001f44 	addi	r8,r2,125
   2a97c:	11c01f04 	addi	r7,r2,124
   2a980:	4209883a 	add	r4,r8,r8
   2a984:	003e5906 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a988:	ad400404 	addi	r21,r21,16
   2a98c:	003f1706 	br	2a5ec <__alt_data_end+0xfffeb1ec>
   2a990:	00c01504 	movi	r3,84
   2a994:	18802336 	bltu	r3,r2,2aa24 <_malloc_r+0x7b0>
   2a998:	3804d33a 	srli	r2,r7,12
   2a99c:	11401bc4 	addi	r5,r2,111
   2a9a0:	10c01b84 	addi	r3,r2,110
   2a9a4:	294b883a 	add	r5,r5,r5
   2a9a8:	003f7b06 	br	2a798 <__alt_data_end+0xfffeb398>
   2a9ac:	9c000217 	ldw	r16,8(r19)
   2a9b0:	00bfff04 	movi	r2,-4
   2a9b4:	80c00117 	ldw	r3,4(r16)
   2a9b8:	1886703a 	and	r3,r3,r2
   2a9bc:	003f5306 	br	2a70c <__alt_data_end+0xfffeb30c>
   2a9c0:	3083ffcc 	andi	r2,r6,4095
   2a9c4:	103f181e 	bne	r2,zero,2a628 <__alt_data_end+0xfffeb228>
   2a9c8:	99000217 	ldw	r4,8(r19)
   2a9cc:	b545883a 	add	r2,r22,r21
   2a9d0:	10800054 	ori	r2,r2,1
   2a9d4:	20800115 	stw	r2,4(r4)
   2a9d8:	003f3e06 	br	2a6d4 <__alt_data_end+0xfffeb2d4>
   2a9dc:	01003f84 	movi	r4,254
   2a9e0:	02001fc4 	movi	r8,127
   2a9e4:	01c01f84 	movi	r7,126
   2a9e8:	003e4006 	br	2a2ec <__alt_data_end+0xfffeaeec>
   2a9ec:	008000f4 	movhi	r2,3
   2a9f0:	10902004 	addi	r2,r2,16512
   2a9f4:	15000015 	stw	r20,0(r2)
   2a9f8:	003f1106 	br	2a640 <__alt_data_end+0xfffeb240>
   2a9fc:	00800044 	movi	r2,1
   2aa00:	002b883a 	mov	r21,zero
   2aa04:	003f1f06 	br	2a684 <__alt_data_end+0xfffeb284>
   2aa08:	81400204 	addi	r5,r16,8
   2aa0c:	9009883a 	mov	r4,r18
   2aa10:	0029b440 	call	29b44 <_free_r>
   2aa14:	008000f4 	movhi	r2,3
   2aa18:	10971304 	addi	r2,r2,23628
   2aa1c:	10c00017 	ldw	r3,0(r2)
   2aa20:	003f2c06 	br	2a6d4 <__alt_data_end+0xfffeb2d4>
   2aa24:	00c05504 	movi	r3,340
   2aa28:	18800536 	bltu	r3,r2,2aa40 <_malloc_r+0x7cc>
   2aa2c:	3804d3fa 	srli	r2,r7,15
   2aa30:	11401e04 	addi	r5,r2,120
   2aa34:	10c01dc4 	addi	r3,r2,119
   2aa38:	294b883a 	add	r5,r5,r5
   2aa3c:	003f5606 	br	2a798 <__alt_data_end+0xfffeb398>
   2aa40:	00c15504 	movi	r3,1364
   2aa44:	18800536 	bltu	r3,r2,2aa5c <_malloc_r+0x7e8>
   2aa48:	3804d4ba 	srli	r2,r7,18
   2aa4c:	11401f44 	addi	r5,r2,125
   2aa50:	10c01f04 	addi	r3,r2,124
   2aa54:	294b883a 	add	r5,r5,r5
   2aa58:	003f4f06 	br	2a798 <__alt_data_end+0xfffeb398>
   2aa5c:	01403f84 	movi	r5,254
   2aa60:	00c01f84 	movi	r3,126
   2aa64:	003f4c06 	br	2a798 <__alt_data_end+0xfffeb398>
   2aa68:	98800117 	ldw	r2,4(r19)
   2aa6c:	003fa006 	br	2a8f0 <__alt_data_end+0xfffeb4f0>
   2aa70:	8808d0fa 	srli	r4,r17,3
   2aa74:	20800044 	addi	r2,r4,1
   2aa78:	1085883a 	add	r2,r2,r2
   2aa7c:	003e9006 	br	2a4c0 <__alt_data_end+0xfffeb0c0>

0002aa80 <memchr>:
   2aa80:	208000cc 	andi	r2,r4,3
   2aa84:	280f883a 	mov	r7,r5
   2aa88:	10003426 	beq	r2,zero,2ab5c <memchr+0xdc>
   2aa8c:	30bfffc4 	addi	r2,r6,-1
   2aa90:	30001a26 	beq	r6,zero,2aafc <memchr+0x7c>
   2aa94:	20c00003 	ldbu	r3,0(r4)
   2aa98:	29803fcc 	andi	r6,r5,255
   2aa9c:	30c0051e 	bne	r6,r3,2aab4 <memchr+0x34>
   2aaa0:	00001806 	br	2ab04 <memchr+0x84>
   2aaa4:	10001526 	beq	r2,zero,2aafc <memchr+0x7c>
   2aaa8:	20c00003 	ldbu	r3,0(r4)
   2aaac:	10bfffc4 	addi	r2,r2,-1
   2aab0:	30c01426 	beq	r6,r3,2ab04 <memchr+0x84>
   2aab4:	21000044 	addi	r4,r4,1
   2aab8:	20c000cc 	andi	r3,r4,3
   2aabc:	183ff91e 	bne	r3,zero,2aaa4 <__alt_data_end+0xfffeb6a4>
   2aac0:	020000c4 	movi	r8,3
   2aac4:	40801136 	bltu	r8,r2,2ab0c <memchr+0x8c>
   2aac8:	10000c26 	beq	r2,zero,2aafc <memchr+0x7c>
   2aacc:	20c00003 	ldbu	r3,0(r4)
   2aad0:	29403fcc 	andi	r5,r5,255
   2aad4:	28c00b26 	beq	r5,r3,2ab04 <memchr+0x84>
   2aad8:	20c00044 	addi	r3,r4,1
   2aadc:	39803fcc 	andi	r6,r7,255
   2aae0:	2089883a 	add	r4,r4,r2
   2aae4:	00000306 	br	2aaf4 <memchr+0x74>
   2aae8:	18c00044 	addi	r3,r3,1
   2aaec:	197fffc3 	ldbu	r5,-1(r3)
   2aaf0:	31400526 	beq	r6,r5,2ab08 <memchr+0x88>
   2aaf4:	1805883a 	mov	r2,r3
   2aaf8:	20fffb1e 	bne	r4,r3,2aae8 <__alt_data_end+0xfffeb6e8>
   2aafc:	0005883a 	mov	r2,zero
   2ab00:	f800283a 	ret
   2ab04:	2005883a 	mov	r2,r4
   2ab08:	f800283a 	ret
   2ab0c:	28c03fcc 	andi	r3,r5,255
   2ab10:	1812923a 	slli	r9,r3,8
   2ab14:	02ffbff4 	movhi	r11,65279
   2ab18:	02a02074 	movhi	r10,32897
   2ab1c:	48d2b03a 	or	r9,r9,r3
   2ab20:	4806943a 	slli	r3,r9,16
   2ab24:	5affbfc4 	addi	r11,r11,-257
   2ab28:	52a02004 	addi	r10,r10,-32640
   2ab2c:	48d2b03a 	or	r9,r9,r3
   2ab30:	20c00017 	ldw	r3,0(r4)
   2ab34:	48c6f03a 	xor	r3,r9,r3
   2ab38:	1acd883a 	add	r6,r3,r11
   2ab3c:	00c6303a 	nor	r3,zero,r3
   2ab40:	30c6703a 	and	r3,r6,r3
   2ab44:	1a86703a 	and	r3,r3,r10
   2ab48:	183fe01e 	bne	r3,zero,2aacc <__alt_data_end+0xfffeb6cc>
   2ab4c:	10bfff04 	addi	r2,r2,-4
   2ab50:	21000104 	addi	r4,r4,4
   2ab54:	40bff636 	bltu	r8,r2,2ab30 <__alt_data_end+0xfffeb730>
   2ab58:	003fdb06 	br	2aac8 <__alt_data_end+0xfffeb6c8>
   2ab5c:	3005883a 	mov	r2,r6
   2ab60:	003fd706 	br	2aac0 <__alt_data_end+0xfffeb6c0>

0002ab64 <memcpy>:
   2ab64:	defffd04 	addi	sp,sp,-12
   2ab68:	dfc00215 	stw	ra,8(sp)
   2ab6c:	dc400115 	stw	r17,4(sp)
   2ab70:	dc000015 	stw	r16,0(sp)
   2ab74:	00c003c4 	movi	r3,15
   2ab78:	2005883a 	mov	r2,r4
   2ab7c:	1980452e 	bgeu	r3,r6,2ac94 <memcpy+0x130>
   2ab80:	2906b03a 	or	r3,r5,r4
   2ab84:	18c000cc 	andi	r3,r3,3
   2ab88:	1800441e 	bne	r3,zero,2ac9c <memcpy+0x138>
   2ab8c:	347ffc04 	addi	r17,r6,-16
   2ab90:	8822d13a 	srli	r17,r17,4
   2ab94:	28c00104 	addi	r3,r5,4
   2ab98:	23400104 	addi	r13,r4,4
   2ab9c:	8820913a 	slli	r16,r17,4
   2aba0:	2b000204 	addi	r12,r5,8
   2aba4:	22c00204 	addi	r11,r4,8
   2aba8:	84000504 	addi	r16,r16,20
   2abac:	2a800304 	addi	r10,r5,12
   2abb0:	22400304 	addi	r9,r4,12
   2abb4:	2c21883a 	add	r16,r5,r16
   2abb8:	2811883a 	mov	r8,r5
   2abbc:	200f883a 	mov	r7,r4
   2abc0:	41000017 	ldw	r4,0(r8)
   2abc4:	1fc00017 	ldw	ra,0(r3)
   2abc8:	63c00017 	ldw	r15,0(r12)
   2abcc:	39000015 	stw	r4,0(r7)
   2abd0:	53800017 	ldw	r14,0(r10)
   2abd4:	6fc00015 	stw	ra,0(r13)
   2abd8:	5bc00015 	stw	r15,0(r11)
   2abdc:	4b800015 	stw	r14,0(r9)
   2abe0:	18c00404 	addi	r3,r3,16
   2abe4:	39c00404 	addi	r7,r7,16
   2abe8:	42000404 	addi	r8,r8,16
   2abec:	6b400404 	addi	r13,r13,16
   2abf0:	63000404 	addi	r12,r12,16
   2abf4:	5ac00404 	addi	r11,r11,16
   2abf8:	52800404 	addi	r10,r10,16
   2abfc:	4a400404 	addi	r9,r9,16
   2ac00:	1c3fef1e 	bne	r3,r16,2abc0 <__alt_data_end+0xfffeb7c0>
   2ac04:	89c00044 	addi	r7,r17,1
   2ac08:	380e913a 	slli	r7,r7,4
   2ac0c:	310003cc 	andi	r4,r6,15
   2ac10:	02c000c4 	movi	r11,3
   2ac14:	11c7883a 	add	r3,r2,r7
   2ac18:	29cb883a 	add	r5,r5,r7
   2ac1c:	5900212e 	bgeu	r11,r4,2aca4 <memcpy+0x140>
   2ac20:	1813883a 	mov	r9,r3
   2ac24:	2811883a 	mov	r8,r5
   2ac28:	200f883a 	mov	r7,r4
   2ac2c:	42800017 	ldw	r10,0(r8)
   2ac30:	4a400104 	addi	r9,r9,4
   2ac34:	39ffff04 	addi	r7,r7,-4
   2ac38:	4abfff15 	stw	r10,-4(r9)
   2ac3c:	42000104 	addi	r8,r8,4
   2ac40:	59fffa36 	bltu	r11,r7,2ac2c <__alt_data_end+0xfffeb82c>
   2ac44:	213fff04 	addi	r4,r4,-4
   2ac48:	2008d0ba 	srli	r4,r4,2
   2ac4c:	318000cc 	andi	r6,r6,3
   2ac50:	21000044 	addi	r4,r4,1
   2ac54:	2109883a 	add	r4,r4,r4
   2ac58:	2109883a 	add	r4,r4,r4
   2ac5c:	1907883a 	add	r3,r3,r4
   2ac60:	290b883a 	add	r5,r5,r4
   2ac64:	30000626 	beq	r6,zero,2ac80 <memcpy+0x11c>
   2ac68:	198d883a 	add	r6,r3,r6
   2ac6c:	29c00003 	ldbu	r7,0(r5)
   2ac70:	18c00044 	addi	r3,r3,1
   2ac74:	29400044 	addi	r5,r5,1
   2ac78:	19ffffc5 	stb	r7,-1(r3)
   2ac7c:	19bffb1e 	bne	r3,r6,2ac6c <__alt_data_end+0xfffeb86c>
   2ac80:	dfc00217 	ldw	ra,8(sp)
   2ac84:	dc400117 	ldw	r17,4(sp)
   2ac88:	dc000017 	ldw	r16,0(sp)
   2ac8c:	dec00304 	addi	sp,sp,12
   2ac90:	f800283a 	ret
   2ac94:	2007883a 	mov	r3,r4
   2ac98:	003ff206 	br	2ac64 <__alt_data_end+0xfffeb864>
   2ac9c:	2007883a 	mov	r3,r4
   2aca0:	003ff106 	br	2ac68 <__alt_data_end+0xfffeb868>
   2aca4:	200d883a 	mov	r6,r4
   2aca8:	003fee06 	br	2ac64 <__alt_data_end+0xfffeb864>

0002acac <memset>:
   2acac:	20c000cc 	andi	r3,r4,3
   2acb0:	2005883a 	mov	r2,r4
   2acb4:	18004426 	beq	r3,zero,2adc8 <memset+0x11c>
   2acb8:	31ffffc4 	addi	r7,r6,-1
   2acbc:	30004026 	beq	r6,zero,2adc0 <memset+0x114>
   2acc0:	2813883a 	mov	r9,r5
   2acc4:	200d883a 	mov	r6,r4
   2acc8:	2007883a 	mov	r3,r4
   2accc:	00000406 	br	2ace0 <memset+0x34>
   2acd0:	3a3fffc4 	addi	r8,r7,-1
   2acd4:	31800044 	addi	r6,r6,1
   2acd8:	38003926 	beq	r7,zero,2adc0 <memset+0x114>
   2acdc:	400f883a 	mov	r7,r8
   2ace0:	18c00044 	addi	r3,r3,1
   2ace4:	32400005 	stb	r9,0(r6)
   2ace8:	1a0000cc 	andi	r8,r3,3
   2acec:	403ff81e 	bne	r8,zero,2acd0 <__alt_data_end+0xfffeb8d0>
   2acf0:	010000c4 	movi	r4,3
   2acf4:	21c02d2e 	bgeu	r4,r7,2adac <memset+0x100>
   2acf8:	29003fcc 	andi	r4,r5,255
   2acfc:	200c923a 	slli	r6,r4,8
   2ad00:	3108b03a 	or	r4,r6,r4
   2ad04:	200c943a 	slli	r6,r4,16
   2ad08:	218cb03a 	or	r6,r4,r6
   2ad0c:	010003c4 	movi	r4,15
   2ad10:	21c0182e 	bgeu	r4,r7,2ad74 <memset+0xc8>
   2ad14:	3b3ffc04 	addi	r12,r7,-16
   2ad18:	6018d13a 	srli	r12,r12,4
   2ad1c:	1a000104 	addi	r8,r3,4
   2ad20:	1ac00204 	addi	r11,r3,8
   2ad24:	6008913a 	slli	r4,r12,4
   2ad28:	1a800304 	addi	r10,r3,12
   2ad2c:	1813883a 	mov	r9,r3
   2ad30:	21000504 	addi	r4,r4,20
   2ad34:	1909883a 	add	r4,r3,r4
   2ad38:	49800015 	stw	r6,0(r9)
   2ad3c:	41800015 	stw	r6,0(r8)
   2ad40:	59800015 	stw	r6,0(r11)
   2ad44:	51800015 	stw	r6,0(r10)
   2ad48:	42000404 	addi	r8,r8,16
   2ad4c:	4a400404 	addi	r9,r9,16
   2ad50:	5ac00404 	addi	r11,r11,16
   2ad54:	52800404 	addi	r10,r10,16
   2ad58:	413ff71e 	bne	r8,r4,2ad38 <__alt_data_end+0xfffeb938>
   2ad5c:	63000044 	addi	r12,r12,1
   2ad60:	6018913a 	slli	r12,r12,4
   2ad64:	39c003cc 	andi	r7,r7,15
   2ad68:	010000c4 	movi	r4,3
   2ad6c:	1b07883a 	add	r3,r3,r12
   2ad70:	21c00e2e 	bgeu	r4,r7,2adac <memset+0x100>
   2ad74:	1813883a 	mov	r9,r3
   2ad78:	3811883a 	mov	r8,r7
   2ad7c:	010000c4 	movi	r4,3
   2ad80:	49800015 	stw	r6,0(r9)
   2ad84:	423fff04 	addi	r8,r8,-4
   2ad88:	4a400104 	addi	r9,r9,4
   2ad8c:	223ffc36 	bltu	r4,r8,2ad80 <__alt_data_end+0xfffeb980>
   2ad90:	393fff04 	addi	r4,r7,-4
   2ad94:	2008d0ba 	srli	r4,r4,2
   2ad98:	39c000cc 	andi	r7,r7,3
   2ad9c:	21000044 	addi	r4,r4,1
   2ada0:	2109883a 	add	r4,r4,r4
   2ada4:	2109883a 	add	r4,r4,r4
   2ada8:	1907883a 	add	r3,r3,r4
   2adac:	38000526 	beq	r7,zero,2adc4 <memset+0x118>
   2adb0:	19cf883a 	add	r7,r3,r7
   2adb4:	19400005 	stb	r5,0(r3)
   2adb8:	18c00044 	addi	r3,r3,1
   2adbc:	38fffd1e 	bne	r7,r3,2adb4 <__alt_data_end+0xfffeb9b4>
   2adc0:	f800283a 	ret
   2adc4:	f800283a 	ret
   2adc8:	2007883a 	mov	r3,r4
   2adcc:	300f883a 	mov	r7,r6
   2add0:	003fc706 	br	2acf0 <__alt_data_end+0xfffeb8f0>

0002add4 <_Balloc>:
   2add4:	20801317 	ldw	r2,76(r4)
   2add8:	defffc04 	addi	sp,sp,-16
   2addc:	dc400115 	stw	r17,4(sp)
   2ade0:	dc000015 	stw	r16,0(sp)
   2ade4:	dfc00315 	stw	ra,12(sp)
   2ade8:	dc800215 	stw	r18,8(sp)
   2adec:	2023883a 	mov	r17,r4
   2adf0:	2821883a 	mov	r16,r5
   2adf4:	10000f26 	beq	r2,zero,2ae34 <_Balloc+0x60>
   2adf8:	8407883a 	add	r3,r16,r16
   2adfc:	18c7883a 	add	r3,r3,r3
   2ae00:	10c7883a 	add	r3,r2,r3
   2ae04:	18800017 	ldw	r2,0(r3)
   2ae08:	10001126 	beq	r2,zero,2ae50 <_Balloc+0x7c>
   2ae0c:	11000017 	ldw	r4,0(r2)
   2ae10:	19000015 	stw	r4,0(r3)
   2ae14:	10000415 	stw	zero,16(r2)
   2ae18:	10000315 	stw	zero,12(r2)
   2ae1c:	dfc00317 	ldw	ra,12(sp)
   2ae20:	dc800217 	ldw	r18,8(sp)
   2ae24:	dc400117 	ldw	r17,4(sp)
   2ae28:	dc000017 	ldw	r16,0(sp)
   2ae2c:	dec00404 	addi	sp,sp,16
   2ae30:	f800283a 	ret
   2ae34:	01800844 	movi	r6,33
   2ae38:	01400104 	movi	r5,4
   2ae3c:	002d8440 	call	2d844 <_calloc_r>
   2ae40:	88801315 	stw	r2,76(r17)
   2ae44:	103fec1e 	bne	r2,zero,2adf8 <__alt_data_end+0xfffeb9f8>
   2ae48:	0005883a 	mov	r2,zero
   2ae4c:	003ff306 	br	2ae1c <__alt_data_end+0xfffeba1c>
   2ae50:	01400044 	movi	r5,1
   2ae54:	2c24983a 	sll	r18,r5,r16
   2ae58:	8809883a 	mov	r4,r17
   2ae5c:	91800144 	addi	r6,r18,5
   2ae60:	318d883a 	add	r6,r6,r6
   2ae64:	318d883a 	add	r6,r6,r6
   2ae68:	002d8440 	call	2d844 <_calloc_r>
   2ae6c:	103ff626 	beq	r2,zero,2ae48 <__alt_data_end+0xfffeba48>
   2ae70:	14000115 	stw	r16,4(r2)
   2ae74:	14800215 	stw	r18,8(r2)
   2ae78:	003fe606 	br	2ae14 <__alt_data_end+0xfffeba14>

0002ae7c <_Bfree>:
   2ae7c:	28000826 	beq	r5,zero,2aea0 <_Bfree+0x24>
   2ae80:	28c00117 	ldw	r3,4(r5)
   2ae84:	20801317 	ldw	r2,76(r4)
   2ae88:	18c7883a 	add	r3,r3,r3
   2ae8c:	18c7883a 	add	r3,r3,r3
   2ae90:	10c5883a 	add	r2,r2,r3
   2ae94:	10c00017 	ldw	r3,0(r2)
   2ae98:	28c00015 	stw	r3,0(r5)
   2ae9c:	11400015 	stw	r5,0(r2)
   2aea0:	f800283a 	ret

0002aea4 <__multadd>:
   2aea4:	defffa04 	addi	sp,sp,-24
   2aea8:	dc800315 	stw	r18,12(sp)
   2aeac:	dc400215 	stw	r17,8(sp)
   2aeb0:	dc000115 	stw	r16,4(sp)
   2aeb4:	2823883a 	mov	r17,r5
   2aeb8:	2c000417 	ldw	r16,16(r5)
   2aebc:	dfc00515 	stw	ra,20(sp)
   2aec0:	dcc00415 	stw	r19,16(sp)
   2aec4:	2025883a 	mov	r18,r4
   2aec8:	29400504 	addi	r5,r5,20
   2aecc:	0011883a 	mov	r8,zero
   2aed0:	28c00017 	ldw	r3,0(r5)
   2aed4:	29400104 	addi	r5,r5,4
   2aed8:	42000044 	addi	r8,r8,1
   2aedc:	18bfffcc 	andi	r2,r3,65535
   2aee0:	1185383a 	mul	r2,r2,r6
   2aee4:	1806d43a 	srli	r3,r3,16
   2aee8:	11cf883a 	add	r7,r2,r7
   2aeec:	3808d43a 	srli	r4,r7,16
   2aef0:	1987383a 	mul	r3,r3,r6
   2aef4:	38bfffcc 	andi	r2,r7,65535
   2aef8:	1907883a 	add	r3,r3,r4
   2aefc:	1808943a 	slli	r4,r3,16
   2af00:	180ed43a 	srli	r7,r3,16
   2af04:	2085883a 	add	r2,r4,r2
   2af08:	28bfff15 	stw	r2,-4(r5)
   2af0c:	443ff016 	blt	r8,r16,2aed0 <__alt_data_end+0xfffebad0>
   2af10:	38000926 	beq	r7,zero,2af38 <__multadd+0x94>
   2af14:	88800217 	ldw	r2,8(r17)
   2af18:	80800f0e 	bge	r16,r2,2af58 <__multadd+0xb4>
   2af1c:	80800144 	addi	r2,r16,5
   2af20:	1085883a 	add	r2,r2,r2
   2af24:	1085883a 	add	r2,r2,r2
   2af28:	8885883a 	add	r2,r17,r2
   2af2c:	11c00015 	stw	r7,0(r2)
   2af30:	84000044 	addi	r16,r16,1
   2af34:	8c000415 	stw	r16,16(r17)
   2af38:	8805883a 	mov	r2,r17
   2af3c:	dfc00517 	ldw	ra,20(sp)
   2af40:	dcc00417 	ldw	r19,16(sp)
   2af44:	dc800317 	ldw	r18,12(sp)
   2af48:	dc400217 	ldw	r17,8(sp)
   2af4c:	dc000117 	ldw	r16,4(sp)
   2af50:	dec00604 	addi	sp,sp,24
   2af54:	f800283a 	ret
   2af58:	89400117 	ldw	r5,4(r17)
   2af5c:	9009883a 	mov	r4,r18
   2af60:	d9c00015 	stw	r7,0(sp)
   2af64:	29400044 	addi	r5,r5,1
   2af68:	002add40 	call	2add4 <_Balloc>
   2af6c:	89800417 	ldw	r6,16(r17)
   2af70:	89400304 	addi	r5,r17,12
   2af74:	11000304 	addi	r4,r2,12
   2af78:	31800084 	addi	r6,r6,2
   2af7c:	318d883a 	add	r6,r6,r6
   2af80:	318d883a 	add	r6,r6,r6
   2af84:	1027883a 	mov	r19,r2
   2af88:	002ab640 	call	2ab64 <memcpy>
   2af8c:	d9c00017 	ldw	r7,0(sp)
   2af90:	88000a26 	beq	r17,zero,2afbc <__multadd+0x118>
   2af94:	88c00117 	ldw	r3,4(r17)
   2af98:	90801317 	ldw	r2,76(r18)
   2af9c:	18c7883a 	add	r3,r3,r3
   2afa0:	18c7883a 	add	r3,r3,r3
   2afa4:	10c5883a 	add	r2,r2,r3
   2afa8:	10c00017 	ldw	r3,0(r2)
   2afac:	88c00015 	stw	r3,0(r17)
   2afb0:	14400015 	stw	r17,0(r2)
   2afb4:	9823883a 	mov	r17,r19
   2afb8:	003fd806 	br	2af1c <__alt_data_end+0xfffebb1c>
   2afbc:	9823883a 	mov	r17,r19
   2afc0:	003fd606 	br	2af1c <__alt_data_end+0xfffebb1c>

0002afc4 <__s2b>:
   2afc4:	defff904 	addi	sp,sp,-28
   2afc8:	dc400115 	stw	r17,4(sp)
   2afcc:	dc000015 	stw	r16,0(sp)
   2afd0:	2023883a 	mov	r17,r4
   2afd4:	2821883a 	mov	r16,r5
   2afd8:	39000204 	addi	r4,r7,8
   2afdc:	01400244 	movi	r5,9
   2afe0:	dcc00315 	stw	r19,12(sp)
   2afe4:	dc800215 	stw	r18,8(sp)
   2afe8:	dfc00615 	stw	ra,24(sp)
   2afec:	dd400515 	stw	r21,20(sp)
   2aff0:	dd000415 	stw	r20,16(sp)
   2aff4:	3825883a 	mov	r18,r7
   2aff8:	3027883a 	mov	r19,r6
   2affc:	00219c40 	call	219c4 <__divsi3>
   2b000:	00c00044 	movi	r3,1
   2b004:	000b883a 	mov	r5,zero
   2b008:	1880030e 	bge	r3,r2,2b018 <__s2b+0x54>
   2b00c:	18c7883a 	add	r3,r3,r3
   2b010:	29400044 	addi	r5,r5,1
   2b014:	18bffd16 	blt	r3,r2,2b00c <__alt_data_end+0xfffebc0c>
   2b018:	8809883a 	mov	r4,r17
   2b01c:	002add40 	call	2add4 <_Balloc>
   2b020:	d8c00717 	ldw	r3,28(sp)
   2b024:	10c00515 	stw	r3,20(r2)
   2b028:	00c00044 	movi	r3,1
   2b02c:	10c00415 	stw	r3,16(r2)
   2b030:	00c00244 	movi	r3,9
   2b034:	1cc0210e 	bge	r3,r19,2b0bc <__s2b+0xf8>
   2b038:	80eb883a 	add	r21,r16,r3
   2b03c:	a829883a 	mov	r20,r21
   2b040:	84e1883a 	add	r16,r16,r19
   2b044:	a1c00007 	ldb	r7,0(r20)
   2b048:	01800284 	movi	r6,10
   2b04c:	a5000044 	addi	r20,r20,1
   2b050:	100b883a 	mov	r5,r2
   2b054:	39fff404 	addi	r7,r7,-48
   2b058:	8809883a 	mov	r4,r17
   2b05c:	002aea40 	call	2aea4 <__multadd>
   2b060:	a43ff81e 	bne	r20,r16,2b044 <__alt_data_end+0xfffebc44>
   2b064:	ace1883a 	add	r16,r21,r19
   2b068:	843ffe04 	addi	r16,r16,-8
   2b06c:	9c800a0e 	bge	r19,r18,2b098 <__s2b+0xd4>
   2b070:	94e5c83a 	sub	r18,r18,r19
   2b074:	84a5883a 	add	r18,r16,r18
   2b078:	81c00007 	ldb	r7,0(r16)
   2b07c:	01800284 	movi	r6,10
   2b080:	84000044 	addi	r16,r16,1
   2b084:	100b883a 	mov	r5,r2
   2b088:	39fff404 	addi	r7,r7,-48
   2b08c:	8809883a 	mov	r4,r17
   2b090:	002aea40 	call	2aea4 <__multadd>
   2b094:	84bff81e 	bne	r16,r18,2b078 <__alt_data_end+0xfffebc78>
   2b098:	dfc00617 	ldw	ra,24(sp)
   2b09c:	dd400517 	ldw	r21,20(sp)
   2b0a0:	dd000417 	ldw	r20,16(sp)
   2b0a4:	dcc00317 	ldw	r19,12(sp)
   2b0a8:	dc800217 	ldw	r18,8(sp)
   2b0ac:	dc400117 	ldw	r17,4(sp)
   2b0b0:	dc000017 	ldw	r16,0(sp)
   2b0b4:	dec00704 	addi	sp,sp,28
   2b0b8:	f800283a 	ret
   2b0bc:	84000284 	addi	r16,r16,10
   2b0c0:	1827883a 	mov	r19,r3
   2b0c4:	003fe906 	br	2b06c <__alt_data_end+0xfffebc6c>

0002b0c8 <__hi0bits>:
   2b0c8:	20bfffec 	andhi	r2,r4,65535
   2b0cc:	1000141e 	bne	r2,zero,2b120 <__hi0bits+0x58>
   2b0d0:	2008943a 	slli	r4,r4,16
   2b0d4:	00800404 	movi	r2,16
   2b0d8:	20ffc02c 	andhi	r3,r4,65280
   2b0dc:	1800021e 	bne	r3,zero,2b0e8 <__hi0bits+0x20>
   2b0e0:	2008923a 	slli	r4,r4,8
   2b0e4:	10800204 	addi	r2,r2,8
   2b0e8:	20fc002c 	andhi	r3,r4,61440
   2b0ec:	1800021e 	bne	r3,zero,2b0f8 <__hi0bits+0x30>
   2b0f0:	2008913a 	slli	r4,r4,4
   2b0f4:	10800104 	addi	r2,r2,4
   2b0f8:	20f0002c 	andhi	r3,r4,49152
   2b0fc:	1800031e 	bne	r3,zero,2b10c <__hi0bits+0x44>
   2b100:	2109883a 	add	r4,r4,r4
   2b104:	10800084 	addi	r2,r2,2
   2b108:	2109883a 	add	r4,r4,r4
   2b10c:	20000316 	blt	r4,zero,2b11c <__hi0bits+0x54>
   2b110:	2110002c 	andhi	r4,r4,16384
   2b114:	2000041e 	bne	r4,zero,2b128 <__hi0bits+0x60>
   2b118:	00800804 	movi	r2,32
   2b11c:	f800283a 	ret
   2b120:	0005883a 	mov	r2,zero
   2b124:	003fec06 	br	2b0d8 <__alt_data_end+0xfffebcd8>
   2b128:	10800044 	addi	r2,r2,1
   2b12c:	f800283a 	ret

0002b130 <__lo0bits>:
   2b130:	20c00017 	ldw	r3,0(r4)
   2b134:	188001cc 	andi	r2,r3,7
   2b138:	10000826 	beq	r2,zero,2b15c <__lo0bits+0x2c>
   2b13c:	1880004c 	andi	r2,r3,1
   2b140:	1000211e 	bne	r2,zero,2b1c8 <__lo0bits+0x98>
   2b144:	1880008c 	andi	r2,r3,2
   2b148:	1000211e 	bne	r2,zero,2b1d0 <__lo0bits+0xa0>
   2b14c:	1806d0ba 	srli	r3,r3,2
   2b150:	00800084 	movi	r2,2
   2b154:	20c00015 	stw	r3,0(r4)
   2b158:	f800283a 	ret
   2b15c:	18bfffcc 	andi	r2,r3,65535
   2b160:	10001326 	beq	r2,zero,2b1b0 <__lo0bits+0x80>
   2b164:	0005883a 	mov	r2,zero
   2b168:	19403fcc 	andi	r5,r3,255
   2b16c:	2800021e 	bne	r5,zero,2b178 <__lo0bits+0x48>
   2b170:	1806d23a 	srli	r3,r3,8
   2b174:	10800204 	addi	r2,r2,8
   2b178:	194003cc 	andi	r5,r3,15
   2b17c:	2800021e 	bne	r5,zero,2b188 <__lo0bits+0x58>
   2b180:	1806d13a 	srli	r3,r3,4
   2b184:	10800104 	addi	r2,r2,4
   2b188:	194000cc 	andi	r5,r3,3
   2b18c:	2800021e 	bne	r5,zero,2b198 <__lo0bits+0x68>
   2b190:	1806d0ba 	srli	r3,r3,2
   2b194:	10800084 	addi	r2,r2,2
   2b198:	1940004c 	andi	r5,r3,1
   2b19c:	2800081e 	bne	r5,zero,2b1c0 <__lo0bits+0x90>
   2b1a0:	1806d07a 	srli	r3,r3,1
   2b1a4:	1800051e 	bne	r3,zero,2b1bc <__lo0bits+0x8c>
   2b1a8:	00800804 	movi	r2,32
   2b1ac:	f800283a 	ret
   2b1b0:	1806d43a 	srli	r3,r3,16
   2b1b4:	00800404 	movi	r2,16
   2b1b8:	003feb06 	br	2b168 <__alt_data_end+0xfffebd68>
   2b1bc:	10800044 	addi	r2,r2,1
   2b1c0:	20c00015 	stw	r3,0(r4)
   2b1c4:	f800283a 	ret
   2b1c8:	0005883a 	mov	r2,zero
   2b1cc:	f800283a 	ret
   2b1d0:	1806d07a 	srli	r3,r3,1
   2b1d4:	00800044 	movi	r2,1
   2b1d8:	20c00015 	stw	r3,0(r4)
   2b1dc:	f800283a 	ret

0002b1e0 <__i2b>:
   2b1e0:	defffd04 	addi	sp,sp,-12
   2b1e4:	dc000015 	stw	r16,0(sp)
   2b1e8:	04000044 	movi	r16,1
   2b1ec:	dc400115 	stw	r17,4(sp)
   2b1f0:	2823883a 	mov	r17,r5
   2b1f4:	800b883a 	mov	r5,r16
   2b1f8:	dfc00215 	stw	ra,8(sp)
   2b1fc:	002add40 	call	2add4 <_Balloc>
   2b200:	14400515 	stw	r17,20(r2)
   2b204:	14000415 	stw	r16,16(r2)
   2b208:	dfc00217 	ldw	ra,8(sp)
   2b20c:	dc400117 	ldw	r17,4(sp)
   2b210:	dc000017 	ldw	r16,0(sp)
   2b214:	dec00304 	addi	sp,sp,12
   2b218:	f800283a 	ret

0002b21c <__multiply>:
   2b21c:	defffa04 	addi	sp,sp,-24
   2b220:	dcc00315 	stw	r19,12(sp)
   2b224:	dc800215 	stw	r18,8(sp)
   2b228:	34c00417 	ldw	r19,16(r6)
   2b22c:	2c800417 	ldw	r18,16(r5)
   2b230:	dd000415 	stw	r20,16(sp)
   2b234:	dc400115 	stw	r17,4(sp)
   2b238:	dfc00515 	stw	ra,20(sp)
   2b23c:	dc000015 	stw	r16,0(sp)
   2b240:	2829883a 	mov	r20,r5
   2b244:	3023883a 	mov	r17,r6
   2b248:	94c0050e 	bge	r18,r19,2b260 <__multiply+0x44>
   2b24c:	9007883a 	mov	r3,r18
   2b250:	3029883a 	mov	r20,r6
   2b254:	9825883a 	mov	r18,r19
   2b258:	2823883a 	mov	r17,r5
   2b25c:	1827883a 	mov	r19,r3
   2b260:	a0800217 	ldw	r2,8(r20)
   2b264:	94e1883a 	add	r16,r18,r19
   2b268:	a1400117 	ldw	r5,4(r20)
   2b26c:	1400010e 	bge	r2,r16,2b274 <__multiply+0x58>
   2b270:	29400044 	addi	r5,r5,1
   2b274:	002add40 	call	2add4 <_Balloc>
   2b278:	8415883a 	add	r10,r16,r16
   2b27c:	12c00504 	addi	r11,r2,20
   2b280:	5295883a 	add	r10,r10,r10
   2b284:	5a95883a 	add	r10,r11,r10
   2b288:	5807883a 	mov	r3,r11
   2b28c:	5a80032e 	bgeu	r11,r10,2b29c <__multiply+0x80>
   2b290:	18000015 	stw	zero,0(r3)
   2b294:	18c00104 	addi	r3,r3,4
   2b298:	1abffd36 	bltu	r3,r10,2b290 <__alt_data_end+0xfffebe90>
   2b29c:	9ce7883a 	add	r19,r19,r19
   2b2a0:	94a5883a 	add	r18,r18,r18
   2b2a4:	89800504 	addi	r6,r17,20
   2b2a8:	9ce7883a 	add	r19,r19,r19
   2b2ac:	a3400504 	addi	r13,r20,20
   2b2b0:	94a5883a 	add	r18,r18,r18
   2b2b4:	34d9883a 	add	r12,r6,r19
   2b2b8:	6c93883a 	add	r9,r13,r18
   2b2bc:	3300422e 	bgeu	r6,r12,2b3c8 <__multiply+0x1ac>
   2b2c0:	37c00017 	ldw	ra,0(r6)
   2b2c4:	fbffffcc 	andi	r15,ra,65535
   2b2c8:	78001b26 	beq	r15,zero,2b338 <__multiply+0x11c>
   2b2cc:	5811883a 	mov	r8,r11
   2b2d0:	681d883a 	mov	r14,r13
   2b2d4:	000f883a 	mov	r7,zero
   2b2d8:	71000017 	ldw	r4,0(r14)
   2b2dc:	40c00017 	ldw	r3,0(r8)
   2b2e0:	73800104 	addi	r14,r14,4
   2b2e4:	217fffcc 	andi	r5,r4,65535
   2b2e8:	2bcb383a 	mul	r5,r5,r15
   2b2ec:	2008d43a 	srli	r4,r4,16
   2b2f0:	1c7fffcc 	andi	r17,r3,65535
   2b2f4:	2c4b883a 	add	r5,r5,r17
   2b2f8:	29cb883a 	add	r5,r5,r7
   2b2fc:	23c9383a 	mul	r4,r4,r15
   2b300:	1806d43a 	srli	r3,r3,16
   2b304:	280ed43a 	srli	r7,r5,16
   2b308:	297fffcc 	andi	r5,r5,65535
   2b30c:	20c7883a 	add	r3,r4,r3
   2b310:	19c7883a 	add	r3,r3,r7
   2b314:	1808943a 	slli	r4,r3,16
   2b318:	4023883a 	mov	r17,r8
   2b31c:	180ed43a 	srli	r7,r3,16
   2b320:	214ab03a 	or	r5,r4,r5
   2b324:	41400015 	stw	r5,0(r8)
   2b328:	42000104 	addi	r8,r8,4
   2b32c:	727fea36 	bltu	r14,r9,2b2d8 <__alt_data_end+0xfffebed8>
   2b330:	89c00115 	stw	r7,4(r17)
   2b334:	37c00017 	ldw	ra,0(r6)
   2b338:	f83ed43a 	srli	ra,ra,16
   2b33c:	f8001f26 	beq	ra,zero,2b3bc <__multiply+0x1a0>
   2b340:	58c00017 	ldw	r3,0(r11)
   2b344:	681d883a 	mov	r14,r13
   2b348:	581f883a 	mov	r15,r11
   2b34c:	1811883a 	mov	r8,r3
   2b350:	5825883a 	mov	r18,r11
   2b354:	000f883a 	mov	r7,zero
   2b358:	00000106 	br	2b360 <__multiply+0x144>
   2b35c:	8825883a 	mov	r18,r17
   2b360:	7140000b 	ldhu	r5,0(r14)
   2b364:	4010d43a 	srli	r8,r8,16
   2b368:	193fffcc 	andi	r4,r3,65535
   2b36c:	2fcb383a 	mul	r5,r5,ra
   2b370:	7bc00104 	addi	r15,r15,4
   2b374:	73800104 	addi	r14,r14,4
   2b378:	2a0b883a 	add	r5,r5,r8
   2b37c:	29cb883a 	add	r5,r5,r7
   2b380:	2806943a 	slli	r3,r5,16
   2b384:	94400104 	addi	r17,r18,4
   2b388:	280ad43a 	srli	r5,r5,16
   2b38c:	1908b03a 	or	r4,r3,r4
   2b390:	793fff15 	stw	r4,-4(r15)
   2b394:	70ffff17 	ldw	r3,-4(r14)
   2b398:	8a000017 	ldw	r8,0(r17)
   2b39c:	1806d43a 	srli	r3,r3,16
   2b3a0:	413fffcc 	andi	r4,r8,65535
   2b3a4:	1fc7383a 	mul	r3,r3,ra
   2b3a8:	1907883a 	add	r3,r3,r4
   2b3ac:	1947883a 	add	r3,r3,r5
   2b3b0:	180ed43a 	srli	r7,r3,16
   2b3b4:	727fe936 	bltu	r14,r9,2b35c <__alt_data_end+0xfffebf5c>
   2b3b8:	90c00115 	stw	r3,4(r18)
   2b3bc:	31800104 	addi	r6,r6,4
   2b3c0:	5ac00104 	addi	r11,r11,4
   2b3c4:	333fbe36 	bltu	r6,r12,2b2c0 <__alt_data_end+0xfffebec0>
   2b3c8:	0400090e 	bge	zero,r16,2b3f0 <__multiply+0x1d4>
   2b3cc:	50ffff17 	ldw	r3,-4(r10)
   2b3d0:	52bfff04 	addi	r10,r10,-4
   2b3d4:	18000326 	beq	r3,zero,2b3e4 <__multiply+0x1c8>
   2b3d8:	00000506 	br	2b3f0 <__multiply+0x1d4>
   2b3dc:	50c00017 	ldw	r3,0(r10)
   2b3e0:	1800031e 	bne	r3,zero,2b3f0 <__multiply+0x1d4>
   2b3e4:	843fffc4 	addi	r16,r16,-1
   2b3e8:	52bfff04 	addi	r10,r10,-4
   2b3ec:	803ffb1e 	bne	r16,zero,2b3dc <__alt_data_end+0xfffebfdc>
   2b3f0:	14000415 	stw	r16,16(r2)
   2b3f4:	dfc00517 	ldw	ra,20(sp)
   2b3f8:	dd000417 	ldw	r20,16(sp)
   2b3fc:	dcc00317 	ldw	r19,12(sp)
   2b400:	dc800217 	ldw	r18,8(sp)
   2b404:	dc400117 	ldw	r17,4(sp)
   2b408:	dc000017 	ldw	r16,0(sp)
   2b40c:	dec00604 	addi	sp,sp,24
   2b410:	f800283a 	ret

0002b414 <__pow5mult>:
   2b414:	defffa04 	addi	sp,sp,-24
   2b418:	dcc00315 	stw	r19,12(sp)
   2b41c:	dc000015 	stw	r16,0(sp)
   2b420:	dfc00515 	stw	ra,20(sp)
   2b424:	dd000415 	stw	r20,16(sp)
   2b428:	dc800215 	stw	r18,8(sp)
   2b42c:	dc400115 	stw	r17,4(sp)
   2b430:	308000cc 	andi	r2,r6,3
   2b434:	3021883a 	mov	r16,r6
   2b438:	2027883a 	mov	r19,r4
   2b43c:	10002f1e 	bne	r2,zero,2b4fc <__pow5mult+0xe8>
   2b440:	2825883a 	mov	r18,r5
   2b444:	8021d0ba 	srai	r16,r16,2
   2b448:	80001a26 	beq	r16,zero,2b4b4 <__pow5mult+0xa0>
   2b44c:	9c401217 	ldw	r17,72(r19)
   2b450:	8800061e 	bne	r17,zero,2b46c <__pow5mult+0x58>
   2b454:	00003406 	br	2b528 <__pow5mult+0x114>
   2b458:	8021d07a 	srai	r16,r16,1
   2b45c:	80001526 	beq	r16,zero,2b4b4 <__pow5mult+0xa0>
   2b460:	88800017 	ldw	r2,0(r17)
   2b464:	10001c26 	beq	r2,zero,2b4d8 <__pow5mult+0xc4>
   2b468:	1023883a 	mov	r17,r2
   2b46c:	8080004c 	andi	r2,r16,1
   2b470:	103ff926 	beq	r2,zero,2b458 <__alt_data_end+0xfffec058>
   2b474:	880d883a 	mov	r6,r17
   2b478:	900b883a 	mov	r5,r18
   2b47c:	9809883a 	mov	r4,r19
   2b480:	002b21c0 	call	2b21c <__multiply>
   2b484:	90001b26 	beq	r18,zero,2b4f4 <__pow5mult+0xe0>
   2b488:	91000117 	ldw	r4,4(r18)
   2b48c:	98c01317 	ldw	r3,76(r19)
   2b490:	8021d07a 	srai	r16,r16,1
   2b494:	2109883a 	add	r4,r4,r4
   2b498:	2109883a 	add	r4,r4,r4
   2b49c:	1907883a 	add	r3,r3,r4
   2b4a0:	19000017 	ldw	r4,0(r3)
   2b4a4:	91000015 	stw	r4,0(r18)
   2b4a8:	1c800015 	stw	r18,0(r3)
   2b4ac:	1025883a 	mov	r18,r2
   2b4b0:	803feb1e 	bne	r16,zero,2b460 <__alt_data_end+0xfffec060>
   2b4b4:	9005883a 	mov	r2,r18
   2b4b8:	dfc00517 	ldw	ra,20(sp)
   2b4bc:	dd000417 	ldw	r20,16(sp)
   2b4c0:	dcc00317 	ldw	r19,12(sp)
   2b4c4:	dc800217 	ldw	r18,8(sp)
   2b4c8:	dc400117 	ldw	r17,4(sp)
   2b4cc:	dc000017 	ldw	r16,0(sp)
   2b4d0:	dec00604 	addi	sp,sp,24
   2b4d4:	f800283a 	ret
   2b4d8:	880d883a 	mov	r6,r17
   2b4dc:	880b883a 	mov	r5,r17
   2b4e0:	9809883a 	mov	r4,r19
   2b4e4:	002b21c0 	call	2b21c <__multiply>
   2b4e8:	88800015 	stw	r2,0(r17)
   2b4ec:	10000015 	stw	zero,0(r2)
   2b4f0:	003fdd06 	br	2b468 <__alt_data_end+0xfffec068>
   2b4f4:	1025883a 	mov	r18,r2
   2b4f8:	003fd706 	br	2b458 <__alt_data_end+0xfffec058>
   2b4fc:	10bfffc4 	addi	r2,r2,-1
   2b500:	1085883a 	add	r2,r2,r2
   2b504:	00c000f4 	movhi	r3,3
   2b508:	18c90704 	addi	r3,r3,9244
   2b50c:	1085883a 	add	r2,r2,r2
   2b510:	1885883a 	add	r2,r3,r2
   2b514:	11800017 	ldw	r6,0(r2)
   2b518:	000f883a 	mov	r7,zero
   2b51c:	002aea40 	call	2aea4 <__multadd>
   2b520:	1025883a 	mov	r18,r2
   2b524:	003fc706 	br	2b444 <__alt_data_end+0xfffec044>
   2b528:	05000044 	movi	r20,1
   2b52c:	a00b883a 	mov	r5,r20
   2b530:	9809883a 	mov	r4,r19
   2b534:	002add40 	call	2add4 <_Balloc>
   2b538:	1023883a 	mov	r17,r2
   2b53c:	00809c44 	movi	r2,625
   2b540:	88800515 	stw	r2,20(r17)
   2b544:	8d000415 	stw	r20,16(r17)
   2b548:	9c401215 	stw	r17,72(r19)
   2b54c:	88000015 	stw	zero,0(r17)
   2b550:	003fc606 	br	2b46c <__alt_data_end+0xfffec06c>

0002b554 <__lshift>:
   2b554:	defff904 	addi	sp,sp,-28
   2b558:	dd400515 	stw	r21,20(sp)
   2b55c:	dcc00315 	stw	r19,12(sp)
   2b560:	302bd17a 	srai	r21,r6,5
   2b564:	2cc00417 	ldw	r19,16(r5)
   2b568:	28800217 	ldw	r2,8(r5)
   2b56c:	dd000415 	stw	r20,16(sp)
   2b570:	ace7883a 	add	r19,r21,r19
   2b574:	dc800215 	stw	r18,8(sp)
   2b578:	dc400115 	stw	r17,4(sp)
   2b57c:	dc000015 	stw	r16,0(sp)
   2b580:	dfc00615 	stw	ra,24(sp)
   2b584:	9c000044 	addi	r16,r19,1
   2b588:	2823883a 	mov	r17,r5
   2b58c:	3029883a 	mov	r20,r6
   2b590:	2025883a 	mov	r18,r4
   2b594:	29400117 	ldw	r5,4(r5)
   2b598:	1400030e 	bge	r2,r16,2b5a8 <__lshift+0x54>
   2b59c:	1085883a 	add	r2,r2,r2
   2b5a0:	29400044 	addi	r5,r5,1
   2b5a4:	143ffd16 	blt	r2,r16,2b59c <__alt_data_end+0xfffec19c>
   2b5a8:	9009883a 	mov	r4,r18
   2b5ac:	002add40 	call	2add4 <_Balloc>
   2b5b0:	10c00504 	addi	r3,r2,20
   2b5b4:	0540070e 	bge	zero,r21,2b5d4 <__lshift+0x80>
   2b5b8:	ad6b883a 	add	r21,r21,r21
   2b5bc:	ad6b883a 	add	r21,r21,r21
   2b5c0:	1809883a 	mov	r4,r3
   2b5c4:	1d47883a 	add	r3,r3,r21
   2b5c8:	20000015 	stw	zero,0(r4)
   2b5cc:	21000104 	addi	r4,r4,4
   2b5d0:	193ffd1e 	bne	r3,r4,2b5c8 <__alt_data_end+0xfffec1c8>
   2b5d4:	8a000417 	ldw	r8,16(r17)
   2b5d8:	89000504 	addi	r4,r17,20
   2b5dc:	a18007cc 	andi	r6,r20,31
   2b5e0:	4211883a 	add	r8,r8,r8
   2b5e4:	4211883a 	add	r8,r8,r8
   2b5e8:	2211883a 	add	r8,r4,r8
   2b5ec:	30002326 	beq	r6,zero,2b67c <__lshift+0x128>
   2b5f0:	02400804 	movi	r9,32
   2b5f4:	4993c83a 	sub	r9,r9,r6
   2b5f8:	000b883a 	mov	r5,zero
   2b5fc:	21c00017 	ldw	r7,0(r4)
   2b600:	1815883a 	mov	r10,r3
   2b604:	18c00104 	addi	r3,r3,4
   2b608:	398e983a 	sll	r7,r7,r6
   2b60c:	21000104 	addi	r4,r4,4
   2b610:	394ab03a 	or	r5,r7,r5
   2b614:	197fff15 	stw	r5,-4(r3)
   2b618:	217fff17 	ldw	r5,-4(r4)
   2b61c:	2a4ad83a 	srl	r5,r5,r9
   2b620:	223ff636 	bltu	r4,r8,2b5fc <__alt_data_end+0xfffec1fc>
   2b624:	51400115 	stw	r5,4(r10)
   2b628:	28001a1e 	bne	r5,zero,2b694 <__lshift+0x140>
   2b62c:	843fffc4 	addi	r16,r16,-1
   2b630:	14000415 	stw	r16,16(r2)
   2b634:	88000826 	beq	r17,zero,2b658 <__lshift+0x104>
   2b638:	89000117 	ldw	r4,4(r17)
   2b63c:	90c01317 	ldw	r3,76(r18)
   2b640:	2109883a 	add	r4,r4,r4
   2b644:	2109883a 	add	r4,r4,r4
   2b648:	1907883a 	add	r3,r3,r4
   2b64c:	19000017 	ldw	r4,0(r3)
   2b650:	89000015 	stw	r4,0(r17)
   2b654:	1c400015 	stw	r17,0(r3)
   2b658:	dfc00617 	ldw	ra,24(sp)
   2b65c:	dd400517 	ldw	r21,20(sp)
   2b660:	dd000417 	ldw	r20,16(sp)
   2b664:	dcc00317 	ldw	r19,12(sp)
   2b668:	dc800217 	ldw	r18,8(sp)
   2b66c:	dc400117 	ldw	r17,4(sp)
   2b670:	dc000017 	ldw	r16,0(sp)
   2b674:	dec00704 	addi	sp,sp,28
   2b678:	f800283a 	ret
   2b67c:	21400017 	ldw	r5,0(r4)
   2b680:	18c00104 	addi	r3,r3,4
   2b684:	21000104 	addi	r4,r4,4
   2b688:	197fff15 	stw	r5,-4(r3)
   2b68c:	223ffb36 	bltu	r4,r8,2b67c <__alt_data_end+0xfffec27c>
   2b690:	003fe606 	br	2b62c <__alt_data_end+0xfffec22c>
   2b694:	9c000084 	addi	r16,r19,2
   2b698:	003fe406 	br	2b62c <__alt_data_end+0xfffec22c>

0002b69c <__mcmp>:
   2b69c:	20800417 	ldw	r2,16(r4)
   2b6a0:	28c00417 	ldw	r3,16(r5)
   2b6a4:	10c5c83a 	sub	r2,r2,r3
   2b6a8:	1000111e 	bne	r2,zero,2b6f0 <__mcmp+0x54>
   2b6ac:	18c7883a 	add	r3,r3,r3
   2b6b0:	18c7883a 	add	r3,r3,r3
   2b6b4:	21000504 	addi	r4,r4,20
   2b6b8:	29400504 	addi	r5,r5,20
   2b6bc:	20c5883a 	add	r2,r4,r3
   2b6c0:	28cb883a 	add	r5,r5,r3
   2b6c4:	00000106 	br	2b6cc <__mcmp+0x30>
   2b6c8:	20800a2e 	bgeu	r4,r2,2b6f4 <__mcmp+0x58>
   2b6cc:	10bfff04 	addi	r2,r2,-4
   2b6d0:	297fff04 	addi	r5,r5,-4
   2b6d4:	11800017 	ldw	r6,0(r2)
   2b6d8:	28c00017 	ldw	r3,0(r5)
   2b6dc:	30fffa26 	beq	r6,r3,2b6c8 <__alt_data_end+0xfffec2c8>
   2b6e0:	30c00236 	bltu	r6,r3,2b6ec <__mcmp+0x50>
   2b6e4:	00800044 	movi	r2,1
   2b6e8:	f800283a 	ret
   2b6ec:	00bfffc4 	movi	r2,-1
   2b6f0:	f800283a 	ret
   2b6f4:	0005883a 	mov	r2,zero
   2b6f8:	f800283a 	ret

0002b6fc <__mdiff>:
   2b6fc:	28c00417 	ldw	r3,16(r5)
   2b700:	30800417 	ldw	r2,16(r6)
   2b704:	defffa04 	addi	sp,sp,-24
   2b708:	dcc00315 	stw	r19,12(sp)
   2b70c:	dc800215 	stw	r18,8(sp)
   2b710:	dfc00515 	stw	ra,20(sp)
   2b714:	dd000415 	stw	r20,16(sp)
   2b718:	dc400115 	stw	r17,4(sp)
   2b71c:	dc000015 	stw	r16,0(sp)
   2b720:	1887c83a 	sub	r3,r3,r2
   2b724:	2825883a 	mov	r18,r5
   2b728:	3027883a 	mov	r19,r6
   2b72c:	1800141e 	bne	r3,zero,2b780 <__mdiff+0x84>
   2b730:	1085883a 	add	r2,r2,r2
   2b734:	1085883a 	add	r2,r2,r2
   2b738:	2a000504 	addi	r8,r5,20
   2b73c:	34000504 	addi	r16,r6,20
   2b740:	4087883a 	add	r3,r8,r2
   2b744:	8085883a 	add	r2,r16,r2
   2b748:	00000106 	br	2b750 <__mdiff+0x54>
   2b74c:	40c0592e 	bgeu	r8,r3,2b8b4 <__mdiff+0x1b8>
   2b750:	18ffff04 	addi	r3,r3,-4
   2b754:	10bfff04 	addi	r2,r2,-4
   2b758:	19c00017 	ldw	r7,0(r3)
   2b75c:	11400017 	ldw	r5,0(r2)
   2b760:	397ffa26 	beq	r7,r5,2b74c <__alt_data_end+0xfffec34c>
   2b764:	3940592e 	bgeu	r7,r5,2b8cc <__mdiff+0x1d0>
   2b768:	9005883a 	mov	r2,r18
   2b76c:	4023883a 	mov	r17,r8
   2b770:	9825883a 	mov	r18,r19
   2b774:	05000044 	movi	r20,1
   2b778:	1027883a 	mov	r19,r2
   2b77c:	00000406 	br	2b790 <__mdiff+0x94>
   2b780:	18005616 	blt	r3,zero,2b8dc <__mdiff+0x1e0>
   2b784:	34400504 	addi	r17,r6,20
   2b788:	2c000504 	addi	r16,r5,20
   2b78c:	0029883a 	mov	r20,zero
   2b790:	91400117 	ldw	r5,4(r18)
   2b794:	002add40 	call	2add4 <_Balloc>
   2b798:	92400417 	ldw	r9,16(r18)
   2b79c:	9b000417 	ldw	r12,16(r19)
   2b7a0:	12c00504 	addi	r11,r2,20
   2b7a4:	4a51883a 	add	r8,r9,r9
   2b7a8:	6319883a 	add	r12,r12,r12
   2b7ac:	4211883a 	add	r8,r8,r8
   2b7b0:	6319883a 	add	r12,r12,r12
   2b7b4:	15000315 	stw	r20,12(r2)
   2b7b8:	8211883a 	add	r8,r16,r8
   2b7bc:	8b19883a 	add	r12,r17,r12
   2b7c0:	0007883a 	mov	r3,zero
   2b7c4:	81400017 	ldw	r5,0(r16)
   2b7c8:	89c00017 	ldw	r7,0(r17)
   2b7cc:	59800104 	addi	r6,r11,4
   2b7d0:	293fffcc 	andi	r4,r5,65535
   2b7d4:	20c7883a 	add	r3,r4,r3
   2b7d8:	393fffcc 	andi	r4,r7,65535
   2b7dc:	1909c83a 	sub	r4,r3,r4
   2b7e0:	280ad43a 	srli	r5,r5,16
   2b7e4:	380ed43a 	srli	r7,r7,16
   2b7e8:	2007d43a 	srai	r3,r4,16
   2b7ec:	213fffcc 	andi	r4,r4,65535
   2b7f0:	29cbc83a 	sub	r5,r5,r7
   2b7f4:	28c7883a 	add	r3,r5,r3
   2b7f8:	180a943a 	slli	r5,r3,16
   2b7fc:	8c400104 	addi	r17,r17,4
   2b800:	84000104 	addi	r16,r16,4
   2b804:	2908b03a 	or	r4,r5,r4
   2b808:	59000015 	stw	r4,0(r11)
   2b80c:	1807d43a 	srai	r3,r3,16
   2b810:	3015883a 	mov	r10,r6
   2b814:	3017883a 	mov	r11,r6
   2b818:	8b3fea36 	bltu	r17,r12,2b7c4 <__alt_data_end+0xfffec3c4>
   2b81c:	8200162e 	bgeu	r16,r8,2b878 <__mdiff+0x17c>
   2b820:	8017883a 	mov	r11,r16
   2b824:	59400017 	ldw	r5,0(r11)
   2b828:	31800104 	addi	r6,r6,4
   2b82c:	5ac00104 	addi	r11,r11,4
   2b830:	293fffcc 	andi	r4,r5,65535
   2b834:	20c7883a 	add	r3,r4,r3
   2b838:	280ed43a 	srli	r7,r5,16
   2b83c:	180bd43a 	srai	r5,r3,16
   2b840:	193fffcc 	andi	r4,r3,65535
   2b844:	3947883a 	add	r3,r7,r5
   2b848:	180a943a 	slli	r5,r3,16
   2b84c:	1807d43a 	srai	r3,r3,16
   2b850:	2908b03a 	or	r4,r5,r4
   2b854:	313fff15 	stw	r4,-4(r6)
   2b858:	5a3ff236 	bltu	r11,r8,2b824 <__alt_data_end+0xfffec424>
   2b85c:	0406303a 	nor	r3,zero,r16
   2b860:	1a07883a 	add	r3,r3,r8
   2b864:	1806d0ba 	srli	r3,r3,2
   2b868:	18c00044 	addi	r3,r3,1
   2b86c:	18c7883a 	add	r3,r3,r3
   2b870:	18c7883a 	add	r3,r3,r3
   2b874:	50d5883a 	add	r10,r10,r3
   2b878:	50ffff04 	addi	r3,r10,-4
   2b87c:	2000041e 	bne	r4,zero,2b890 <__mdiff+0x194>
   2b880:	18ffff04 	addi	r3,r3,-4
   2b884:	19000017 	ldw	r4,0(r3)
   2b888:	4a7fffc4 	addi	r9,r9,-1
   2b88c:	203ffc26 	beq	r4,zero,2b880 <__alt_data_end+0xfffec480>
   2b890:	12400415 	stw	r9,16(r2)
   2b894:	dfc00517 	ldw	ra,20(sp)
   2b898:	dd000417 	ldw	r20,16(sp)
   2b89c:	dcc00317 	ldw	r19,12(sp)
   2b8a0:	dc800217 	ldw	r18,8(sp)
   2b8a4:	dc400117 	ldw	r17,4(sp)
   2b8a8:	dc000017 	ldw	r16,0(sp)
   2b8ac:	dec00604 	addi	sp,sp,24
   2b8b0:	f800283a 	ret
   2b8b4:	000b883a 	mov	r5,zero
   2b8b8:	002add40 	call	2add4 <_Balloc>
   2b8bc:	00c00044 	movi	r3,1
   2b8c0:	10c00415 	stw	r3,16(r2)
   2b8c4:	10000515 	stw	zero,20(r2)
   2b8c8:	003ff206 	br	2b894 <__alt_data_end+0xfffec494>
   2b8cc:	8023883a 	mov	r17,r16
   2b8d0:	0029883a 	mov	r20,zero
   2b8d4:	4021883a 	mov	r16,r8
   2b8d8:	003fad06 	br	2b790 <__alt_data_end+0xfffec390>
   2b8dc:	9005883a 	mov	r2,r18
   2b8e0:	94400504 	addi	r17,r18,20
   2b8e4:	9c000504 	addi	r16,r19,20
   2b8e8:	9825883a 	mov	r18,r19
   2b8ec:	05000044 	movi	r20,1
   2b8f0:	1027883a 	mov	r19,r2
   2b8f4:	003fa606 	br	2b790 <__alt_data_end+0xfffec390>

0002b8f8 <__ulp>:
   2b8f8:	295ffc2c 	andhi	r5,r5,32752
   2b8fc:	00bf3034 	movhi	r2,64704
   2b900:	2887883a 	add	r3,r5,r2
   2b904:	00c0020e 	bge	zero,r3,2b910 <__ulp+0x18>
   2b908:	0005883a 	mov	r2,zero
   2b90c:	f800283a 	ret
   2b910:	00c7c83a 	sub	r3,zero,r3
   2b914:	1807d53a 	srai	r3,r3,20
   2b918:	008004c4 	movi	r2,19
   2b91c:	10c00b0e 	bge	r2,r3,2b94c <__ulp+0x54>
   2b920:	18bffb04 	addi	r2,r3,-20
   2b924:	01000784 	movi	r4,30
   2b928:	0007883a 	mov	r3,zero
   2b92c:	20800516 	blt	r4,r2,2b944 <__ulp+0x4c>
   2b930:	010007c4 	movi	r4,31
   2b934:	2089c83a 	sub	r4,r4,r2
   2b938:	00800044 	movi	r2,1
   2b93c:	1104983a 	sll	r2,r2,r4
   2b940:	f800283a 	ret
   2b944:	00800044 	movi	r2,1
   2b948:	f800283a 	ret
   2b94c:	01400234 	movhi	r5,8
   2b950:	28c7d83a 	sra	r3,r5,r3
   2b954:	0005883a 	mov	r2,zero
   2b958:	f800283a 	ret

0002b95c <__b2d>:
   2b95c:	defffa04 	addi	sp,sp,-24
   2b960:	dc000015 	stw	r16,0(sp)
   2b964:	24000417 	ldw	r16,16(r4)
   2b968:	dc400115 	stw	r17,4(sp)
   2b96c:	24400504 	addi	r17,r4,20
   2b970:	8421883a 	add	r16,r16,r16
   2b974:	8421883a 	add	r16,r16,r16
   2b978:	8c21883a 	add	r16,r17,r16
   2b97c:	dc800215 	stw	r18,8(sp)
   2b980:	84bfff17 	ldw	r18,-4(r16)
   2b984:	dd000415 	stw	r20,16(sp)
   2b988:	dcc00315 	stw	r19,12(sp)
   2b98c:	9009883a 	mov	r4,r18
   2b990:	2829883a 	mov	r20,r5
   2b994:	dfc00515 	stw	ra,20(sp)
   2b998:	002b0c80 	call	2b0c8 <__hi0bits>
   2b99c:	00c00804 	movi	r3,32
   2b9a0:	1889c83a 	sub	r4,r3,r2
   2b9a4:	a1000015 	stw	r4,0(r20)
   2b9a8:	01000284 	movi	r4,10
   2b9ac:	84ffff04 	addi	r19,r16,-4
   2b9b0:	20801216 	blt	r4,r2,2b9fc <__b2d+0xa0>
   2b9b4:	018002c4 	movi	r6,11
   2b9b8:	308dc83a 	sub	r6,r6,r2
   2b9bc:	9186d83a 	srl	r3,r18,r6
   2b9c0:	18cffc34 	orhi	r3,r3,16368
   2b9c4:	8cc0212e 	bgeu	r17,r19,2ba4c <__b2d+0xf0>
   2b9c8:	813ffe17 	ldw	r4,-8(r16)
   2b9cc:	218cd83a 	srl	r6,r4,r6
   2b9d0:	10800544 	addi	r2,r2,21
   2b9d4:	9084983a 	sll	r2,r18,r2
   2b9d8:	1184b03a 	or	r2,r2,r6
   2b9dc:	dfc00517 	ldw	ra,20(sp)
   2b9e0:	dd000417 	ldw	r20,16(sp)
   2b9e4:	dcc00317 	ldw	r19,12(sp)
   2b9e8:	dc800217 	ldw	r18,8(sp)
   2b9ec:	dc400117 	ldw	r17,4(sp)
   2b9f0:	dc000017 	ldw	r16,0(sp)
   2b9f4:	dec00604 	addi	sp,sp,24
   2b9f8:	f800283a 	ret
   2b9fc:	8cc00f2e 	bgeu	r17,r19,2ba3c <__b2d+0xe0>
   2ba00:	117ffd44 	addi	r5,r2,-11
   2ba04:	80bffe17 	ldw	r2,-8(r16)
   2ba08:	28000e26 	beq	r5,zero,2ba44 <__b2d+0xe8>
   2ba0c:	1949c83a 	sub	r4,r3,r5
   2ba10:	9164983a 	sll	r18,r18,r5
   2ba14:	1106d83a 	srl	r3,r2,r4
   2ba18:	81bffe04 	addi	r6,r16,-8
   2ba1c:	948ffc34 	orhi	r18,r18,16368
   2ba20:	90c6b03a 	or	r3,r18,r3
   2ba24:	89800e2e 	bgeu	r17,r6,2ba60 <__b2d+0x104>
   2ba28:	81bffd17 	ldw	r6,-12(r16)
   2ba2c:	1144983a 	sll	r2,r2,r5
   2ba30:	310ad83a 	srl	r5,r6,r4
   2ba34:	2884b03a 	or	r2,r5,r2
   2ba38:	003fe806 	br	2b9dc <__alt_data_end+0xfffec5dc>
   2ba3c:	10bffd44 	addi	r2,r2,-11
   2ba40:	1000041e 	bne	r2,zero,2ba54 <__b2d+0xf8>
   2ba44:	90cffc34 	orhi	r3,r18,16368
   2ba48:	003fe406 	br	2b9dc <__alt_data_end+0xfffec5dc>
   2ba4c:	000d883a 	mov	r6,zero
   2ba50:	003fdf06 	br	2b9d0 <__alt_data_end+0xfffec5d0>
   2ba54:	90a4983a 	sll	r18,r18,r2
   2ba58:	0005883a 	mov	r2,zero
   2ba5c:	003ff906 	br	2ba44 <__alt_data_end+0xfffec644>
   2ba60:	1144983a 	sll	r2,r2,r5
   2ba64:	003fdd06 	br	2b9dc <__alt_data_end+0xfffec5dc>

0002ba68 <__d2b>:
   2ba68:	defff804 	addi	sp,sp,-32
   2ba6c:	dc000215 	stw	r16,8(sp)
   2ba70:	3021883a 	mov	r16,r6
   2ba74:	dc400315 	stw	r17,12(sp)
   2ba78:	8022907a 	slli	r17,r16,1
   2ba7c:	dd000615 	stw	r20,24(sp)
   2ba80:	2829883a 	mov	r20,r5
   2ba84:	01400044 	movi	r5,1
   2ba88:	dcc00515 	stw	r19,20(sp)
   2ba8c:	dc800415 	stw	r18,16(sp)
   2ba90:	dfc00715 	stw	ra,28(sp)
   2ba94:	3825883a 	mov	r18,r7
   2ba98:	8822d57a 	srli	r17,r17,21
   2ba9c:	002add40 	call	2add4 <_Balloc>
   2baa0:	1027883a 	mov	r19,r2
   2baa4:	00800434 	movhi	r2,16
   2baa8:	10bfffc4 	addi	r2,r2,-1
   2baac:	808c703a 	and	r6,r16,r2
   2bab0:	88000126 	beq	r17,zero,2bab8 <__d2b+0x50>
   2bab4:	31800434 	orhi	r6,r6,16
   2bab8:	d9800015 	stw	r6,0(sp)
   2babc:	a0002426 	beq	r20,zero,2bb50 <__d2b+0xe8>
   2bac0:	d9000104 	addi	r4,sp,4
   2bac4:	dd000115 	stw	r20,4(sp)
   2bac8:	002b1300 	call	2b130 <__lo0bits>
   2bacc:	d8c00017 	ldw	r3,0(sp)
   2bad0:	10002f1e 	bne	r2,zero,2bb90 <__d2b+0x128>
   2bad4:	d9000117 	ldw	r4,4(sp)
   2bad8:	99000515 	stw	r4,20(r19)
   2badc:	1821003a 	cmpeq	r16,r3,zero
   2bae0:	01000084 	movi	r4,2
   2bae4:	2421c83a 	sub	r16,r4,r16
   2bae8:	98c00615 	stw	r3,24(r19)
   2baec:	9c000415 	stw	r16,16(r19)
   2baf0:	88001f1e 	bne	r17,zero,2bb70 <__d2b+0x108>
   2baf4:	10bef384 	addi	r2,r2,-1074
   2baf8:	90800015 	stw	r2,0(r18)
   2bafc:	00900034 	movhi	r2,16384
   2bb00:	10bfffc4 	addi	r2,r2,-1
   2bb04:	8085883a 	add	r2,r16,r2
   2bb08:	1085883a 	add	r2,r2,r2
   2bb0c:	1085883a 	add	r2,r2,r2
   2bb10:	9885883a 	add	r2,r19,r2
   2bb14:	11000517 	ldw	r4,20(r2)
   2bb18:	8020917a 	slli	r16,r16,5
   2bb1c:	002b0c80 	call	2b0c8 <__hi0bits>
   2bb20:	d8c00817 	ldw	r3,32(sp)
   2bb24:	8085c83a 	sub	r2,r16,r2
   2bb28:	18800015 	stw	r2,0(r3)
   2bb2c:	9805883a 	mov	r2,r19
   2bb30:	dfc00717 	ldw	ra,28(sp)
   2bb34:	dd000617 	ldw	r20,24(sp)
   2bb38:	dcc00517 	ldw	r19,20(sp)
   2bb3c:	dc800417 	ldw	r18,16(sp)
   2bb40:	dc400317 	ldw	r17,12(sp)
   2bb44:	dc000217 	ldw	r16,8(sp)
   2bb48:	dec00804 	addi	sp,sp,32
   2bb4c:	f800283a 	ret
   2bb50:	d809883a 	mov	r4,sp
   2bb54:	002b1300 	call	2b130 <__lo0bits>
   2bb58:	d8c00017 	ldw	r3,0(sp)
   2bb5c:	04000044 	movi	r16,1
   2bb60:	9c000415 	stw	r16,16(r19)
   2bb64:	98c00515 	stw	r3,20(r19)
   2bb68:	10800804 	addi	r2,r2,32
   2bb6c:	883fe126 	beq	r17,zero,2baf4 <__alt_data_end+0xfffec6f4>
   2bb70:	00c00d44 	movi	r3,53
   2bb74:	8c7ef344 	addi	r17,r17,-1075
   2bb78:	88a3883a 	add	r17,r17,r2
   2bb7c:	1885c83a 	sub	r2,r3,r2
   2bb80:	d8c00817 	ldw	r3,32(sp)
   2bb84:	94400015 	stw	r17,0(r18)
   2bb88:	18800015 	stw	r2,0(r3)
   2bb8c:	003fe706 	br	2bb2c <__alt_data_end+0xfffec72c>
   2bb90:	01000804 	movi	r4,32
   2bb94:	2089c83a 	sub	r4,r4,r2
   2bb98:	1908983a 	sll	r4,r3,r4
   2bb9c:	d9400117 	ldw	r5,4(sp)
   2bba0:	1886d83a 	srl	r3,r3,r2
   2bba4:	2148b03a 	or	r4,r4,r5
   2bba8:	99000515 	stw	r4,20(r19)
   2bbac:	d8c00015 	stw	r3,0(sp)
   2bbb0:	003fca06 	br	2badc <__alt_data_end+0xfffec6dc>

0002bbb4 <__ratio>:
   2bbb4:	defff904 	addi	sp,sp,-28
   2bbb8:	dc400315 	stw	r17,12(sp)
   2bbbc:	2823883a 	mov	r17,r5
   2bbc0:	d9400104 	addi	r5,sp,4
   2bbc4:	dfc00615 	stw	ra,24(sp)
   2bbc8:	dcc00515 	stw	r19,20(sp)
   2bbcc:	dc800415 	stw	r18,16(sp)
   2bbd0:	2027883a 	mov	r19,r4
   2bbd4:	dc000215 	stw	r16,8(sp)
   2bbd8:	002b95c0 	call	2b95c <__b2d>
   2bbdc:	d80b883a 	mov	r5,sp
   2bbe0:	8809883a 	mov	r4,r17
   2bbe4:	1025883a 	mov	r18,r2
   2bbe8:	1821883a 	mov	r16,r3
   2bbec:	002b95c0 	call	2b95c <__b2d>
   2bbf0:	8a000417 	ldw	r8,16(r17)
   2bbf4:	99000417 	ldw	r4,16(r19)
   2bbf8:	d9400117 	ldw	r5,4(sp)
   2bbfc:	2209c83a 	sub	r4,r4,r8
   2bc00:	2010917a 	slli	r8,r4,5
   2bc04:	d9000017 	ldw	r4,0(sp)
   2bc08:	2909c83a 	sub	r4,r5,r4
   2bc0c:	4109883a 	add	r4,r8,r4
   2bc10:	01000e0e 	bge	zero,r4,2bc4c <__ratio+0x98>
   2bc14:	2008953a 	slli	r4,r4,20
   2bc18:	2421883a 	add	r16,r4,r16
   2bc1c:	100d883a 	mov	r6,r2
   2bc20:	180f883a 	mov	r7,r3
   2bc24:	9009883a 	mov	r4,r18
   2bc28:	800b883a 	mov	r5,r16
   2bc2c:	002376c0 	call	2376c <__divdf3>
   2bc30:	dfc00617 	ldw	ra,24(sp)
   2bc34:	dcc00517 	ldw	r19,20(sp)
   2bc38:	dc800417 	ldw	r18,16(sp)
   2bc3c:	dc400317 	ldw	r17,12(sp)
   2bc40:	dc000217 	ldw	r16,8(sp)
   2bc44:	dec00704 	addi	sp,sp,28
   2bc48:	f800283a 	ret
   2bc4c:	2008953a 	slli	r4,r4,20
   2bc50:	1907c83a 	sub	r3,r3,r4
   2bc54:	003ff106 	br	2bc1c <__alt_data_end+0xfffec81c>

0002bc58 <_mprec_log10>:
   2bc58:	defffe04 	addi	sp,sp,-8
   2bc5c:	dc000015 	stw	r16,0(sp)
   2bc60:	dfc00115 	stw	ra,4(sp)
   2bc64:	008005c4 	movi	r2,23
   2bc68:	2021883a 	mov	r16,r4
   2bc6c:	11000d0e 	bge	r2,r4,2bca4 <_mprec_log10+0x4c>
   2bc70:	0005883a 	mov	r2,zero
   2bc74:	00cffc34 	movhi	r3,16368
   2bc78:	843fffc4 	addi	r16,r16,-1
   2bc7c:	000d883a 	mov	r6,zero
   2bc80:	01d00934 	movhi	r7,16420
   2bc84:	1009883a 	mov	r4,r2
   2bc88:	180b883a 	mov	r5,r3
   2bc8c:	00242240 	call	24224 <__muldf3>
   2bc90:	803ff91e 	bne	r16,zero,2bc78 <__alt_data_end+0xfffec878>
   2bc94:	dfc00117 	ldw	ra,4(sp)
   2bc98:	dc000017 	ldw	r16,0(sp)
   2bc9c:	dec00204 	addi	sp,sp,8
   2bca0:	f800283a 	ret
   2bca4:	202090fa 	slli	r16,r4,3
   2bca8:	008000f4 	movhi	r2,3
   2bcac:	10891e04 	addi	r2,r2,9336
   2bcb0:	1421883a 	add	r16,r2,r16
   2bcb4:	80800017 	ldw	r2,0(r16)
   2bcb8:	80c00117 	ldw	r3,4(r16)
   2bcbc:	dfc00117 	ldw	ra,4(sp)
   2bcc0:	dc000017 	ldw	r16,0(sp)
   2bcc4:	dec00204 	addi	sp,sp,8
   2bcc8:	f800283a 	ret

0002bccc <__copybits>:
   2bccc:	297fffc4 	addi	r5,r5,-1
   2bcd0:	280fd17a 	srai	r7,r5,5
   2bcd4:	30c00417 	ldw	r3,16(r6)
   2bcd8:	30800504 	addi	r2,r6,20
   2bcdc:	39c00044 	addi	r7,r7,1
   2bce0:	18c7883a 	add	r3,r3,r3
   2bce4:	39cf883a 	add	r7,r7,r7
   2bce8:	18c7883a 	add	r3,r3,r3
   2bcec:	39cf883a 	add	r7,r7,r7
   2bcf0:	10c7883a 	add	r3,r2,r3
   2bcf4:	21cf883a 	add	r7,r4,r7
   2bcf8:	10c00d2e 	bgeu	r2,r3,2bd30 <__copybits+0x64>
   2bcfc:	200b883a 	mov	r5,r4
   2bd00:	12000017 	ldw	r8,0(r2)
   2bd04:	29400104 	addi	r5,r5,4
   2bd08:	10800104 	addi	r2,r2,4
   2bd0c:	2a3fff15 	stw	r8,-4(r5)
   2bd10:	10fffb36 	bltu	r2,r3,2bd00 <__alt_data_end+0xfffec900>
   2bd14:	1985c83a 	sub	r2,r3,r6
   2bd18:	10bffac4 	addi	r2,r2,-21
   2bd1c:	1004d0ba 	srli	r2,r2,2
   2bd20:	10800044 	addi	r2,r2,1
   2bd24:	1085883a 	add	r2,r2,r2
   2bd28:	1085883a 	add	r2,r2,r2
   2bd2c:	2089883a 	add	r4,r4,r2
   2bd30:	21c0032e 	bgeu	r4,r7,2bd40 <__copybits+0x74>
   2bd34:	20000015 	stw	zero,0(r4)
   2bd38:	21000104 	addi	r4,r4,4
   2bd3c:	21fffd36 	bltu	r4,r7,2bd34 <__alt_data_end+0xfffec934>
   2bd40:	f800283a 	ret

0002bd44 <__any_on>:
   2bd44:	20c00417 	ldw	r3,16(r4)
   2bd48:	2805d17a 	srai	r2,r5,5
   2bd4c:	21000504 	addi	r4,r4,20
   2bd50:	18800d0e 	bge	r3,r2,2bd88 <__any_on+0x44>
   2bd54:	18c7883a 	add	r3,r3,r3
   2bd58:	18c7883a 	add	r3,r3,r3
   2bd5c:	20c7883a 	add	r3,r4,r3
   2bd60:	20c0192e 	bgeu	r4,r3,2bdc8 <__any_on+0x84>
   2bd64:	18bfff17 	ldw	r2,-4(r3)
   2bd68:	18ffff04 	addi	r3,r3,-4
   2bd6c:	1000041e 	bne	r2,zero,2bd80 <__any_on+0x3c>
   2bd70:	20c0142e 	bgeu	r4,r3,2bdc4 <__any_on+0x80>
   2bd74:	18ffff04 	addi	r3,r3,-4
   2bd78:	19400017 	ldw	r5,0(r3)
   2bd7c:	283ffc26 	beq	r5,zero,2bd70 <__alt_data_end+0xfffec970>
   2bd80:	00800044 	movi	r2,1
   2bd84:	f800283a 	ret
   2bd88:	10c00a0e 	bge	r2,r3,2bdb4 <__any_on+0x70>
   2bd8c:	1085883a 	add	r2,r2,r2
   2bd90:	1085883a 	add	r2,r2,r2
   2bd94:	294007cc 	andi	r5,r5,31
   2bd98:	2087883a 	add	r3,r4,r2
   2bd9c:	283ff026 	beq	r5,zero,2bd60 <__alt_data_end+0xfffec960>
   2bda0:	19800017 	ldw	r6,0(r3)
   2bda4:	3144d83a 	srl	r2,r6,r5
   2bda8:	114a983a 	sll	r5,r2,r5
   2bdac:	317ff41e 	bne	r6,r5,2bd80 <__alt_data_end+0xfffec980>
   2bdb0:	003feb06 	br	2bd60 <__alt_data_end+0xfffec960>
   2bdb4:	1085883a 	add	r2,r2,r2
   2bdb8:	1085883a 	add	r2,r2,r2
   2bdbc:	2087883a 	add	r3,r4,r2
   2bdc0:	003fe706 	br	2bd60 <__alt_data_end+0xfffec960>
   2bdc4:	f800283a 	ret
   2bdc8:	0005883a 	mov	r2,zero
   2bdcc:	f800283a 	ret

0002bdd0 <__fpclassifyd>:
   2bdd0:	00a00034 	movhi	r2,32768
   2bdd4:	10bfffc4 	addi	r2,r2,-1
   2bdd8:	2884703a 	and	r2,r5,r2
   2bddc:	10000726 	beq	r2,zero,2bdfc <__fpclassifyd+0x2c>
   2bde0:	00fffc34 	movhi	r3,65520
   2bde4:	019ff834 	movhi	r6,32736
   2bde8:	28c7883a 	add	r3,r5,r3
   2bdec:	31bfffc4 	addi	r6,r6,-1
   2bdf0:	30c00536 	bltu	r6,r3,2be08 <__fpclassifyd+0x38>
   2bdf4:	00800104 	movi	r2,4
   2bdf8:	f800283a 	ret
   2bdfc:	2000021e 	bne	r4,zero,2be08 <__fpclassifyd+0x38>
   2be00:	00800084 	movi	r2,2
   2be04:	f800283a 	ret
   2be08:	00dffc34 	movhi	r3,32752
   2be0c:	019ff834 	movhi	r6,32736
   2be10:	28cb883a 	add	r5,r5,r3
   2be14:	31bfffc4 	addi	r6,r6,-1
   2be18:	317ff62e 	bgeu	r6,r5,2bdf4 <__alt_data_end+0xfffec9f4>
   2be1c:	01400434 	movhi	r5,16
   2be20:	297fffc4 	addi	r5,r5,-1
   2be24:	28800236 	bltu	r5,r2,2be30 <__fpclassifyd+0x60>
   2be28:	008000c4 	movi	r2,3
   2be2c:	f800283a 	ret
   2be30:	10c00226 	beq	r2,r3,2be3c <__fpclassifyd+0x6c>
   2be34:	0005883a 	mov	r2,zero
   2be38:	f800283a 	ret
   2be3c:	2005003a 	cmpeq	r2,r4,zero
   2be40:	f800283a 	ret

0002be44 <_sbrk_r>:
   2be44:	defffd04 	addi	sp,sp,-12
   2be48:	dc000015 	stw	r16,0(sp)
   2be4c:	040000f4 	movhi	r16,3
   2be50:	dc400115 	stw	r17,4(sp)
   2be54:	8416fc04 	addi	r16,r16,23536
   2be58:	2023883a 	mov	r17,r4
   2be5c:	2809883a 	mov	r4,r5
   2be60:	dfc00215 	stw	ra,8(sp)
   2be64:	80000015 	stw	zero,0(r16)
   2be68:	002ff800 	call	2ff80 <sbrk>
   2be6c:	00ffffc4 	movi	r3,-1
   2be70:	10c00526 	beq	r2,r3,2be88 <_sbrk_r+0x44>
   2be74:	dfc00217 	ldw	ra,8(sp)
   2be78:	dc400117 	ldw	r17,4(sp)
   2be7c:	dc000017 	ldw	r16,0(sp)
   2be80:	dec00304 	addi	sp,sp,12
   2be84:	f800283a 	ret
   2be88:	80c00017 	ldw	r3,0(r16)
   2be8c:	183ff926 	beq	r3,zero,2be74 <__alt_data_end+0xfffeca74>
   2be90:	88c00015 	stw	r3,0(r17)
   2be94:	003ff706 	br	2be74 <__alt_data_end+0xfffeca74>

0002be98 <__sread>:
   2be98:	defffe04 	addi	sp,sp,-8
   2be9c:	dc000015 	stw	r16,0(sp)
   2bea0:	2821883a 	mov	r16,r5
   2bea4:	2940038f 	ldh	r5,14(r5)
   2bea8:	dfc00115 	stw	ra,4(sp)
   2beac:	002e33c0 	call	2e33c <_read_r>
   2beb0:	10000716 	blt	r2,zero,2bed0 <__sread+0x38>
   2beb4:	80c01417 	ldw	r3,80(r16)
   2beb8:	1887883a 	add	r3,r3,r2
   2bebc:	80c01415 	stw	r3,80(r16)
   2bec0:	dfc00117 	ldw	ra,4(sp)
   2bec4:	dc000017 	ldw	r16,0(sp)
   2bec8:	dec00204 	addi	sp,sp,8
   2becc:	f800283a 	ret
   2bed0:	80c0030b 	ldhu	r3,12(r16)
   2bed4:	18fbffcc 	andi	r3,r3,61439
   2bed8:	80c0030d 	sth	r3,12(r16)
   2bedc:	dfc00117 	ldw	ra,4(sp)
   2bee0:	dc000017 	ldw	r16,0(sp)
   2bee4:	dec00204 	addi	sp,sp,8
   2bee8:	f800283a 	ret

0002beec <__seofread>:
   2beec:	0005883a 	mov	r2,zero
   2bef0:	f800283a 	ret

0002bef4 <__swrite>:
   2bef4:	2880030b 	ldhu	r2,12(r5)
   2bef8:	defffb04 	addi	sp,sp,-20
   2befc:	dcc00315 	stw	r19,12(sp)
   2bf00:	dc800215 	stw	r18,8(sp)
   2bf04:	dc400115 	stw	r17,4(sp)
   2bf08:	dc000015 	stw	r16,0(sp)
   2bf0c:	dfc00415 	stw	ra,16(sp)
   2bf10:	10c0400c 	andi	r3,r2,256
   2bf14:	2821883a 	mov	r16,r5
   2bf18:	2023883a 	mov	r17,r4
   2bf1c:	3025883a 	mov	r18,r6
   2bf20:	3827883a 	mov	r19,r7
   2bf24:	18000526 	beq	r3,zero,2bf3c <__swrite+0x48>
   2bf28:	2940038f 	ldh	r5,14(r5)
   2bf2c:	01c00084 	movi	r7,2
   2bf30:	000d883a 	mov	r6,zero
   2bf34:	002e1800 	call	2e180 <_lseek_r>
   2bf38:	8080030b 	ldhu	r2,12(r16)
   2bf3c:	8140038f 	ldh	r5,14(r16)
   2bf40:	10bbffcc 	andi	r2,r2,61439
   2bf44:	980f883a 	mov	r7,r19
   2bf48:	900d883a 	mov	r6,r18
   2bf4c:	8809883a 	mov	r4,r17
   2bf50:	8080030d 	sth	r2,12(r16)
   2bf54:	dfc00417 	ldw	ra,16(sp)
   2bf58:	dcc00317 	ldw	r19,12(sp)
   2bf5c:	dc800217 	ldw	r18,8(sp)
   2bf60:	dc400117 	ldw	r17,4(sp)
   2bf64:	dc000017 	ldw	r16,0(sp)
   2bf68:	dec00504 	addi	sp,sp,20
   2bf6c:	002d7901 	jmpi	2d790 <_write_r>

0002bf70 <__sseek>:
   2bf70:	defffe04 	addi	sp,sp,-8
   2bf74:	dc000015 	stw	r16,0(sp)
   2bf78:	2821883a 	mov	r16,r5
   2bf7c:	2940038f 	ldh	r5,14(r5)
   2bf80:	dfc00115 	stw	ra,4(sp)
   2bf84:	002e1800 	call	2e180 <_lseek_r>
   2bf88:	00ffffc4 	movi	r3,-1
   2bf8c:	10c00826 	beq	r2,r3,2bfb0 <__sseek+0x40>
   2bf90:	80c0030b 	ldhu	r3,12(r16)
   2bf94:	80801415 	stw	r2,80(r16)
   2bf98:	18c40014 	ori	r3,r3,4096
   2bf9c:	80c0030d 	sth	r3,12(r16)
   2bfa0:	dfc00117 	ldw	ra,4(sp)
   2bfa4:	dc000017 	ldw	r16,0(sp)
   2bfa8:	dec00204 	addi	sp,sp,8
   2bfac:	f800283a 	ret
   2bfb0:	80c0030b 	ldhu	r3,12(r16)
   2bfb4:	18fbffcc 	andi	r3,r3,61439
   2bfb8:	80c0030d 	sth	r3,12(r16)
   2bfbc:	dfc00117 	ldw	ra,4(sp)
   2bfc0:	dc000017 	ldw	r16,0(sp)
   2bfc4:	dec00204 	addi	sp,sp,8
   2bfc8:	f800283a 	ret

0002bfcc <__sclose>:
   2bfcc:	2940038f 	ldh	r5,14(r5)
   2bfd0:	002d7f01 	jmpi	2d7f0 <_close_r>

0002bfd4 <strcmp>:
   2bfd4:	2144b03a 	or	r2,r4,r5
   2bfd8:	108000cc 	andi	r2,r2,3
   2bfdc:	1000171e 	bne	r2,zero,2c03c <strcmp+0x68>
   2bfe0:	20800017 	ldw	r2,0(r4)
   2bfe4:	28c00017 	ldw	r3,0(r5)
   2bfe8:	10c0141e 	bne	r2,r3,2c03c <strcmp+0x68>
   2bfec:	027fbff4 	movhi	r9,65279
   2bff0:	4a7fbfc4 	addi	r9,r9,-257
   2bff4:	0086303a 	nor	r3,zero,r2
   2bff8:	02202074 	movhi	r8,32897
   2bffc:	1245883a 	add	r2,r2,r9
   2c000:	42202004 	addi	r8,r8,-32640
   2c004:	10c4703a 	and	r2,r2,r3
   2c008:	1204703a 	and	r2,r2,r8
   2c00c:	10000226 	beq	r2,zero,2c018 <strcmp+0x44>
   2c010:	00002306 	br	2c0a0 <strcmp+0xcc>
   2c014:	1000221e 	bne	r2,zero,2c0a0 <strcmp+0xcc>
   2c018:	21000104 	addi	r4,r4,4
   2c01c:	20c00017 	ldw	r3,0(r4)
   2c020:	29400104 	addi	r5,r5,4
   2c024:	29800017 	ldw	r6,0(r5)
   2c028:	1a4f883a 	add	r7,r3,r9
   2c02c:	00c4303a 	nor	r2,zero,r3
   2c030:	3884703a 	and	r2,r7,r2
   2c034:	1204703a 	and	r2,r2,r8
   2c038:	19bff626 	beq	r3,r6,2c014 <__alt_data_end+0xfffecc14>
   2c03c:	20800003 	ldbu	r2,0(r4)
   2c040:	10c03fcc 	andi	r3,r2,255
   2c044:	18c0201c 	xori	r3,r3,128
   2c048:	18ffe004 	addi	r3,r3,-128
   2c04c:	18000c26 	beq	r3,zero,2c080 <strcmp+0xac>
   2c050:	29800007 	ldb	r6,0(r5)
   2c054:	19800326 	beq	r3,r6,2c064 <strcmp+0x90>
   2c058:	00001306 	br	2c0a8 <strcmp+0xd4>
   2c05c:	29800007 	ldb	r6,0(r5)
   2c060:	11800b1e 	bne	r2,r6,2c090 <strcmp+0xbc>
   2c064:	21000044 	addi	r4,r4,1
   2c068:	20c00003 	ldbu	r3,0(r4)
   2c06c:	29400044 	addi	r5,r5,1
   2c070:	18803fcc 	andi	r2,r3,255
   2c074:	1080201c 	xori	r2,r2,128
   2c078:	10bfe004 	addi	r2,r2,-128
   2c07c:	103ff71e 	bne	r2,zero,2c05c <__alt_data_end+0xfffecc5c>
   2c080:	0007883a 	mov	r3,zero
   2c084:	28800003 	ldbu	r2,0(r5)
   2c088:	1885c83a 	sub	r2,r3,r2
   2c08c:	f800283a 	ret
   2c090:	28800003 	ldbu	r2,0(r5)
   2c094:	18c03fcc 	andi	r3,r3,255
   2c098:	1885c83a 	sub	r2,r3,r2
   2c09c:	f800283a 	ret
   2c0a0:	0005883a 	mov	r2,zero
   2c0a4:	f800283a 	ret
   2c0a8:	10c03fcc 	andi	r3,r2,255
   2c0ac:	003ff506 	br	2c084 <__alt_data_end+0xfffecc84>

0002c0b0 <strlen>:
   2c0b0:	208000cc 	andi	r2,r4,3
   2c0b4:	10002026 	beq	r2,zero,2c138 <strlen+0x88>
   2c0b8:	20800007 	ldb	r2,0(r4)
   2c0bc:	10002026 	beq	r2,zero,2c140 <strlen+0x90>
   2c0c0:	2005883a 	mov	r2,r4
   2c0c4:	00000206 	br	2c0d0 <strlen+0x20>
   2c0c8:	10c00007 	ldb	r3,0(r2)
   2c0cc:	18001826 	beq	r3,zero,2c130 <strlen+0x80>
   2c0d0:	10800044 	addi	r2,r2,1
   2c0d4:	10c000cc 	andi	r3,r2,3
   2c0d8:	183ffb1e 	bne	r3,zero,2c0c8 <__alt_data_end+0xfffeccc8>
   2c0dc:	10c00017 	ldw	r3,0(r2)
   2c0e0:	01ffbff4 	movhi	r7,65279
   2c0e4:	39ffbfc4 	addi	r7,r7,-257
   2c0e8:	00ca303a 	nor	r5,zero,r3
   2c0ec:	01a02074 	movhi	r6,32897
   2c0f0:	19c7883a 	add	r3,r3,r7
   2c0f4:	31a02004 	addi	r6,r6,-32640
   2c0f8:	1946703a 	and	r3,r3,r5
   2c0fc:	1986703a 	and	r3,r3,r6
   2c100:	1800091e 	bne	r3,zero,2c128 <strlen+0x78>
   2c104:	10800104 	addi	r2,r2,4
   2c108:	10c00017 	ldw	r3,0(r2)
   2c10c:	19cb883a 	add	r5,r3,r7
   2c110:	00c6303a 	nor	r3,zero,r3
   2c114:	28c6703a 	and	r3,r5,r3
   2c118:	1986703a 	and	r3,r3,r6
   2c11c:	183ff926 	beq	r3,zero,2c104 <__alt_data_end+0xfffecd04>
   2c120:	00000106 	br	2c128 <strlen+0x78>
   2c124:	10800044 	addi	r2,r2,1
   2c128:	10c00007 	ldb	r3,0(r2)
   2c12c:	183ffd1e 	bne	r3,zero,2c124 <__alt_data_end+0xfffecd24>
   2c130:	1105c83a 	sub	r2,r2,r4
   2c134:	f800283a 	ret
   2c138:	2005883a 	mov	r2,r4
   2c13c:	003fe706 	br	2c0dc <__alt_data_end+0xfffeccdc>
   2c140:	0005883a 	mov	r2,zero
   2c144:	f800283a 	ret

0002c148 <__sprint_r.part.0>:
   2c148:	28801917 	ldw	r2,100(r5)
   2c14c:	defff604 	addi	sp,sp,-40
   2c150:	dd400515 	stw	r21,20(sp)
   2c154:	dfc00915 	stw	ra,36(sp)
   2c158:	df000815 	stw	fp,32(sp)
   2c15c:	ddc00715 	stw	r23,28(sp)
   2c160:	dd800615 	stw	r22,24(sp)
   2c164:	dd000415 	stw	r20,16(sp)
   2c168:	dcc00315 	stw	r19,12(sp)
   2c16c:	dc800215 	stw	r18,8(sp)
   2c170:	dc400115 	stw	r17,4(sp)
   2c174:	dc000015 	stw	r16,0(sp)
   2c178:	1088000c 	andi	r2,r2,8192
   2c17c:	302b883a 	mov	r21,r6
   2c180:	10002e26 	beq	r2,zero,2c23c <__sprint_r.part.0+0xf4>
   2c184:	30800217 	ldw	r2,8(r6)
   2c188:	35800017 	ldw	r22,0(r6)
   2c18c:	10002926 	beq	r2,zero,2c234 <__sprint_r.part.0+0xec>
   2c190:	2827883a 	mov	r19,r5
   2c194:	2029883a 	mov	r20,r4
   2c198:	b5c00104 	addi	r23,r22,4
   2c19c:	04bfffc4 	movi	r18,-1
   2c1a0:	bc400017 	ldw	r17,0(r23)
   2c1a4:	b4000017 	ldw	r16,0(r22)
   2c1a8:	0039883a 	mov	fp,zero
   2c1ac:	8822d0ba 	srli	r17,r17,2
   2c1b0:	8800031e 	bne	r17,zero,2c1c0 <__sprint_r.part.0+0x78>
   2c1b4:	00001806 	br	2c218 <__sprint_r.part.0+0xd0>
   2c1b8:	84000104 	addi	r16,r16,4
   2c1bc:	8f001526 	beq	r17,fp,2c214 <__sprint_r.part.0+0xcc>
   2c1c0:	81400017 	ldw	r5,0(r16)
   2c1c4:	980d883a 	mov	r6,r19
   2c1c8:	a009883a 	mov	r4,r20
   2c1cc:	002db700 	call	2db70 <_fputwc_r>
   2c1d0:	e7000044 	addi	fp,fp,1
   2c1d4:	14bff81e 	bne	r2,r18,2c1b8 <__alt_data_end+0xfffecdb8>
   2c1d8:	9005883a 	mov	r2,r18
   2c1dc:	a8000215 	stw	zero,8(r21)
   2c1e0:	a8000115 	stw	zero,4(r21)
   2c1e4:	dfc00917 	ldw	ra,36(sp)
   2c1e8:	df000817 	ldw	fp,32(sp)
   2c1ec:	ddc00717 	ldw	r23,28(sp)
   2c1f0:	dd800617 	ldw	r22,24(sp)
   2c1f4:	dd400517 	ldw	r21,20(sp)
   2c1f8:	dd000417 	ldw	r20,16(sp)
   2c1fc:	dcc00317 	ldw	r19,12(sp)
   2c200:	dc800217 	ldw	r18,8(sp)
   2c204:	dc400117 	ldw	r17,4(sp)
   2c208:	dc000017 	ldw	r16,0(sp)
   2c20c:	dec00a04 	addi	sp,sp,40
   2c210:	f800283a 	ret
   2c214:	a8800217 	ldw	r2,8(r21)
   2c218:	8c63883a 	add	r17,r17,r17
   2c21c:	8c63883a 	add	r17,r17,r17
   2c220:	1445c83a 	sub	r2,r2,r17
   2c224:	a8800215 	stw	r2,8(r21)
   2c228:	b5800204 	addi	r22,r22,8
   2c22c:	bdc00204 	addi	r23,r23,8
   2c230:	103fdb1e 	bne	r2,zero,2c1a0 <__alt_data_end+0xfffecda0>
   2c234:	0005883a 	mov	r2,zero
   2c238:	003fe806 	br	2c1dc <__alt_data_end+0xfffecddc>
   2c23c:	002dc700 	call	2dc70 <__sfvwrite_r>
   2c240:	003fe606 	br	2c1dc <__alt_data_end+0xfffecddc>

0002c244 <__sprint_r>:
   2c244:	30c00217 	ldw	r3,8(r6)
   2c248:	18000126 	beq	r3,zero,2c250 <__sprint_r+0xc>
   2c24c:	002c1481 	jmpi	2c148 <__sprint_r.part.0>
   2c250:	30000115 	stw	zero,4(r6)
   2c254:	0005883a 	mov	r2,zero
   2c258:	f800283a 	ret

0002c25c <___vfiprintf_internal_r>:
   2c25c:	deffc904 	addi	sp,sp,-220
   2c260:	df003515 	stw	fp,212(sp)
   2c264:	dd003115 	stw	r20,196(sp)
   2c268:	dfc03615 	stw	ra,216(sp)
   2c26c:	ddc03415 	stw	r23,208(sp)
   2c270:	dd803315 	stw	r22,204(sp)
   2c274:	dd403215 	stw	r21,200(sp)
   2c278:	dcc03015 	stw	r19,192(sp)
   2c27c:	dc802f15 	stw	r18,188(sp)
   2c280:	dc402e15 	stw	r17,184(sp)
   2c284:	dc002d15 	stw	r16,180(sp)
   2c288:	d9002015 	stw	r4,128(sp)
   2c28c:	d9c02215 	stw	r7,136(sp)
   2c290:	2829883a 	mov	r20,r5
   2c294:	3039883a 	mov	fp,r6
   2c298:	20000226 	beq	r4,zero,2c2a4 <___vfiprintf_internal_r+0x48>
   2c29c:	20800e17 	ldw	r2,56(r4)
   2c2a0:	1000cf26 	beq	r2,zero,2c5e0 <___vfiprintf_internal_r+0x384>
   2c2a4:	a080030b 	ldhu	r2,12(r20)
   2c2a8:	10c8000c 	andi	r3,r2,8192
   2c2ac:	1800061e 	bne	r3,zero,2c2c8 <___vfiprintf_internal_r+0x6c>
   2c2b0:	a1001917 	ldw	r4,100(r20)
   2c2b4:	00f7ffc4 	movi	r3,-8193
   2c2b8:	10880014 	ori	r2,r2,8192
   2c2bc:	20c6703a 	and	r3,r4,r3
   2c2c0:	a080030d 	sth	r2,12(r20)
   2c2c4:	a0c01915 	stw	r3,100(r20)
   2c2c8:	10c0020c 	andi	r3,r2,8
   2c2cc:	1800a926 	beq	r3,zero,2c574 <___vfiprintf_internal_r+0x318>
   2c2d0:	a0c00417 	ldw	r3,16(r20)
   2c2d4:	1800a726 	beq	r3,zero,2c574 <___vfiprintf_internal_r+0x318>
   2c2d8:	1080068c 	andi	r2,r2,26
   2c2dc:	00c00284 	movi	r3,10
   2c2e0:	10c0ac26 	beq	r2,r3,2c594 <___vfiprintf_internal_r+0x338>
   2c2e4:	da801a04 	addi	r10,sp,104
   2c2e8:	da801e15 	stw	r10,120(sp)
   2c2ec:	d8801e17 	ldw	r2,120(sp)
   2c2f0:	da8019c4 	addi	r10,sp,103
   2c2f4:	058000f4 	movhi	r22,3
   2c2f8:	05c000f4 	movhi	r23,3
   2c2fc:	da801f15 	stw	r10,124(sp)
   2c300:	1295c83a 	sub	r10,r2,r10
   2c304:	b5895404 	addi	r22,r22,9552
   2c308:	bdc95004 	addi	r23,r23,9536
   2c30c:	dec01a15 	stw	sp,104(sp)
   2c310:	d8001c15 	stw	zero,112(sp)
   2c314:	d8001b15 	stw	zero,108(sp)
   2c318:	d8002615 	stw	zero,152(sp)
   2c31c:	d8002315 	stw	zero,140(sp)
   2c320:	da802715 	stw	r10,156(sp)
   2c324:	d811883a 	mov	r8,sp
   2c328:	dd002115 	stw	r20,132(sp)
   2c32c:	e021883a 	mov	r16,fp
   2c330:	80800007 	ldb	r2,0(r16)
   2c334:	1003ea26 	beq	r2,zero,2d2e0 <___vfiprintf_internal_r+0x1084>
   2c338:	00c00944 	movi	r3,37
   2c33c:	8025883a 	mov	r18,r16
   2c340:	10c0021e 	bne	r2,r3,2c34c <___vfiprintf_internal_r+0xf0>
   2c344:	00001606 	br	2c3a0 <___vfiprintf_internal_r+0x144>
   2c348:	10c00326 	beq	r2,r3,2c358 <___vfiprintf_internal_r+0xfc>
   2c34c:	94800044 	addi	r18,r18,1
   2c350:	90800007 	ldb	r2,0(r18)
   2c354:	103ffc1e 	bne	r2,zero,2c348 <__alt_data_end+0xfffecf48>
   2c358:	9423c83a 	sub	r17,r18,r16
   2c35c:	88001026 	beq	r17,zero,2c3a0 <___vfiprintf_internal_r+0x144>
   2c360:	d8c01c17 	ldw	r3,112(sp)
   2c364:	d8801b17 	ldw	r2,108(sp)
   2c368:	44000015 	stw	r16,0(r8)
   2c36c:	88c7883a 	add	r3,r17,r3
   2c370:	10800044 	addi	r2,r2,1
   2c374:	44400115 	stw	r17,4(r8)
   2c378:	d8c01c15 	stw	r3,112(sp)
   2c37c:	d8801b15 	stw	r2,108(sp)
   2c380:	010001c4 	movi	r4,7
   2c384:	2080760e 	bge	r4,r2,2c560 <___vfiprintf_internal_r+0x304>
   2c388:	1803821e 	bne	r3,zero,2d194 <___vfiprintf_internal_r+0xf38>
   2c38c:	da802317 	ldw	r10,140(sp)
   2c390:	d8001b15 	stw	zero,108(sp)
   2c394:	d811883a 	mov	r8,sp
   2c398:	5455883a 	add	r10,r10,r17
   2c39c:	da802315 	stw	r10,140(sp)
   2c3a0:	90800007 	ldb	r2,0(r18)
   2c3a4:	10044626 	beq	r2,zero,2d4c0 <___vfiprintf_internal_r+0x1264>
   2c3a8:	90c00047 	ldb	r3,1(r18)
   2c3ac:	94000044 	addi	r16,r18,1
   2c3b0:	d8001d85 	stb	zero,118(sp)
   2c3b4:	0009883a 	mov	r4,zero
   2c3b8:	000f883a 	mov	r7,zero
   2c3bc:	027fffc4 	movi	r9,-1
   2c3c0:	0023883a 	mov	r17,zero
   2c3c4:	0029883a 	mov	r20,zero
   2c3c8:	01401604 	movi	r5,88
   2c3cc:	01800244 	movi	r6,9
   2c3d0:	03400a84 	movi	r13,42
   2c3d4:	03001b04 	movi	r12,108
   2c3d8:	84000044 	addi	r16,r16,1
   2c3dc:	18bff804 	addi	r2,r3,-32
   2c3e0:	28827336 	bltu	r5,r2,2cdb0 <___vfiprintf_internal_r+0xb54>
   2c3e4:	100490ba 	slli	r2,r2,2
   2c3e8:	028000f4 	movhi	r10,3
   2c3ec:	52b0ff04 	addi	r10,r10,-15364
   2c3f0:	1285883a 	add	r2,r2,r10
   2c3f4:	10800017 	ldw	r2,0(r2)
   2c3f8:	1000683a 	jmp	r2
   2c3fc:	0002cae4 	muli	zero,zero,2859
   2c400:	0002cdb0 	cmpltui	zero,zero,2870
   2c404:	0002cdb0 	cmpltui	zero,zero,2870
   2c408:	0002cb04 	movi	zero,2860
   2c40c:	0002cdb0 	cmpltui	zero,zero,2870
   2c410:	0002cdb0 	cmpltui	zero,zero,2870
   2c414:	0002cdb0 	cmpltui	zero,zero,2870
   2c418:	0002cdb0 	cmpltui	zero,zero,2870
   2c41c:	0002cdb0 	cmpltui	zero,zero,2870
   2c420:	0002cdb0 	cmpltui	zero,zero,2870
   2c424:	0002ccec 	andhi	zero,zero,2867
   2c428:	0002cd08 	cmpgei	zero,zero,2868
   2c42c:	0002cdb0 	cmpltui	zero,zero,2870
   2c430:	0002c5f0 	cmpltui	zero,zero,2839
   2c434:	0002cd18 	cmpnei	zero,zero,2868
   2c438:	0002cdb0 	cmpltui	zero,zero,2870
   2c43c:	0002cb10 	cmplti	zero,zero,2860
   2c440:	0002cb1c 	xori	zero,zero,2860
   2c444:	0002cb1c 	xori	zero,zero,2860
   2c448:	0002cb1c 	xori	zero,zero,2860
   2c44c:	0002cb1c 	xori	zero,zero,2860
   2c450:	0002cb1c 	xori	zero,zero,2860
   2c454:	0002cb1c 	xori	zero,zero,2860
   2c458:	0002cb1c 	xori	zero,zero,2860
   2c45c:	0002cb1c 	xori	zero,zero,2860
   2c460:	0002cb1c 	xori	zero,zero,2860
   2c464:	0002cdb0 	cmpltui	zero,zero,2870
   2c468:	0002cdb0 	cmpltui	zero,zero,2870
   2c46c:	0002cdb0 	cmpltui	zero,zero,2870
   2c470:	0002cdb0 	cmpltui	zero,zero,2870
   2c474:	0002cdb0 	cmpltui	zero,zero,2870
   2c478:	0002cdb0 	cmpltui	zero,zero,2870
   2c47c:	0002cdb0 	cmpltui	zero,zero,2870
   2c480:	0002cdb0 	cmpltui	zero,zero,2870
   2c484:	0002cdb0 	cmpltui	zero,zero,2870
   2c488:	0002cdb0 	cmpltui	zero,zero,2870
   2c48c:	0002cb48 	cmpgei	zero,zero,2861
   2c490:	0002cdb0 	cmpltui	zero,zero,2870
   2c494:	0002cdb0 	cmpltui	zero,zero,2870
   2c498:	0002cdb0 	cmpltui	zero,zero,2870
   2c49c:	0002cdb0 	cmpltui	zero,zero,2870
   2c4a0:	0002cdb0 	cmpltui	zero,zero,2870
   2c4a4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4a8:	0002cdb0 	cmpltui	zero,zero,2870
   2c4ac:	0002cdb0 	cmpltui	zero,zero,2870
   2c4b0:	0002cdb0 	cmpltui	zero,zero,2870
   2c4b4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4b8:	0002cb80 	call	2cb8 <__alt_mem_SRAM1-0x1d348>
   2c4bc:	0002cdb0 	cmpltui	zero,zero,2870
   2c4c0:	0002cdb0 	cmpltui	zero,zero,2870
   2c4c4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4c8:	0002cdb0 	cmpltui	zero,zero,2870
   2c4cc:	0002cdb0 	cmpltui	zero,zero,2870
   2c4d0:	0002cbd8 	cmpnei	zero,zero,2863
   2c4d4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4d8:	0002cdb0 	cmpltui	zero,zero,2870
   2c4dc:	0002cc48 	cmpgei	zero,zero,2865
   2c4e0:	0002cdb0 	cmpltui	zero,zero,2870
   2c4e4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4e8:	0002cdb0 	cmpltui	zero,zero,2870
   2c4ec:	0002cdb0 	cmpltui	zero,zero,2870
   2c4f0:	0002cdb0 	cmpltui	zero,zero,2870
   2c4f4:	0002cdb0 	cmpltui	zero,zero,2870
   2c4f8:	0002cdb0 	cmpltui	zero,zero,2870
   2c4fc:	0002cdb0 	cmpltui	zero,zero,2870
   2c500:	0002cdb0 	cmpltui	zero,zero,2870
   2c504:	0002cdb0 	cmpltui	zero,zero,2870
   2c508:	0002c9f4 	movhi	zero,2855
   2c50c:	0002ca20 	cmpeqi	zero,zero,2856
   2c510:	0002cdb0 	cmpltui	zero,zero,2870
   2c514:	0002cdb0 	cmpltui	zero,zero,2870
   2c518:	0002cdb0 	cmpltui	zero,zero,2870
   2c51c:	0002cd58 	cmpnei	zero,zero,2869
   2c520:	0002ca20 	cmpeqi	zero,zero,2856
   2c524:	0002cdb0 	cmpltui	zero,zero,2870
   2c528:	0002cdb0 	cmpltui	zero,zero,2870
   2c52c:	0002c8b4 	movhi	zero,2850
   2c530:	0002cdb0 	cmpltui	zero,zero,2870
   2c534:	0002c8c4 	movi	zero,2851
   2c538:	0002c900 	call	2c90 <__alt_mem_SRAM1-0x1d370>
   2c53c:	0002c5fc 	xorhi	zero,zero,2839
   2c540:	0002c8a8 	cmpgeui	zero,zero,2850
   2c544:	0002cdb0 	cmpltui	zero,zero,2870
   2c548:	0002cc84 	movi	zero,2866
   2c54c:	0002cdb0 	cmpltui	zero,zero,2870
   2c550:	0002ccdc 	xori	zero,zero,2867
   2c554:	0002cdb0 	cmpltui	zero,zero,2870
   2c558:	0002cdb0 	cmpltui	zero,zero,2870
   2c55c:	0002c9a0 	cmpeqi	zero,zero,2854
   2c560:	42000204 	addi	r8,r8,8
   2c564:	da802317 	ldw	r10,140(sp)
   2c568:	5455883a 	add	r10,r10,r17
   2c56c:	da802315 	stw	r10,140(sp)
   2c570:	003f8b06 	br	2c3a0 <__alt_data_end+0xfffecfa0>
   2c574:	d9002017 	ldw	r4,128(sp)
   2c578:	a00b883a 	mov	r5,r20
   2c57c:	00279fc0 	call	279fc <__swsetup_r>
   2c580:	1003b11e 	bne	r2,zero,2d448 <___vfiprintf_internal_r+0x11ec>
   2c584:	a080030b 	ldhu	r2,12(r20)
   2c588:	00c00284 	movi	r3,10
   2c58c:	1080068c 	andi	r2,r2,26
   2c590:	10ff541e 	bne	r2,r3,2c2e4 <__alt_data_end+0xfffecee4>
   2c594:	a080038f 	ldh	r2,14(r20)
   2c598:	103f5216 	blt	r2,zero,2c2e4 <__alt_data_end+0xfffecee4>
   2c59c:	d9c02217 	ldw	r7,136(sp)
   2c5a0:	d9002017 	ldw	r4,128(sp)
   2c5a4:	e00d883a 	mov	r6,fp
   2c5a8:	a00b883a 	mov	r5,r20
   2c5ac:	002d6d40 	call	2d6d4 <__sbprintf>
   2c5b0:	dfc03617 	ldw	ra,216(sp)
   2c5b4:	df003517 	ldw	fp,212(sp)
   2c5b8:	ddc03417 	ldw	r23,208(sp)
   2c5bc:	dd803317 	ldw	r22,204(sp)
   2c5c0:	dd403217 	ldw	r21,200(sp)
   2c5c4:	dd003117 	ldw	r20,196(sp)
   2c5c8:	dcc03017 	ldw	r19,192(sp)
   2c5cc:	dc802f17 	ldw	r18,188(sp)
   2c5d0:	dc402e17 	ldw	r17,184(sp)
   2c5d4:	dc002d17 	ldw	r16,180(sp)
   2c5d8:	dec03704 	addi	sp,sp,220
   2c5dc:	f800283a 	ret
   2c5e0:	00299d00 	call	299d0 <__sinit>
   2c5e4:	003f2f06 	br	2c2a4 <__alt_data_end+0xfffecea4>
   2c5e8:	0463c83a 	sub	r17,zero,r17
   2c5ec:	d8802215 	stw	r2,136(sp)
   2c5f0:	a5000114 	ori	r20,r20,4
   2c5f4:	80c00007 	ldb	r3,0(r16)
   2c5f8:	003f7706 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2c5fc:	00800c04 	movi	r2,48
   2c600:	da802217 	ldw	r10,136(sp)
   2c604:	d8801d05 	stb	r2,116(sp)
   2c608:	00801e04 	movi	r2,120
   2c60c:	d8801d45 	stb	r2,117(sp)
   2c610:	d8001d85 	stb	zero,118(sp)
   2c614:	50c00104 	addi	r3,r10,4
   2c618:	54800017 	ldw	r18,0(r10)
   2c61c:	0027883a 	mov	r19,zero
   2c620:	a0800094 	ori	r2,r20,2
   2c624:	48030b16 	blt	r9,zero,2d254 <___vfiprintf_internal_r+0xff8>
   2c628:	00bfdfc4 	movi	r2,-129
   2c62c:	a096703a 	and	r11,r20,r2
   2c630:	d8c02215 	stw	r3,136(sp)
   2c634:	5d000094 	ori	r20,r11,2
   2c638:	90032b1e 	bne	r18,zero,2d2e8 <___vfiprintf_internal_r+0x108c>
   2c63c:	008000f4 	movhi	r2,3
   2c640:	1088f004 	addi	r2,r2,9152
   2c644:	d8802615 	stw	r2,152(sp)
   2c648:	0039883a 	mov	fp,zero
   2c64c:	48017b1e 	bne	r9,zero,2cc3c <___vfiprintf_internal_r+0x9e0>
   2c650:	0013883a 	mov	r9,zero
   2c654:	0027883a 	mov	r19,zero
   2c658:	dd401a04 	addi	r21,sp,104
   2c65c:	4825883a 	mov	r18,r9
   2c660:	4cc0010e 	bge	r9,r19,2c668 <___vfiprintf_internal_r+0x40c>
   2c664:	9825883a 	mov	r18,r19
   2c668:	e7003fcc 	andi	fp,fp,255
   2c66c:	e700201c 	xori	fp,fp,128
   2c670:	e73fe004 	addi	fp,fp,-128
   2c674:	e0000126 	beq	fp,zero,2c67c <___vfiprintf_internal_r+0x420>
   2c678:	94800044 	addi	r18,r18,1
   2c67c:	a380008c 	andi	r14,r20,2
   2c680:	70000126 	beq	r14,zero,2c688 <___vfiprintf_internal_r+0x42c>
   2c684:	94800084 	addi	r18,r18,2
   2c688:	a700210c 	andi	fp,r20,132
   2c68c:	e001df1e 	bne	fp,zero,2ce0c <___vfiprintf_internal_r+0xbb0>
   2c690:	8c87c83a 	sub	r3,r17,r18
   2c694:	00c1dd0e 	bge	zero,r3,2ce0c <___vfiprintf_internal_r+0xbb0>
   2c698:	01c00404 	movi	r7,16
   2c69c:	d8801c17 	ldw	r2,112(sp)
   2c6a0:	38c3ad0e 	bge	r7,r3,2d558 <___vfiprintf_internal_r+0x12fc>
   2c6a4:	028000f4 	movhi	r10,3
   2c6a8:	52895404 	addi	r10,r10,9552
   2c6ac:	dc002915 	stw	r16,164(sp)
   2c6b0:	d9801b17 	ldw	r6,108(sp)
   2c6b4:	da802415 	stw	r10,144(sp)
   2c6b8:	03c001c4 	movi	r15,7
   2c6bc:	da402515 	stw	r9,148(sp)
   2c6c0:	db802815 	stw	r14,160(sp)
   2c6c4:	1821883a 	mov	r16,r3
   2c6c8:	00000506 	br	2c6e0 <___vfiprintf_internal_r+0x484>
   2c6cc:	31400084 	addi	r5,r6,2
   2c6d0:	42000204 	addi	r8,r8,8
   2c6d4:	200d883a 	mov	r6,r4
   2c6d8:	843ffc04 	addi	r16,r16,-16
   2c6dc:	3c000d0e 	bge	r7,r16,2c714 <___vfiprintf_internal_r+0x4b8>
   2c6e0:	10800404 	addi	r2,r2,16
   2c6e4:	31000044 	addi	r4,r6,1
   2c6e8:	45800015 	stw	r22,0(r8)
   2c6ec:	41c00115 	stw	r7,4(r8)
   2c6f0:	d8801c15 	stw	r2,112(sp)
   2c6f4:	d9001b15 	stw	r4,108(sp)
   2c6f8:	793ff40e 	bge	r15,r4,2c6cc <__alt_data_end+0xfffed2cc>
   2c6fc:	1001b51e 	bne	r2,zero,2cdd4 <___vfiprintf_internal_r+0xb78>
   2c700:	843ffc04 	addi	r16,r16,-16
   2c704:	000d883a 	mov	r6,zero
   2c708:	01400044 	movi	r5,1
   2c70c:	d811883a 	mov	r8,sp
   2c710:	3c3ff316 	blt	r7,r16,2c6e0 <__alt_data_end+0xfffed2e0>
   2c714:	8007883a 	mov	r3,r16
   2c718:	da402517 	ldw	r9,148(sp)
   2c71c:	db802817 	ldw	r14,160(sp)
   2c720:	dc002917 	ldw	r16,164(sp)
   2c724:	da802417 	ldw	r10,144(sp)
   2c728:	1885883a 	add	r2,r3,r2
   2c72c:	40c00115 	stw	r3,4(r8)
   2c730:	42800015 	stw	r10,0(r8)
   2c734:	d8801c15 	stw	r2,112(sp)
   2c738:	d9401b15 	stw	r5,108(sp)
   2c73c:	00c001c4 	movi	r3,7
   2c740:	19426016 	blt	r3,r5,2d0c4 <___vfiprintf_internal_r+0xe68>
   2c744:	d8c01d87 	ldb	r3,118(sp)
   2c748:	42000204 	addi	r8,r8,8
   2c74c:	29000044 	addi	r4,r5,1
   2c750:	1801b31e 	bne	r3,zero,2ce20 <___vfiprintf_internal_r+0xbc4>
   2c754:	7001c026 	beq	r14,zero,2ce58 <___vfiprintf_internal_r+0xbfc>
   2c758:	d8c01d04 	addi	r3,sp,116
   2c75c:	10800084 	addi	r2,r2,2
   2c760:	40c00015 	stw	r3,0(r8)
   2c764:	00c00084 	movi	r3,2
   2c768:	40c00115 	stw	r3,4(r8)
   2c76c:	d8801c15 	stw	r2,112(sp)
   2c770:	d9001b15 	stw	r4,108(sp)
   2c774:	00c001c4 	movi	r3,7
   2c778:	1902650e 	bge	r3,r4,2d110 <___vfiprintf_internal_r+0xeb4>
   2c77c:	10029a1e 	bne	r2,zero,2d1e8 <___vfiprintf_internal_r+0xf8c>
   2c780:	00c02004 	movi	r3,128
   2c784:	01000044 	movi	r4,1
   2c788:	000b883a 	mov	r5,zero
   2c78c:	d811883a 	mov	r8,sp
   2c790:	e0c1b31e 	bne	fp,r3,2ce60 <___vfiprintf_internal_r+0xc04>
   2c794:	8cb9c83a 	sub	fp,r17,r18
   2c798:	0701b10e 	bge	zero,fp,2ce60 <___vfiprintf_internal_r+0xc04>
   2c79c:	01c00404 	movi	r7,16
   2c7a0:	3f03890e 	bge	r7,fp,2d5c8 <___vfiprintf_internal_r+0x136c>
   2c7a4:	00c000f4 	movhi	r3,3
   2c7a8:	18c95004 	addi	r3,r3,9536
   2c7ac:	d8c02415 	stw	r3,144(sp)
   2c7b0:	8007883a 	mov	r3,r16
   2c7b4:	034001c4 	movi	r13,7
   2c7b8:	e021883a 	mov	r16,fp
   2c7bc:	da402515 	stw	r9,148(sp)
   2c7c0:	1839883a 	mov	fp,r3
   2c7c4:	00000506 	br	2c7dc <___vfiprintf_internal_r+0x580>
   2c7c8:	29800084 	addi	r6,r5,2
   2c7cc:	42000204 	addi	r8,r8,8
   2c7d0:	180b883a 	mov	r5,r3
   2c7d4:	843ffc04 	addi	r16,r16,-16
   2c7d8:	3c000d0e 	bge	r7,r16,2c810 <___vfiprintf_internal_r+0x5b4>
   2c7dc:	10800404 	addi	r2,r2,16
   2c7e0:	28c00044 	addi	r3,r5,1
   2c7e4:	45c00015 	stw	r23,0(r8)
   2c7e8:	41c00115 	stw	r7,4(r8)
   2c7ec:	d8801c15 	stw	r2,112(sp)
   2c7f0:	d8c01b15 	stw	r3,108(sp)
   2c7f4:	68fff40e 	bge	r13,r3,2c7c8 <__alt_data_end+0xfffed3c8>
   2c7f8:	1002241e 	bne	r2,zero,2d08c <___vfiprintf_internal_r+0xe30>
   2c7fc:	843ffc04 	addi	r16,r16,-16
   2c800:	01800044 	movi	r6,1
   2c804:	000b883a 	mov	r5,zero
   2c808:	d811883a 	mov	r8,sp
   2c80c:	3c3ff316 	blt	r7,r16,2c7dc <__alt_data_end+0xfffed3dc>
   2c810:	da402517 	ldw	r9,148(sp)
   2c814:	e007883a 	mov	r3,fp
   2c818:	8039883a 	mov	fp,r16
   2c81c:	1821883a 	mov	r16,r3
   2c820:	d8c02417 	ldw	r3,144(sp)
   2c824:	1705883a 	add	r2,r2,fp
   2c828:	47000115 	stw	fp,4(r8)
   2c82c:	40c00015 	stw	r3,0(r8)
   2c830:	d8801c15 	stw	r2,112(sp)
   2c834:	d9801b15 	stw	r6,108(sp)
   2c838:	00c001c4 	movi	r3,7
   2c83c:	19827616 	blt	r3,r6,2d218 <___vfiprintf_internal_r+0xfbc>
   2c840:	4cf9c83a 	sub	fp,r9,r19
   2c844:	42000204 	addi	r8,r8,8
   2c848:	31000044 	addi	r4,r6,1
   2c84c:	300b883a 	mov	r5,r6
   2c850:	07018516 	blt	zero,fp,2ce68 <___vfiprintf_internal_r+0xc0c>
   2c854:	9885883a 	add	r2,r19,r2
   2c858:	45400015 	stw	r21,0(r8)
   2c85c:	44c00115 	stw	r19,4(r8)
   2c860:	d8801c15 	stw	r2,112(sp)
   2c864:	d9001b15 	stw	r4,108(sp)
   2c868:	00c001c4 	movi	r3,7
   2c86c:	1901dd0e 	bge	r3,r4,2cfe4 <___vfiprintf_internal_r+0xd88>
   2c870:	1002401e 	bne	r2,zero,2d174 <___vfiprintf_internal_r+0xf18>
   2c874:	d8001b15 	stw	zero,108(sp)
   2c878:	a2c0010c 	andi	r11,r20,4
   2c87c:	58000226 	beq	r11,zero,2c888 <___vfiprintf_internal_r+0x62c>
   2c880:	8ca7c83a 	sub	r19,r17,r18
   2c884:	04c2f216 	blt	zero,r19,2d450 <___vfiprintf_internal_r+0x11f4>
   2c888:	8c80010e 	bge	r17,r18,2c890 <___vfiprintf_internal_r+0x634>
   2c88c:	9023883a 	mov	r17,r18
   2c890:	da802317 	ldw	r10,140(sp)
   2c894:	5455883a 	add	r10,r10,r17
   2c898:	da802315 	stw	r10,140(sp)
   2c89c:	d8001b15 	stw	zero,108(sp)
   2c8a0:	d811883a 	mov	r8,sp
   2c8a4:	003ea206 	br	2c330 <__alt_data_end+0xfffecf30>
   2c8a8:	a5000814 	ori	r20,r20,32
   2c8ac:	80c00007 	ldb	r3,0(r16)
   2c8b0:	003ec906 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2c8b4:	80c00007 	ldb	r3,0(r16)
   2c8b8:	1b030926 	beq	r3,r12,2d4e0 <___vfiprintf_internal_r+0x1284>
   2c8bc:	a5000414 	ori	r20,r20,16
   2c8c0:	003ec506 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2c8c4:	21003fcc 	andi	r4,r4,255
   2c8c8:	20035e1e 	bne	r4,zero,2d644 <___vfiprintf_internal_r+0x13e8>
   2c8cc:	a080080c 	andi	r2,r20,32
   2c8d0:	1002a526 	beq	r2,zero,2d368 <___vfiprintf_internal_r+0x110c>
   2c8d4:	da802217 	ldw	r10,136(sp)
   2c8d8:	50800017 	ldw	r2,0(r10)
   2c8dc:	da802317 	ldw	r10,140(sp)
   2c8e0:	5007d7fa 	srai	r3,r10,31
   2c8e4:	da802217 	ldw	r10,136(sp)
   2c8e8:	10c00115 	stw	r3,4(r2)
   2c8ec:	52800104 	addi	r10,r10,4
   2c8f0:	da802215 	stw	r10,136(sp)
   2c8f4:	da802317 	ldw	r10,140(sp)
   2c8f8:	12800015 	stw	r10,0(r2)
   2c8fc:	003e8c06 	br	2c330 <__alt_data_end+0xfffecf30>
   2c900:	21003fcc 	andi	r4,r4,255
   2c904:	2003511e 	bne	r4,zero,2d64c <___vfiprintf_internal_r+0x13f0>
   2c908:	a080080c 	andi	r2,r20,32
   2c90c:	1000a126 	beq	r2,zero,2cb94 <___vfiprintf_internal_r+0x938>
   2c910:	da802217 	ldw	r10,136(sp)
   2c914:	d8001d85 	stb	zero,118(sp)
   2c918:	50800204 	addi	r2,r10,8
   2c91c:	54800017 	ldw	r18,0(r10)
   2c920:	54c00117 	ldw	r19,4(r10)
   2c924:	4802b416 	blt	r9,zero,2d3f8 <___vfiprintf_internal_r+0x119c>
   2c928:	013fdfc4 	movi	r4,-129
   2c92c:	94c6b03a 	or	r3,r18,r19
   2c930:	d8802215 	stw	r2,136(sp)
   2c934:	a128703a 	and	r20,r20,r4
   2c938:	1800a226 	beq	r3,zero,2cbc4 <___vfiprintf_internal_r+0x968>
   2c93c:	0039883a 	mov	fp,zero
   2c940:	dd401a04 	addi	r21,sp,104
   2c944:	9006d0fa 	srli	r3,r18,3
   2c948:	9808977a 	slli	r4,r19,29
   2c94c:	9826d0fa 	srli	r19,r19,3
   2c950:	948001cc 	andi	r18,r18,7
   2c954:	90800c04 	addi	r2,r18,48
   2c958:	ad7fffc4 	addi	r21,r21,-1
   2c95c:	20e4b03a 	or	r18,r4,r3
   2c960:	a8800005 	stb	r2,0(r21)
   2c964:	94c6b03a 	or	r3,r18,r19
   2c968:	183ff61e 	bne	r3,zero,2c944 <__alt_data_end+0xfffed544>
   2c96c:	a0c0004c 	andi	r3,r20,1
   2c970:	18005926 	beq	r3,zero,2cad8 <___vfiprintf_internal_r+0x87c>
   2c974:	10803fcc 	andi	r2,r2,255
   2c978:	1080201c 	xori	r2,r2,128
   2c97c:	10bfe004 	addi	r2,r2,-128
   2c980:	00c00c04 	movi	r3,48
   2c984:	10c05426 	beq	r2,r3,2cad8 <___vfiprintf_internal_r+0x87c>
   2c988:	da801e17 	ldw	r10,120(sp)
   2c98c:	a8bfffc4 	addi	r2,r21,-1
   2c990:	a8ffffc5 	stb	r3,-1(r21)
   2c994:	50a7c83a 	sub	r19,r10,r2
   2c998:	102b883a 	mov	r21,r2
   2c99c:	003f2f06 	br	2c65c <__alt_data_end+0xfffed25c>
   2c9a0:	21003fcc 	andi	r4,r4,255
   2c9a4:	2003421e 	bne	r4,zero,2d6b0 <___vfiprintf_internal_r+0x1454>
   2c9a8:	008000f4 	movhi	r2,3
   2c9ac:	1088f004 	addi	r2,r2,9152
   2c9b0:	d8802615 	stw	r2,152(sp)
   2c9b4:	a080080c 	andi	r2,r20,32
   2c9b8:	1000aa26 	beq	r2,zero,2cc64 <___vfiprintf_internal_r+0xa08>
   2c9bc:	da802217 	ldw	r10,136(sp)
   2c9c0:	54800017 	ldw	r18,0(r10)
   2c9c4:	54c00117 	ldw	r19,4(r10)
   2c9c8:	52800204 	addi	r10,r10,8
   2c9cc:	da802215 	stw	r10,136(sp)
   2c9d0:	a080004c 	andi	r2,r20,1
   2c9d4:	1001d226 	beq	r2,zero,2d120 <___vfiprintf_internal_r+0xec4>
   2c9d8:	94c4b03a 	or	r2,r18,r19
   2c9dc:	1002351e 	bne	r2,zero,2d2b4 <___vfiprintf_internal_r+0x1058>
   2c9e0:	d8001d85 	stb	zero,118(sp)
   2c9e4:	48022216 	blt	r9,zero,2d270 <___vfiprintf_internal_r+0x1014>
   2c9e8:	00bfdfc4 	movi	r2,-129
   2c9ec:	a0a8703a 	and	r20,r20,r2
   2c9f0:	003f1506 	br	2c648 <__alt_data_end+0xfffed248>
   2c9f4:	da802217 	ldw	r10,136(sp)
   2c9f8:	04800044 	movi	r18,1
   2c9fc:	d8001d85 	stb	zero,118(sp)
   2ca00:	50800017 	ldw	r2,0(r10)
   2ca04:	52800104 	addi	r10,r10,4
   2ca08:	da802215 	stw	r10,136(sp)
   2ca0c:	d8801005 	stb	r2,64(sp)
   2ca10:	9027883a 	mov	r19,r18
   2ca14:	dd401004 	addi	r21,sp,64
   2ca18:	0013883a 	mov	r9,zero
   2ca1c:	003f1706 	br	2c67c <__alt_data_end+0xfffed27c>
   2ca20:	21003fcc 	andi	r4,r4,255
   2ca24:	2003201e 	bne	r4,zero,2d6a8 <___vfiprintf_internal_r+0x144c>
   2ca28:	a080080c 	andi	r2,r20,32
   2ca2c:	10004b26 	beq	r2,zero,2cb5c <___vfiprintf_internal_r+0x900>
   2ca30:	da802217 	ldw	r10,136(sp)
   2ca34:	50800117 	ldw	r2,4(r10)
   2ca38:	54800017 	ldw	r18,0(r10)
   2ca3c:	52800204 	addi	r10,r10,8
   2ca40:	da802215 	stw	r10,136(sp)
   2ca44:	1027883a 	mov	r19,r2
   2ca48:	10022c16 	blt	r2,zero,2d2fc <___vfiprintf_internal_r+0x10a0>
   2ca4c:	df001d83 	ldbu	fp,118(sp)
   2ca50:	48007216 	blt	r9,zero,2cc1c <___vfiprintf_internal_r+0x9c0>
   2ca54:	00ffdfc4 	movi	r3,-129
   2ca58:	94c4b03a 	or	r2,r18,r19
   2ca5c:	a0e8703a 	and	r20,r20,r3
   2ca60:	1000cc26 	beq	r2,zero,2cd94 <___vfiprintf_internal_r+0xb38>
   2ca64:	98021026 	beq	r19,zero,2d2a8 <___vfiprintf_internal_r+0x104c>
   2ca68:	dc402415 	stw	r17,144(sp)
   2ca6c:	dc002515 	stw	r16,148(sp)
   2ca70:	9823883a 	mov	r17,r19
   2ca74:	9021883a 	mov	r16,r18
   2ca78:	dd401a04 	addi	r21,sp,104
   2ca7c:	4825883a 	mov	r18,r9
   2ca80:	4027883a 	mov	r19,r8
   2ca84:	8009883a 	mov	r4,r16
   2ca88:	880b883a 	mov	r5,r17
   2ca8c:	01800284 	movi	r6,10
   2ca90:	000f883a 	mov	r7,zero
   2ca94:	002f1b80 	call	2f1b8 <__umoddi3>
   2ca98:	10800c04 	addi	r2,r2,48
   2ca9c:	ad7fffc4 	addi	r21,r21,-1
   2caa0:	8009883a 	mov	r4,r16
   2caa4:	880b883a 	mov	r5,r17
   2caa8:	a8800005 	stb	r2,0(r21)
   2caac:	01800284 	movi	r6,10
   2cab0:	000f883a 	mov	r7,zero
   2cab4:	002ec400 	call	2ec40 <__udivdi3>
   2cab8:	1021883a 	mov	r16,r2
   2cabc:	10c4b03a 	or	r2,r2,r3
   2cac0:	1823883a 	mov	r17,r3
   2cac4:	103fef1e 	bne	r2,zero,2ca84 <__alt_data_end+0xfffed684>
   2cac8:	dc402417 	ldw	r17,144(sp)
   2cacc:	dc002517 	ldw	r16,148(sp)
   2cad0:	9013883a 	mov	r9,r18
   2cad4:	9811883a 	mov	r8,r19
   2cad8:	da801e17 	ldw	r10,120(sp)
   2cadc:	5567c83a 	sub	r19,r10,r21
   2cae0:	003ede06 	br	2c65c <__alt_data_end+0xfffed25c>
   2cae4:	38803fcc 	andi	r2,r7,255
   2cae8:	1080201c 	xori	r2,r2,128
   2caec:	10bfe004 	addi	r2,r2,-128
   2caf0:	1002371e 	bne	r2,zero,2d3d0 <___vfiprintf_internal_r+0x1174>
   2caf4:	01000044 	movi	r4,1
   2caf8:	01c00804 	movi	r7,32
   2cafc:	80c00007 	ldb	r3,0(r16)
   2cb00:	003e3506 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cb04:	a5000054 	ori	r20,r20,1
   2cb08:	80c00007 	ldb	r3,0(r16)
   2cb0c:	003e3206 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cb10:	a5002014 	ori	r20,r20,128
   2cb14:	80c00007 	ldb	r3,0(r16)
   2cb18:	003e2f06 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cb1c:	8015883a 	mov	r10,r16
   2cb20:	0023883a 	mov	r17,zero
   2cb24:	18bff404 	addi	r2,r3,-48
   2cb28:	50c00007 	ldb	r3,0(r10)
   2cb2c:	8c4002a4 	muli	r17,r17,10
   2cb30:	84000044 	addi	r16,r16,1
   2cb34:	8015883a 	mov	r10,r16
   2cb38:	1463883a 	add	r17,r2,r17
   2cb3c:	18bff404 	addi	r2,r3,-48
   2cb40:	30bff92e 	bgeu	r6,r2,2cb28 <__alt_data_end+0xfffed728>
   2cb44:	003e2506 	br	2c3dc <__alt_data_end+0xfffecfdc>
   2cb48:	21003fcc 	andi	r4,r4,255
   2cb4c:	2002d41e 	bne	r4,zero,2d6a0 <___vfiprintf_internal_r+0x1444>
   2cb50:	a5000414 	ori	r20,r20,16
   2cb54:	a080080c 	andi	r2,r20,32
   2cb58:	103fb51e 	bne	r2,zero,2ca30 <__alt_data_end+0xfffed630>
   2cb5c:	a080040c 	andi	r2,r20,16
   2cb60:	1001f826 	beq	r2,zero,2d344 <___vfiprintf_internal_r+0x10e8>
   2cb64:	da802217 	ldw	r10,136(sp)
   2cb68:	54800017 	ldw	r18,0(r10)
   2cb6c:	52800104 	addi	r10,r10,4
   2cb70:	da802215 	stw	r10,136(sp)
   2cb74:	9027d7fa 	srai	r19,r18,31
   2cb78:	9805883a 	mov	r2,r19
   2cb7c:	003fb206 	br	2ca48 <__alt_data_end+0xfffed648>
   2cb80:	21003fcc 	andi	r4,r4,255
   2cb84:	2002c41e 	bne	r4,zero,2d698 <___vfiprintf_internal_r+0x143c>
   2cb88:	a5000414 	ori	r20,r20,16
   2cb8c:	a080080c 	andi	r2,r20,32
   2cb90:	103f5f1e 	bne	r2,zero,2c910 <__alt_data_end+0xfffed510>
   2cb94:	a080040c 	andi	r2,r20,16
   2cb98:	10020f26 	beq	r2,zero,2d3d8 <___vfiprintf_internal_r+0x117c>
   2cb9c:	da802217 	ldw	r10,136(sp)
   2cba0:	d8001d85 	stb	zero,118(sp)
   2cba4:	0027883a 	mov	r19,zero
   2cba8:	50800104 	addi	r2,r10,4
   2cbac:	54800017 	ldw	r18,0(r10)
   2cbb0:	48021116 	blt	r9,zero,2d3f8 <___vfiprintf_internal_r+0x119c>
   2cbb4:	00ffdfc4 	movi	r3,-129
   2cbb8:	d8802215 	stw	r2,136(sp)
   2cbbc:	a0e8703a 	and	r20,r20,r3
   2cbc0:	903f5e1e 	bne	r18,zero,2c93c <__alt_data_end+0xfffed53c>
   2cbc4:	0039883a 	mov	fp,zero
   2cbc8:	4802a626 	beq	r9,zero,2d664 <___vfiprintf_internal_r+0x1408>
   2cbcc:	0025883a 	mov	r18,zero
   2cbd0:	0027883a 	mov	r19,zero
   2cbd4:	003f5a06 	br	2c940 <__alt_data_end+0xfffed540>
   2cbd8:	21003fcc 	andi	r4,r4,255
   2cbdc:	20029f1e 	bne	r4,zero,2d65c <___vfiprintf_internal_r+0x1400>
   2cbe0:	a5000414 	ori	r20,r20,16
   2cbe4:	a080080c 	andi	r2,r20,32
   2cbe8:	10005e1e 	bne	r2,zero,2cd64 <___vfiprintf_internal_r+0xb08>
   2cbec:	a080040c 	andi	r2,r20,16
   2cbf0:	1001a21e 	bne	r2,zero,2d27c <___vfiprintf_internal_r+0x1020>
   2cbf4:	a080100c 	andi	r2,r20,64
   2cbf8:	d8001d85 	stb	zero,118(sp)
   2cbfc:	da802217 	ldw	r10,136(sp)
   2cc00:	1002231e 	bne	r2,zero,2d490 <___vfiprintf_internal_r+0x1234>
   2cc04:	50800104 	addi	r2,r10,4
   2cc08:	54800017 	ldw	r18,0(r10)
   2cc0c:	0027883a 	mov	r19,zero
   2cc10:	4801a00e 	bge	r9,zero,2d294 <___vfiprintf_internal_r+0x1038>
   2cc14:	d8802215 	stw	r2,136(sp)
   2cc18:	0039883a 	mov	fp,zero
   2cc1c:	94c4b03a 	or	r2,r18,r19
   2cc20:	103f901e 	bne	r2,zero,2ca64 <__alt_data_end+0xfffed664>
   2cc24:	00800044 	movi	r2,1
   2cc28:	10803fcc 	andi	r2,r2,255
   2cc2c:	00c00044 	movi	r3,1
   2cc30:	10c05926 	beq	r2,r3,2cd98 <___vfiprintf_internal_r+0xb3c>
   2cc34:	00c00084 	movi	r3,2
   2cc38:	10ffe41e 	bne	r2,r3,2cbcc <__alt_data_end+0xfffed7cc>
   2cc3c:	0025883a 	mov	r18,zero
   2cc40:	0027883a 	mov	r19,zero
   2cc44:	00013d06 	br	2d13c <___vfiprintf_internal_r+0xee0>
   2cc48:	21003fcc 	andi	r4,r4,255
   2cc4c:	2002811e 	bne	r4,zero,2d654 <___vfiprintf_internal_r+0x13f8>
   2cc50:	008000f4 	movhi	r2,3
   2cc54:	1088eb04 	addi	r2,r2,9132
   2cc58:	d8802615 	stw	r2,152(sp)
   2cc5c:	a080080c 	andi	r2,r20,32
   2cc60:	103f561e 	bne	r2,zero,2c9bc <__alt_data_end+0xfffed5bc>
   2cc64:	a080040c 	andi	r2,r20,16
   2cc68:	1001d126 	beq	r2,zero,2d3b0 <___vfiprintf_internal_r+0x1154>
   2cc6c:	da802217 	ldw	r10,136(sp)
   2cc70:	0027883a 	mov	r19,zero
   2cc74:	54800017 	ldw	r18,0(r10)
   2cc78:	52800104 	addi	r10,r10,4
   2cc7c:	da802215 	stw	r10,136(sp)
   2cc80:	003f5306 	br	2c9d0 <__alt_data_end+0xfffed5d0>
   2cc84:	da802217 	ldw	r10,136(sp)
   2cc88:	d8001d85 	stb	zero,118(sp)
   2cc8c:	55400017 	ldw	r21,0(r10)
   2cc90:	50c00104 	addi	r3,r10,4
   2cc94:	a8024226 	beq	r21,zero,2d5a0 <___vfiprintf_internal_r+0x1344>
   2cc98:	48021816 	blt	r9,zero,2d4fc <___vfiprintf_internal_r+0x12a0>
   2cc9c:	480d883a 	mov	r6,r9
   2cca0:	000b883a 	mov	r5,zero
   2cca4:	a809883a 	mov	r4,r21
   2cca8:	d8c02a15 	stw	r3,168(sp)
   2ccac:	da002b15 	stw	r8,172(sp)
   2ccb0:	da402c15 	stw	r9,176(sp)
   2ccb4:	002aa800 	call	2aa80 <memchr>
   2ccb8:	d8c02a17 	ldw	r3,168(sp)
   2ccbc:	da002b17 	ldw	r8,172(sp)
   2ccc0:	da402c17 	ldw	r9,176(sp)
   2ccc4:	10024826 	beq	r2,zero,2d5e8 <___vfiprintf_internal_r+0x138c>
   2ccc8:	1567c83a 	sub	r19,r2,r21
   2cccc:	df001d83 	ldbu	fp,118(sp)
   2ccd0:	d8c02215 	stw	r3,136(sp)
   2ccd4:	0013883a 	mov	r9,zero
   2ccd8:	003e6006 	br	2c65c <__alt_data_end+0xfffed25c>
   2ccdc:	21003fcc 	andi	r4,r4,255
   2cce0:	203fc026 	beq	r4,zero,2cbe4 <__alt_data_end+0xfffed7e4>
   2cce4:	d9c01d85 	stb	r7,118(sp)
   2cce8:	003fbe06 	br	2cbe4 <__alt_data_end+0xfffed7e4>
   2ccec:	da802217 	ldw	r10,136(sp)
   2ccf0:	54400017 	ldw	r17,0(r10)
   2ccf4:	50800104 	addi	r2,r10,4
   2ccf8:	883e3b16 	blt	r17,zero,2c5e8 <__alt_data_end+0xfffed1e8>
   2ccfc:	d8802215 	stw	r2,136(sp)
   2cd00:	80c00007 	ldb	r3,0(r16)
   2cd04:	003db406 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cd08:	01000044 	movi	r4,1
   2cd0c:	01c00ac4 	movi	r7,43
   2cd10:	80c00007 	ldb	r3,0(r16)
   2cd14:	003db006 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cd18:	80c00007 	ldb	r3,0(r16)
   2cd1c:	82800044 	addi	r10,r16,1
   2cd20:	1b423c26 	beq	r3,r13,2d614 <___vfiprintf_internal_r+0x13b8>
   2cd24:	18bff404 	addi	r2,r3,-48
   2cd28:	0013883a 	mov	r9,zero
   2cd2c:	30822b36 	bltu	r6,r2,2d5dc <___vfiprintf_internal_r+0x1380>
   2cd30:	50c00007 	ldb	r3,0(r10)
   2cd34:	4a4002a4 	muli	r9,r9,10
   2cd38:	54000044 	addi	r16,r10,1
   2cd3c:	8015883a 	mov	r10,r16
   2cd40:	4893883a 	add	r9,r9,r2
   2cd44:	18bff404 	addi	r2,r3,-48
   2cd48:	30bff92e 	bgeu	r6,r2,2cd30 <__alt_data_end+0xfffed930>
   2cd4c:	483da30e 	bge	r9,zero,2c3dc <__alt_data_end+0xfffecfdc>
   2cd50:	027fffc4 	movi	r9,-1
   2cd54:	003da106 	br	2c3dc <__alt_data_end+0xfffecfdc>
   2cd58:	a5001014 	ori	r20,r20,64
   2cd5c:	80c00007 	ldb	r3,0(r16)
   2cd60:	003d9d06 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2cd64:	da802217 	ldw	r10,136(sp)
   2cd68:	d8001d85 	stb	zero,118(sp)
   2cd6c:	50c00204 	addi	r3,r10,8
   2cd70:	54800017 	ldw	r18,0(r10)
   2cd74:	54c00117 	ldw	r19,4(r10)
   2cd78:	4801ca16 	blt	r9,zero,2d4a4 <___vfiprintf_internal_r+0x1248>
   2cd7c:	013fdfc4 	movi	r4,-129
   2cd80:	94c4b03a 	or	r2,r18,r19
   2cd84:	d8c02215 	stw	r3,136(sp)
   2cd88:	a128703a 	and	r20,r20,r4
   2cd8c:	0039883a 	mov	fp,zero
   2cd90:	103f341e 	bne	r2,zero,2ca64 <__alt_data_end+0xfffed664>
   2cd94:	483e2e26 	beq	r9,zero,2c650 <__alt_data_end+0xfffed250>
   2cd98:	0025883a 	mov	r18,zero
   2cd9c:	94800c04 	addi	r18,r18,48
   2cda0:	dc8019c5 	stb	r18,103(sp)
   2cda4:	dcc02717 	ldw	r19,156(sp)
   2cda8:	dd4019c4 	addi	r21,sp,103
   2cdac:	003e2b06 	br	2c65c <__alt_data_end+0xfffed25c>
   2cdb0:	21003fcc 	andi	r4,r4,255
   2cdb4:	2002361e 	bne	r4,zero,2d690 <___vfiprintf_internal_r+0x1434>
   2cdb8:	1801c126 	beq	r3,zero,2d4c0 <___vfiprintf_internal_r+0x1264>
   2cdbc:	04800044 	movi	r18,1
   2cdc0:	d8c01005 	stb	r3,64(sp)
   2cdc4:	d8001d85 	stb	zero,118(sp)
   2cdc8:	9027883a 	mov	r19,r18
   2cdcc:	dd401004 	addi	r21,sp,64
   2cdd0:	003f1106 	br	2ca18 <__alt_data_end+0xfffed618>
   2cdd4:	d9402117 	ldw	r5,132(sp)
   2cdd8:	d9002017 	ldw	r4,128(sp)
   2cddc:	d9801a04 	addi	r6,sp,104
   2cde0:	d9c02b15 	stw	r7,172(sp)
   2cde4:	dbc02a15 	stw	r15,168(sp)
   2cde8:	002c1480 	call	2c148 <__sprint_r.part.0>
   2cdec:	d9c02b17 	ldw	r7,172(sp)
   2cdf0:	dbc02a17 	ldw	r15,168(sp)
   2cdf4:	10006d1e 	bne	r2,zero,2cfac <___vfiprintf_internal_r+0xd50>
   2cdf8:	d9801b17 	ldw	r6,108(sp)
   2cdfc:	d8801c17 	ldw	r2,112(sp)
   2ce00:	d811883a 	mov	r8,sp
   2ce04:	31400044 	addi	r5,r6,1
   2ce08:	003e3306 	br	2c6d8 <__alt_data_end+0xfffed2d8>
   2ce0c:	d9401b17 	ldw	r5,108(sp)
   2ce10:	d8801c17 	ldw	r2,112(sp)
   2ce14:	29000044 	addi	r4,r5,1
   2ce18:	d8c01d87 	ldb	r3,118(sp)
   2ce1c:	183e4d26 	beq	r3,zero,2c754 <__alt_data_end+0xfffed354>
   2ce20:	00c00044 	movi	r3,1
   2ce24:	d9401d84 	addi	r5,sp,118
   2ce28:	10c5883a 	add	r2,r2,r3
   2ce2c:	41400015 	stw	r5,0(r8)
   2ce30:	40c00115 	stw	r3,4(r8)
   2ce34:	d8801c15 	stw	r2,112(sp)
   2ce38:	d9001b15 	stw	r4,108(sp)
   2ce3c:	014001c4 	movi	r5,7
   2ce40:	2900a90e 	bge	r5,r4,2d0e8 <___vfiprintf_internal_r+0xe8c>
   2ce44:	1000da1e 	bne	r2,zero,2d1b0 <___vfiprintf_internal_r+0xf54>
   2ce48:	7000ab1e 	bne	r14,zero,2d0f8 <___vfiprintf_internal_r+0xe9c>
   2ce4c:	000b883a 	mov	r5,zero
   2ce50:	1809883a 	mov	r4,r3
   2ce54:	d811883a 	mov	r8,sp
   2ce58:	00c02004 	movi	r3,128
   2ce5c:	e0fe4d26 	beq	fp,r3,2c794 <__alt_data_end+0xfffed394>
   2ce60:	4cf9c83a 	sub	fp,r9,r19
   2ce64:	073e7b0e 	bge	zero,fp,2c854 <__alt_data_end+0xfffed454>
   2ce68:	01c00404 	movi	r7,16
   2ce6c:	3f01900e 	bge	r7,fp,2d4b0 <___vfiprintf_internal_r+0x1254>
   2ce70:	00c000f4 	movhi	r3,3
   2ce74:	18c95004 	addi	r3,r3,9536
   2ce78:	d8c02415 	stw	r3,144(sp)
   2ce7c:	034001c4 	movi	r13,7
   2ce80:	00000506 	br	2ce98 <___vfiprintf_internal_r+0xc3c>
   2ce84:	29000084 	addi	r4,r5,2
   2ce88:	42000204 	addi	r8,r8,8
   2ce8c:	180b883a 	mov	r5,r3
   2ce90:	e73ffc04 	addi	fp,fp,-16
   2ce94:	3f000d0e 	bge	r7,fp,2cecc <___vfiprintf_internal_r+0xc70>
   2ce98:	10800404 	addi	r2,r2,16
   2ce9c:	28c00044 	addi	r3,r5,1
   2cea0:	45c00015 	stw	r23,0(r8)
   2cea4:	41c00115 	stw	r7,4(r8)
   2cea8:	d8801c15 	stw	r2,112(sp)
   2ceac:	d8c01b15 	stw	r3,108(sp)
   2ceb0:	68fff40e 	bge	r13,r3,2ce84 <__alt_data_end+0xfffeda84>
   2ceb4:	1000101e 	bne	r2,zero,2cef8 <___vfiprintf_internal_r+0xc9c>
   2ceb8:	e73ffc04 	addi	fp,fp,-16
   2cebc:	01000044 	movi	r4,1
   2cec0:	000b883a 	mov	r5,zero
   2cec4:	d811883a 	mov	r8,sp
   2cec8:	3f3ff316 	blt	r7,fp,2ce98 <__alt_data_end+0xfffeda98>
   2cecc:	da802417 	ldw	r10,144(sp)
   2ced0:	1705883a 	add	r2,r2,fp
   2ced4:	47000115 	stw	fp,4(r8)
   2ced8:	42800015 	stw	r10,0(r8)
   2cedc:	d8801c15 	stw	r2,112(sp)
   2cee0:	d9001b15 	stw	r4,108(sp)
   2cee4:	00c001c4 	movi	r3,7
   2cee8:	19003616 	blt	r3,r4,2cfc4 <___vfiprintf_internal_r+0xd68>
   2ceec:	42000204 	addi	r8,r8,8
   2cef0:	21000044 	addi	r4,r4,1
   2cef4:	003e5706 	br	2c854 <__alt_data_end+0xfffed454>
   2cef8:	d9402117 	ldw	r5,132(sp)
   2cefc:	d9002017 	ldw	r4,128(sp)
   2cf00:	d9801a04 	addi	r6,sp,104
   2cf04:	d9c02b15 	stw	r7,172(sp)
   2cf08:	db402a15 	stw	r13,168(sp)
   2cf0c:	002c1480 	call	2c148 <__sprint_r.part.0>
   2cf10:	d9c02b17 	ldw	r7,172(sp)
   2cf14:	db402a17 	ldw	r13,168(sp)
   2cf18:	1000241e 	bne	r2,zero,2cfac <___vfiprintf_internal_r+0xd50>
   2cf1c:	d9401b17 	ldw	r5,108(sp)
   2cf20:	d8801c17 	ldw	r2,112(sp)
   2cf24:	d811883a 	mov	r8,sp
   2cf28:	29000044 	addi	r4,r5,1
   2cf2c:	003fd806 	br	2ce90 <__alt_data_end+0xfffeda90>
   2cf30:	d9401b17 	ldw	r5,108(sp)
   2cf34:	00c000f4 	movhi	r3,3
   2cf38:	18c95404 	addi	r3,r3,9552
   2cf3c:	d8c02415 	stw	r3,144(sp)
   2cf40:	29400044 	addi	r5,r5,1
   2cf44:	d8c02417 	ldw	r3,144(sp)
   2cf48:	14c5883a 	add	r2,r2,r19
   2cf4c:	44c00115 	stw	r19,4(r8)
   2cf50:	40c00015 	stw	r3,0(r8)
   2cf54:	d8801c15 	stw	r2,112(sp)
   2cf58:	d9401b15 	stw	r5,108(sp)
   2cf5c:	00c001c4 	movi	r3,7
   2cf60:	1940070e 	bge	r3,r5,2cf80 <___vfiprintf_internal_r+0xd24>
   2cf64:	103e4826 	beq	r2,zero,2c888 <__alt_data_end+0xfffed488>
   2cf68:	d9402117 	ldw	r5,132(sp)
   2cf6c:	d9002017 	ldw	r4,128(sp)
   2cf70:	d9801a04 	addi	r6,sp,104
   2cf74:	002c1480 	call	2c148 <__sprint_r.part.0>
   2cf78:	10000c1e 	bne	r2,zero,2cfac <___vfiprintf_internal_r+0xd50>
   2cf7c:	d8801c17 	ldw	r2,112(sp)
   2cf80:	8c80010e 	bge	r17,r18,2cf88 <___vfiprintf_internal_r+0xd2c>
   2cf84:	9023883a 	mov	r17,r18
   2cf88:	da802317 	ldw	r10,140(sp)
   2cf8c:	5455883a 	add	r10,r10,r17
   2cf90:	da802315 	stw	r10,140(sp)
   2cf94:	103e4126 	beq	r2,zero,2c89c <__alt_data_end+0xfffed49c>
   2cf98:	d9402117 	ldw	r5,132(sp)
   2cf9c:	d9002017 	ldw	r4,128(sp)
   2cfa0:	d9801a04 	addi	r6,sp,104
   2cfa4:	002c1480 	call	2c148 <__sprint_r.part.0>
   2cfa8:	103e3c26 	beq	r2,zero,2c89c <__alt_data_end+0xfffed49c>
   2cfac:	dd002117 	ldw	r20,132(sp)
   2cfb0:	a080030b 	ldhu	r2,12(r20)
   2cfb4:	1080100c 	andi	r2,r2,64
   2cfb8:	1001231e 	bne	r2,zero,2d448 <___vfiprintf_internal_r+0x11ec>
   2cfbc:	d8802317 	ldw	r2,140(sp)
   2cfc0:	003d7b06 	br	2c5b0 <__alt_data_end+0xfffed1b0>
   2cfc4:	1000991e 	bne	r2,zero,2d22c <___vfiprintf_internal_r+0xfd0>
   2cfc8:	00c00044 	movi	r3,1
   2cfcc:	9805883a 	mov	r2,r19
   2cfd0:	dd400015 	stw	r21,0(sp)
   2cfd4:	dcc00115 	stw	r19,4(sp)
   2cfd8:	dcc01c15 	stw	r19,112(sp)
   2cfdc:	d8c01b15 	stw	r3,108(sp)
   2cfe0:	d811883a 	mov	r8,sp
   2cfe4:	42000204 	addi	r8,r8,8
   2cfe8:	a2c0010c 	andi	r11,r20,4
   2cfec:	583fe426 	beq	r11,zero,2cf80 <__alt_data_end+0xfffedb80>
   2cff0:	8ca7c83a 	sub	r19,r17,r18
   2cff4:	04ffe20e 	bge	zero,r19,2cf80 <__alt_data_end+0xfffedb80>
   2cff8:	01c00404 	movi	r7,16
   2cffc:	3cffcc0e 	bge	r7,r19,2cf30 <__alt_data_end+0xfffedb30>
   2d000:	028000f4 	movhi	r10,3
   2d004:	52895404 	addi	r10,r10,9552
   2d008:	d9001b17 	ldw	r4,108(sp)
   2d00c:	da802415 	stw	r10,144(sp)
   2d010:	382b883a 	mov	r21,r7
   2d014:	050001c4 	movi	r20,7
   2d018:	df002017 	ldw	fp,128(sp)
   2d01c:	00000506 	br	2d034 <___vfiprintf_internal_r+0xdd8>
   2d020:	21400084 	addi	r5,r4,2
   2d024:	42000204 	addi	r8,r8,8
   2d028:	1809883a 	mov	r4,r3
   2d02c:	9cfffc04 	addi	r19,r19,-16
   2d030:	acffc40e 	bge	r21,r19,2cf44 <__alt_data_end+0xfffedb44>
   2d034:	10800404 	addi	r2,r2,16
   2d038:	20c00044 	addi	r3,r4,1
   2d03c:	45800015 	stw	r22,0(r8)
   2d040:	45400115 	stw	r21,4(r8)
   2d044:	d8801c15 	stw	r2,112(sp)
   2d048:	d8c01b15 	stw	r3,108(sp)
   2d04c:	a0fff40e 	bge	r20,r3,2d020 <__alt_data_end+0xfffedc20>
   2d050:	1000041e 	bne	r2,zero,2d064 <___vfiprintf_internal_r+0xe08>
   2d054:	01400044 	movi	r5,1
   2d058:	0009883a 	mov	r4,zero
   2d05c:	d811883a 	mov	r8,sp
   2d060:	003ff206 	br	2d02c <__alt_data_end+0xfffedc2c>
   2d064:	d9402117 	ldw	r5,132(sp)
   2d068:	d9801a04 	addi	r6,sp,104
   2d06c:	e009883a 	mov	r4,fp
   2d070:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d074:	103fcd1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d078:	d9001b17 	ldw	r4,108(sp)
   2d07c:	d8801c17 	ldw	r2,112(sp)
   2d080:	d811883a 	mov	r8,sp
   2d084:	21400044 	addi	r5,r4,1
   2d088:	003fe806 	br	2d02c <__alt_data_end+0xfffedc2c>
   2d08c:	d9402117 	ldw	r5,132(sp)
   2d090:	d9002017 	ldw	r4,128(sp)
   2d094:	d9801a04 	addi	r6,sp,104
   2d098:	d9c02b15 	stw	r7,172(sp)
   2d09c:	db402a15 	stw	r13,168(sp)
   2d0a0:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d0a4:	d9c02b17 	ldw	r7,172(sp)
   2d0a8:	db402a17 	ldw	r13,168(sp)
   2d0ac:	103fbf1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d0b0:	d9401b17 	ldw	r5,108(sp)
   2d0b4:	d8801c17 	ldw	r2,112(sp)
   2d0b8:	d811883a 	mov	r8,sp
   2d0bc:	29800044 	addi	r6,r5,1
   2d0c0:	003dc406 	br	2c7d4 <__alt_data_end+0xfffed3d4>
   2d0c4:	1000d21e 	bne	r2,zero,2d410 <___vfiprintf_internal_r+0x11b4>
   2d0c8:	d8c01d87 	ldb	r3,118(sp)
   2d0cc:	18009526 	beq	r3,zero,2d324 <___vfiprintf_internal_r+0x10c8>
   2d0d0:	00800044 	movi	r2,1
   2d0d4:	d8c01d84 	addi	r3,sp,118
   2d0d8:	1009883a 	mov	r4,r2
   2d0dc:	d8c00015 	stw	r3,0(sp)
   2d0e0:	d8800115 	stw	r2,4(sp)
   2d0e4:	d811883a 	mov	r8,sp
   2d0e8:	200b883a 	mov	r5,r4
   2d0ec:	42000204 	addi	r8,r8,8
   2d0f0:	21000044 	addi	r4,r4,1
   2d0f4:	003d9706 	br	2c754 <__alt_data_end+0xfffed354>
   2d0f8:	d9001d04 	addi	r4,sp,116
   2d0fc:	00800084 	movi	r2,2
   2d100:	d9000015 	stw	r4,0(sp)
   2d104:	d8800115 	stw	r2,4(sp)
   2d108:	1809883a 	mov	r4,r3
   2d10c:	d811883a 	mov	r8,sp
   2d110:	200b883a 	mov	r5,r4
   2d114:	42000204 	addi	r8,r8,8
   2d118:	21000044 	addi	r4,r4,1
   2d11c:	003f4e06 	br	2ce58 <__alt_data_end+0xfffeda58>
   2d120:	d8001d85 	stb	zero,118(sp)
   2d124:	48005016 	blt	r9,zero,2d268 <___vfiprintf_internal_r+0x100c>
   2d128:	00ffdfc4 	movi	r3,-129
   2d12c:	94c4b03a 	or	r2,r18,r19
   2d130:	a0e8703a 	and	r20,r20,r3
   2d134:	103d4426 	beq	r2,zero,2c648 <__alt_data_end+0xfffed248>
   2d138:	0039883a 	mov	fp,zero
   2d13c:	d9002617 	ldw	r4,152(sp)
   2d140:	dd401a04 	addi	r21,sp,104
   2d144:	908003cc 	andi	r2,r18,15
   2d148:	9806973a 	slli	r3,r19,28
   2d14c:	2085883a 	add	r2,r4,r2
   2d150:	9024d13a 	srli	r18,r18,4
   2d154:	10800003 	ldbu	r2,0(r2)
   2d158:	9826d13a 	srli	r19,r19,4
   2d15c:	ad7fffc4 	addi	r21,r21,-1
   2d160:	1ca4b03a 	or	r18,r3,r18
   2d164:	a8800005 	stb	r2,0(r21)
   2d168:	94c4b03a 	or	r2,r18,r19
   2d16c:	103ff51e 	bne	r2,zero,2d144 <__alt_data_end+0xfffedd44>
   2d170:	003e5906 	br	2cad8 <__alt_data_end+0xfffed6d8>
   2d174:	d9402117 	ldw	r5,132(sp)
   2d178:	d9002017 	ldw	r4,128(sp)
   2d17c:	d9801a04 	addi	r6,sp,104
   2d180:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d184:	103f891e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d188:	d8801c17 	ldw	r2,112(sp)
   2d18c:	d811883a 	mov	r8,sp
   2d190:	003f9506 	br	2cfe8 <__alt_data_end+0xfffedbe8>
   2d194:	d9402117 	ldw	r5,132(sp)
   2d198:	d9002017 	ldw	r4,128(sp)
   2d19c:	d9801a04 	addi	r6,sp,104
   2d1a0:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d1a4:	103f811e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d1a8:	d811883a 	mov	r8,sp
   2d1ac:	003ced06 	br	2c564 <__alt_data_end+0xfffed164>
   2d1b0:	d9402117 	ldw	r5,132(sp)
   2d1b4:	d9002017 	ldw	r4,128(sp)
   2d1b8:	d9801a04 	addi	r6,sp,104
   2d1bc:	da402c15 	stw	r9,176(sp)
   2d1c0:	db802a15 	stw	r14,168(sp)
   2d1c4:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d1c8:	da402c17 	ldw	r9,176(sp)
   2d1cc:	db802a17 	ldw	r14,168(sp)
   2d1d0:	103f761e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d1d4:	d9401b17 	ldw	r5,108(sp)
   2d1d8:	d8801c17 	ldw	r2,112(sp)
   2d1dc:	d811883a 	mov	r8,sp
   2d1e0:	29000044 	addi	r4,r5,1
   2d1e4:	003d5b06 	br	2c754 <__alt_data_end+0xfffed354>
   2d1e8:	d9402117 	ldw	r5,132(sp)
   2d1ec:	d9002017 	ldw	r4,128(sp)
   2d1f0:	d9801a04 	addi	r6,sp,104
   2d1f4:	da402c15 	stw	r9,176(sp)
   2d1f8:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d1fc:	da402c17 	ldw	r9,176(sp)
   2d200:	103f6a1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d204:	d9401b17 	ldw	r5,108(sp)
   2d208:	d8801c17 	ldw	r2,112(sp)
   2d20c:	d811883a 	mov	r8,sp
   2d210:	29000044 	addi	r4,r5,1
   2d214:	003f1006 	br	2ce58 <__alt_data_end+0xfffeda58>
   2d218:	1000c31e 	bne	r2,zero,2d528 <___vfiprintf_internal_r+0x12cc>
   2d21c:	01000044 	movi	r4,1
   2d220:	000b883a 	mov	r5,zero
   2d224:	d811883a 	mov	r8,sp
   2d228:	003f0d06 	br	2ce60 <__alt_data_end+0xfffeda60>
   2d22c:	d9402117 	ldw	r5,132(sp)
   2d230:	d9002017 	ldw	r4,128(sp)
   2d234:	d9801a04 	addi	r6,sp,104
   2d238:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d23c:	103f5b1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d240:	d9001b17 	ldw	r4,108(sp)
   2d244:	d8801c17 	ldw	r2,112(sp)
   2d248:	d811883a 	mov	r8,sp
   2d24c:	21000044 	addi	r4,r4,1
   2d250:	003d8006 	br	2c854 <__alt_data_end+0xfffed454>
   2d254:	010000f4 	movhi	r4,3
   2d258:	2108f004 	addi	r4,r4,9152
   2d25c:	d9002615 	stw	r4,152(sp)
   2d260:	d8c02215 	stw	r3,136(sp)
   2d264:	1029883a 	mov	r20,r2
   2d268:	94c4b03a 	or	r2,r18,r19
   2d26c:	103fb21e 	bne	r2,zero,2d138 <__alt_data_end+0xfffedd38>
   2d270:	0039883a 	mov	fp,zero
   2d274:	00800084 	movi	r2,2
   2d278:	003e6b06 	br	2cc28 <__alt_data_end+0xfffed828>
   2d27c:	da802217 	ldw	r10,136(sp)
   2d280:	d8001d85 	stb	zero,118(sp)
   2d284:	0027883a 	mov	r19,zero
   2d288:	50800104 	addi	r2,r10,4
   2d28c:	54800017 	ldw	r18,0(r10)
   2d290:	483e6016 	blt	r9,zero,2cc14 <__alt_data_end+0xfffed814>
   2d294:	00ffdfc4 	movi	r3,-129
   2d298:	d8802215 	stw	r2,136(sp)
   2d29c:	a0e8703a 	and	r20,r20,r3
   2d2a0:	0039883a 	mov	fp,zero
   2d2a4:	903ebb26 	beq	r18,zero,2cd94 <__alt_data_end+0xfffed994>
   2d2a8:	00800244 	movi	r2,9
   2d2ac:	14bdee36 	bltu	r2,r18,2ca68 <__alt_data_end+0xfffed668>
   2d2b0:	003eba06 	br	2cd9c <__alt_data_end+0xfffed99c>
   2d2b4:	00800c04 	movi	r2,48
   2d2b8:	d8c01d45 	stb	r3,117(sp)
   2d2bc:	d8801d05 	stb	r2,116(sp)
   2d2c0:	d8001d85 	stb	zero,118(sp)
   2d2c4:	a0c00094 	ori	r3,r20,2
   2d2c8:	4800a916 	blt	r9,zero,2d570 <___vfiprintf_internal_r+0x1314>
   2d2cc:	00bfdfc4 	movi	r2,-129
   2d2d0:	a096703a 	and	r11,r20,r2
   2d2d4:	5d000094 	ori	r20,r11,2
   2d2d8:	0039883a 	mov	fp,zero
   2d2dc:	003f9706 	br	2d13c <__alt_data_end+0xfffedd3c>
   2d2e0:	8025883a 	mov	r18,r16
   2d2e4:	003c2e06 	br	2c3a0 <__alt_data_end+0xfffecfa0>
   2d2e8:	008000f4 	movhi	r2,3
   2d2ec:	1088f004 	addi	r2,r2,9152
   2d2f0:	0039883a 	mov	fp,zero
   2d2f4:	d8802615 	stw	r2,152(sp)
   2d2f8:	003f9006 	br	2d13c <__alt_data_end+0xfffedd3c>
   2d2fc:	04a5c83a 	sub	r18,zero,r18
   2d300:	07000b44 	movi	fp,45
   2d304:	9004c03a 	cmpne	r2,r18,zero
   2d308:	04e7c83a 	sub	r19,zero,r19
   2d30c:	df001d85 	stb	fp,118(sp)
   2d310:	98a7c83a 	sub	r19,r19,r2
   2d314:	48009f16 	blt	r9,zero,2d594 <___vfiprintf_internal_r+0x1338>
   2d318:	00bfdfc4 	movi	r2,-129
   2d31c:	a0a8703a 	and	r20,r20,r2
   2d320:	003dd006 	br	2ca64 <__alt_data_end+0xfffed664>
   2d324:	70004c26 	beq	r14,zero,2d458 <___vfiprintf_internal_r+0x11fc>
   2d328:	00800084 	movi	r2,2
   2d32c:	d8c01d04 	addi	r3,sp,116
   2d330:	d8c00015 	stw	r3,0(sp)
   2d334:	d8800115 	stw	r2,4(sp)
   2d338:	01000044 	movi	r4,1
   2d33c:	d811883a 	mov	r8,sp
   2d340:	003f7306 	br	2d110 <__alt_data_end+0xfffedd10>
   2d344:	a080100c 	andi	r2,r20,64
   2d348:	da802217 	ldw	r10,136(sp)
   2d34c:	103e0626 	beq	r2,zero,2cb68 <__alt_data_end+0xfffed768>
   2d350:	5480000f 	ldh	r18,0(r10)
   2d354:	52800104 	addi	r10,r10,4
   2d358:	da802215 	stw	r10,136(sp)
   2d35c:	9027d7fa 	srai	r19,r18,31
   2d360:	9805883a 	mov	r2,r19
   2d364:	003db806 	br	2ca48 <__alt_data_end+0xfffed648>
   2d368:	a080040c 	andi	r2,r20,16
   2d36c:	1000091e 	bne	r2,zero,2d394 <___vfiprintf_internal_r+0x1138>
   2d370:	a2c0100c 	andi	r11,r20,64
   2d374:	58000726 	beq	r11,zero,2d394 <___vfiprintf_internal_r+0x1138>
   2d378:	da802217 	ldw	r10,136(sp)
   2d37c:	50800017 	ldw	r2,0(r10)
   2d380:	52800104 	addi	r10,r10,4
   2d384:	da802215 	stw	r10,136(sp)
   2d388:	da802317 	ldw	r10,140(sp)
   2d38c:	1280000d 	sth	r10,0(r2)
   2d390:	003be706 	br	2c330 <__alt_data_end+0xfffecf30>
   2d394:	da802217 	ldw	r10,136(sp)
   2d398:	50800017 	ldw	r2,0(r10)
   2d39c:	52800104 	addi	r10,r10,4
   2d3a0:	da802215 	stw	r10,136(sp)
   2d3a4:	da802317 	ldw	r10,140(sp)
   2d3a8:	12800015 	stw	r10,0(r2)
   2d3ac:	003be006 	br	2c330 <__alt_data_end+0xfffecf30>
   2d3b0:	a080100c 	andi	r2,r20,64
   2d3b4:	da802217 	ldw	r10,136(sp)
   2d3b8:	10003026 	beq	r2,zero,2d47c <___vfiprintf_internal_r+0x1220>
   2d3bc:	5480000b 	ldhu	r18,0(r10)
   2d3c0:	52800104 	addi	r10,r10,4
   2d3c4:	0027883a 	mov	r19,zero
   2d3c8:	da802215 	stw	r10,136(sp)
   2d3cc:	003d8006 	br	2c9d0 <__alt_data_end+0xfffed5d0>
   2d3d0:	80c00007 	ldb	r3,0(r16)
   2d3d4:	003c0006 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2d3d8:	a080100c 	andi	r2,r20,64
   2d3dc:	d8001d85 	stb	zero,118(sp)
   2d3e0:	da802217 	ldw	r10,136(sp)
   2d3e4:	1000201e 	bne	r2,zero,2d468 <___vfiprintf_internal_r+0x120c>
   2d3e8:	50800104 	addi	r2,r10,4
   2d3ec:	54800017 	ldw	r18,0(r10)
   2d3f0:	0027883a 	mov	r19,zero
   2d3f4:	483def0e 	bge	r9,zero,2cbb4 <__alt_data_end+0xfffed7b4>
   2d3f8:	94c6b03a 	or	r3,r18,r19
   2d3fc:	d8802215 	stw	r2,136(sp)
   2d400:	183d4e1e 	bne	r3,zero,2c93c <__alt_data_end+0xfffed53c>
   2d404:	0039883a 	mov	fp,zero
   2d408:	0005883a 	mov	r2,zero
   2d40c:	003e0606 	br	2cc28 <__alt_data_end+0xfffed828>
   2d410:	d9402117 	ldw	r5,132(sp)
   2d414:	d9002017 	ldw	r4,128(sp)
   2d418:	d9801a04 	addi	r6,sp,104
   2d41c:	da402c15 	stw	r9,176(sp)
   2d420:	db802a15 	stw	r14,168(sp)
   2d424:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d428:	da402c17 	ldw	r9,176(sp)
   2d42c:	db802a17 	ldw	r14,168(sp)
   2d430:	103ede1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d434:	d9401b17 	ldw	r5,108(sp)
   2d438:	d8801c17 	ldw	r2,112(sp)
   2d43c:	d811883a 	mov	r8,sp
   2d440:	29000044 	addi	r4,r5,1
   2d444:	003e7406 	br	2ce18 <__alt_data_end+0xfffeda18>
   2d448:	00bfffc4 	movi	r2,-1
   2d44c:	003c5806 	br	2c5b0 <__alt_data_end+0xfffed1b0>
   2d450:	d811883a 	mov	r8,sp
   2d454:	003ee806 	br	2cff8 <__alt_data_end+0xfffedbf8>
   2d458:	000b883a 	mov	r5,zero
   2d45c:	01000044 	movi	r4,1
   2d460:	d811883a 	mov	r8,sp
   2d464:	003e7c06 	br	2ce58 <__alt_data_end+0xfffeda58>
   2d468:	50800104 	addi	r2,r10,4
   2d46c:	5480000b 	ldhu	r18,0(r10)
   2d470:	0027883a 	mov	r19,zero
   2d474:	483dcf0e 	bge	r9,zero,2cbb4 <__alt_data_end+0xfffed7b4>
   2d478:	003fdf06 	br	2d3f8 <__alt_data_end+0xfffedff8>
   2d47c:	54800017 	ldw	r18,0(r10)
   2d480:	52800104 	addi	r10,r10,4
   2d484:	0027883a 	mov	r19,zero
   2d488:	da802215 	stw	r10,136(sp)
   2d48c:	003d5006 	br	2c9d0 <__alt_data_end+0xfffed5d0>
   2d490:	50800104 	addi	r2,r10,4
   2d494:	5480000b 	ldhu	r18,0(r10)
   2d498:	0027883a 	mov	r19,zero
   2d49c:	483f7d0e 	bge	r9,zero,2d294 <__alt_data_end+0xfffede94>
   2d4a0:	003ddc06 	br	2cc14 <__alt_data_end+0xfffed814>
   2d4a4:	d8c02215 	stw	r3,136(sp)
   2d4a8:	0039883a 	mov	fp,zero
   2d4ac:	003ddb06 	br	2cc1c <__alt_data_end+0xfffed81c>
   2d4b0:	028000f4 	movhi	r10,3
   2d4b4:	52895004 	addi	r10,r10,9536
   2d4b8:	da802415 	stw	r10,144(sp)
   2d4bc:	003e8306 	br	2cecc <__alt_data_end+0xfffedacc>
   2d4c0:	d8801c17 	ldw	r2,112(sp)
   2d4c4:	dd002117 	ldw	r20,132(sp)
   2d4c8:	103eb926 	beq	r2,zero,2cfb0 <__alt_data_end+0xfffedbb0>
   2d4cc:	d9002017 	ldw	r4,128(sp)
   2d4d0:	d9801a04 	addi	r6,sp,104
   2d4d4:	a00b883a 	mov	r5,r20
   2d4d8:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d4dc:	003eb406 	br	2cfb0 <__alt_data_end+0xfffedbb0>
   2d4e0:	80c00043 	ldbu	r3,1(r16)
   2d4e4:	a5000814 	ori	r20,r20,32
   2d4e8:	84000044 	addi	r16,r16,1
   2d4ec:	18c03fcc 	andi	r3,r3,255
   2d4f0:	18c0201c 	xori	r3,r3,128
   2d4f4:	18ffe004 	addi	r3,r3,-128
   2d4f8:	003bb706 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2d4fc:	a809883a 	mov	r4,r21
   2d500:	d8c02a15 	stw	r3,168(sp)
   2d504:	da002b15 	stw	r8,172(sp)
   2d508:	002c0b00 	call	2c0b0 <strlen>
   2d50c:	d8c02a17 	ldw	r3,168(sp)
   2d510:	1027883a 	mov	r19,r2
   2d514:	df001d83 	ldbu	fp,118(sp)
   2d518:	d8c02215 	stw	r3,136(sp)
   2d51c:	0013883a 	mov	r9,zero
   2d520:	da002b17 	ldw	r8,172(sp)
   2d524:	003c4d06 	br	2c65c <__alt_data_end+0xfffed25c>
   2d528:	d9402117 	ldw	r5,132(sp)
   2d52c:	d9002017 	ldw	r4,128(sp)
   2d530:	d9801a04 	addi	r6,sp,104
   2d534:	da402c15 	stw	r9,176(sp)
   2d538:	002c1480 	call	2c148 <__sprint_r.part.0>
   2d53c:	da402c17 	ldw	r9,176(sp)
   2d540:	103e9a1e 	bne	r2,zero,2cfac <__alt_data_end+0xfffedbac>
   2d544:	d9401b17 	ldw	r5,108(sp)
   2d548:	d8801c17 	ldw	r2,112(sp)
   2d54c:	d811883a 	mov	r8,sp
   2d550:	29000044 	addi	r4,r5,1
   2d554:	003e4206 	br	2ce60 <__alt_data_end+0xfffeda60>
   2d558:	d9401b17 	ldw	r5,108(sp)
   2d55c:	010000f4 	movhi	r4,3
   2d560:	21095404 	addi	r4,r4,9552
   2d564:	d9002415 	stw	r4,144(sp)
   2d568:	29400044 	addi	r5,r5,1
   2d56c:	003c6d06 	br	2c724 <__alt_data_end+0xfffed324>
   2d570:	0039883a 	mov	fp,zero
   2d574:	00800084 	movi	r2,2
   2d578:	10803fcc 	andi	r2,r2,255
   2d57c:	01000044 	movi	r4,1
   2d580:	11001e26 	beq	r2,r4,2d5fc <___vfiprintf_internal_r+0x13a0>
   2d584:	01000084 	movi	r4,2
   2d588:	11001e1e 	bne	r2,r4,2d604 <___vfiprintf_internal_r+0x13a8>
   2d58c:	1829883a 	mov	r20,r3
   2d590:	003eea06 	br	2d13c <__alt_data_end+0xfffedd3c>
   2d594:	a007883a 	mov	r3,r20
   2d598:	00800044 	movi	r2,1
   2d59c:	003ff606 	br	2d578 <__alt_data_end+0xfffee178>
   2d5a0:	00800184 	movi	r2,6
   2d5a4:	1240012e 	bgeu	r2,r9,2d5ac <___vfiprintf_internal_r+0x1350>
   2d5a8:	1013883a 	mov	r9,r2
   2d5ac:	4827883a 	mov	r19,r9
   2d5b0:	4825883a 	mov	r18,r9
   2d5b4:	48001516 	blt	r9,zero,2d60c <___vfiprintf_internal_r+0x13b0>
   2d5b8:	054000f4 	movhi	r21,3
   2d5bc:	d8c02215 	stw	r3,136(sp)
   2d5c0:	ad48f504 	addi	r21,r21,9172
   2d5c4:	003d1406 	br	2ca18 <__alt_data_end+0xfffed618>
   2d5c8:	028000f4 	movhi	r10,3
   2d5cc:	52895004 	addi	r10,r10,9536
   2d5d0:	da802415 	stw	r10,144(sp)
   2d5d4:	200d883a 	mov	r6,r4
   2d5d8:	003c9106 	br	2c820 <__alt_data_end+0xfffed420>
   2d5dc:	5021883a 	mov	r16,r10
   2d5e0:	0013883a 	mov	r9,zero
   2d5e4:	003b7d06 	br	2c3dc <__alt_data_end+0xfffecfdc>
   2d5e8:	4827883a 	mov	r19,r9
   2d5ec:	df001d83 	ldbu	fp,118(sp)
   2d5f0:	d8c02215 	stw	r3,136(sp)
   2d5f4:	0013883a 	mov	r9,zero
   2d5f8:	003c1806 	br	2c65c <__alt_data_end+0xfffed25c>
   2d5fc:	1829883a 	mov	r20,r3
   2d600:	003d1806 	br	2ca64 <__alt_data_end+0xfffed664>
   2d604:	1829883a 	mov	r20,r3
   2d608:	003ccd06 	br	2c940 <__alt_data_end+0xfffed540>
   2d60c:	0025883a 	mov	r18,zero
   2d610:	003fe906 	br	2d5b8 <__alt_data_end+0xfffee1b8>
   2d614:	d8802217 	ldw	r2,136(sp)
   2d618:	80c00043 	ldbu	r3,1(r16)
   2d61c:	5021883a 	mov	r16,r10
   2d620:	12400017 	ldw	r9,0(r2)
   2d624:	10800104 	addi	r2,r2,4
   2d628:	d8802215 	stw	r2,136(sp)
   2d62c:	483faf0e 	bge	r9,zero,2d4ec <__alt_data_end+0xfffee0ec>
   2d630:	18c03fcc 	andi	r3,r3,255
   2d634:	18c0201c 	xori	r3,r3,128
   2d638:	027fffc4 	movi	r9,-1
   2d63c:	18ffe004 	addi	r3,r3,-128
   2d640:	003b6506 	br	2c3d8 <__alt_data_end+0xfffecfd8>
   2d644:	d9c01d85 	stb	r7,118(sp)
   2d648:	003ca006 	br	2c8cc <__alt_data_end+0xfffed4cc>
   2d64c:	d9c01d85 	stb	r7,118(sp)
   2d650:	003cad06 	br	2c908 <__alt_data_end+0xfffed508>
   2d654:	d9c01d85 	stb	r7,118(sp)
   2d658:	003d7d06 	br	2cc50 <__alt_data_end+0xfffed850>
   2d65c:	d9c01d85 	stb	r7,118(sp)
   2d660:	003d5f06 	br	2cbe0 <__alt_data_end+0xfffed7e0>
   2d664:	a080004c 	andi	r2,r20,1
   2d668:	0039883a 	mov	fp,zero
   2d66c:	10000526 	beq	r2,zero,2d684 <___vfiprintf_internal_r+0x1428>
   2d670:	00800c04 	movi	r2,48
   2d674:	d88019c5 	stb	r2,103(sp)
   2d678:	dcc02717 	ldw	r19,156(sp)
   2d67c:	dd4019c4 	addi	r21,sp,103
   2d680:	003bf606 	br	2c65c <__alt_data_end+0xfffed25c>
   2d684:	0027883a 	mov	r19,zero
   2d688:	dd401a04 	addi	r21,sp,104
   2d68c:	003bf306 	br	2c65c <__alt_data_end+0xfffed25c>
   2d690:	d9c01d85 	stb	r7,118(sp)
   2d694:	003dc806 	br	2cdb8 <__alt_data_end+0xfffed9b8>
   2d698:	d9c01d85 	stb	r7,118(sp)
   2d69c:	003d3a06 	br	2cb88 <__alt_data_end+0xfffed788>
   2d6a0:	d9c01d85 	stb	r7,118(sp)
   2d6a4:	003d2a06 	br	2cb50 <__alt_data_end+0xfffed750>
   2d6a8:	d9c01d85 	stb	r7,118(sp)
   2d6ac:	003cde06 	br	2ca28 <__alt_data_end+0xfffed628>
   2d6b0:	d9c01d85 	stb	r7,118(sp)
   2d6b4:	003cbc06 	br	2c9a8 <__alt_data_end+0xfffed5a8>

0002d6b8 <__vfiprintf_internal>:
   2d6b8:	008000f4 	movhi	r2,3
   2d6bc:	10901e04 	addi	r2,r2,16504
   2d6c0:	300f883a 	mov	r7,r6
   2d6c4:	280d883a 	mov	r6,r5
   2d6c8:	200b883a 	mov	r5,r4
   2d6cc:	11000017 	ldw	r4,0(r2)
   2d6d0:	002c25c1 	jmpi	2c25c <___vfiprintf_internal_r>

0002d6d4 <__sbprintf>:
   2d6d4:	2880030b 	ldhu	r2,12(r5)
   2d6d8:	2ac01917 	ldw	r11,100(r5)
   2d6dc:	2a80038b 	ldhu	r10,14(r5)
   2d6e0:	2a400717 	ldw	r9,28(r5)
   2d6e4:	2a000917 	ldw	r8,36(r5)
   2d6e8:	defee204 	addi	sp,sp,-1144
   2d6ec:	00c10004 	movi	r3,1024
   2d6f0:	dc011a15 	stw	r16,1128(sp)
   2d6f4:	10bfff4c 	andi	r2,r2,65533
   2d6f8:	2821883a 	mov	r16,r5
   2d6fc:	d8cb883a 	add	r5,sp,r3
   2d700:	dc811c15 	stw	r18,1136(sp)
   2d704:	dc411b15 	stw	r17,1132(sp)
   2d708:	dfc11d15 	stw	ra,1140(sp)
   2d70c:	2025883a 	mov	r18,r4
   2d710:	d881030d 	sth	r2,1036(sp)
   2d714:	dac11915 	stw	r11,1124(sp)
   2d718:	da81038d 	sth	r10,1038(sp)
   2d71c:	da410715 	stw	r9,1052(sp)
   2d720:	da010915 	stw	r8,1060(sp)
   2d724:	dec10015 	stw	sp,1024(sp)
   2d728:	dec10415 	stw	sp,1040(sp)
   2d72c:	d8c10215 	stw	r3,1032(sp)
   2d730:	d8c10515 	stw	r3,1044(sp)
   2d734:	d8010615 	stw	zero,1048(sp)
   2d738:	002c25c0 	call	2c25c <___vfiprintf_internal_r>
   2d73c:	1023883a 	mov	r17,r2
   2d740:	10000416 	blt	r2,zero,2d754 <__sbprintf+0x80>
   2d744:	d9410004 	addi	r5,sp,1024
   2d748:	9009883a 	mov	r4,r18
   2d74c:	00295f40 	call	295f4 <_fflush_r>
   2d750:	10000d1e 	bne	r2,zero,2d788 <__sbprintf+0xb4>
   2d754:	d881030b 	ldhu	r2,1036(sp)
   2d758:	1080100c 	andi	r2,r2,64
   2d75c:	10000326 	beq	r2,zero,2d76c <__sbprintf+0x98>
   2d760:	8080030b 	ldhu	r2,12(r16)
   2d764:	10801014 	ori	r2,r2,64
   2d768:	8080030d 	sth	r2,12(r16)
   2d76c:	8805883a 	mov	r2,r17
   2d770:	dfc11d17 	ldw	ra,1140(sp)
   2d774:	dc811c17 	ldw	r18,1136(sp)
   2d778:	dc411b17 	ldw	r17,1132(sp)
   2d77c:	dc011a17 	ldw	r16,1128(sp)
   2d780:	dec11e04 	addi	sp,sp,1144
   2d784:	f800283a 	ret
   2d788:	047fffc4 	movi	r17,-1
   2d78c:	003ff106 	br	2d754 <__alt_data_end+0xfffee354>

0002d790 <_write_r>:
   2d790:	defffd04 	addi	sp,sp,-12
   2d794:	2805883a 	mov	r2,r5
   2d798:	dc000015 	stw	r16,0(sp)
   2d79c:	040000f4 	movhi	r16,3
   2d7a0:	dc400115 	stw	r17,4(sp)
   2d7a4:	300b883a 	mov	r5,r6
   2d7a8:	8416fc04 	addi	r16,r16,23536
   2d7ac:	2023883a 	mov	r17,r4
   2d7b0:	380d883a 	mov	r6,r7
   2d7b4:	1009883a 	mov	r4,r2
   2d7b8:	dfc00215 	stw	ra,8(sp)
   2d7bc:	80000015 	stw	zero,0(r16)
   2d7c0:	003009c0 	call	3009c <write>
   2d7c4:	00ffffc4 	movi	r3,-1
   2d7c8:	10c00526 	beq	r2,r3,2d7e0 <_write_r+0x50>
   2d7cc:	dfc00217 	ldw	ra,8(sp)
   2d7d0:	dc400117 	ldw	r17,4(sp)
   2d7d4:	dc000017 	ldw	r16,0(sp)
   2d7d8:	dec00304 	addi	sp,sp,12
   2d7dc:	f800283a 	ret
   2d7e0:	80c00017 	ldw	r3,0(r16)
   2d7e4:	183ff926 	beq	r3,zero,2d7cc <__alt_data_end+0xfffee3cc>
   2d7e8:	88c00015 	stw	r3,0(r17)
   2d7ec:	003ff706 	br	2d7cc <__alt_data_end+0xfffee3cc>

0002d7f0 <_close_r>:
   2d7f0:	defffd04 	addi	sp,sp,-12
   2d7f4:	dc000015 	stw	r16,0(sp)
   2d7f8:	040000f4 	movhi	r16,3
   2d7fc:	dc400115 	stw	r17,4(sp)
   2d800:	8416fc04 	addi	r16,r16,23536
   2d804:	2023883a 	mov	r17,r4
   2d808:	2809883a 	mov	r4,r5
   2d80c:	dfc00215 	stw	ra,8(sp)
   2d810:	80000015 	stw	zero,0(r16)
   2d814:	002f85c0 	call	2f85c <close>
   2d818:	00ffffc4 	movi	r3,-1
   2d81c:	10c00526 	beq	r2,r3,2d834 <_close_r+0x44>
   2d820:	dfc00217 	ldw	ra,8(sp)
   2d824:	dc400117 	ldw	r17,4(sp)
   2d828:	dc000017 	ldw	r16,0(sp)
   2d82c:	dec00304 	addi	sp,sp,12
   2d830:	f800283a 	ret
   2d834:	80c00017 	ldw	r3,0(r16)
   2d838:	183ff926 	beq	r3,zero,2d820 <__alt_data_end+0xfffee420>
   2d83c:	88c00015 	stw	r3,0(r17)
   2d840:	003ff706 	br	2d820 <__alt_data_end+0xfffee420>

0002d844 <_calloc_r>:
   2d844:	298b383a 	mul	r5,r5,r6
   2d848:	defffe04 	addi	sp,sp,-8
   2d84c:	dfc00115 	stw	ra,4(sp)
   2d850:	dc000015 	stw	r16,0(sp)
   2d854:	002a2740 	call	2a274 <_malloc_r>
   2d858:	10002926 	beq	r2,zero,2d900 <_calloc_r+0xbc>
   2d85c:	11bfff17 	ldw	r6,-4(r2)
   2d860:	1021883a 	mov	r16,r2
   2d864:	00bfff04 	movi	r2,-4
   2d868:	308c703a 	and	r6,r6,r2
   2d86c:	00c00904 	movi	r3,36
   2d870:	308d883a 	add	r6,r6,r2
   2d874:	19801636 	bltu	r3,r6,2d8d0 <_calloc_r+0x8c>
   2d878:	008004c4 	movi	r2,19
   2d87c:	11800b2e 	bgeu	r2,r6,2d8ac <_calloc_r+0x68>
   2d880:	80000015 	stw	zero,0(r16)
   2d884:	80000115 	stw	zero,4(r16)
   2d888:	008006c4 	movi	r2,27
   2d88c:	11801a2e 	bgeu	r2,r6,2d8f8 <_calloc_r+0xb4>
   2d890:	80000215 	stw	zero,8(r16)
   2d894:	80000315 	stw	zero,12(r16)
   2d898:	30c0151e 	bne	r6,r3,2d8f0 <_calloc_r+0xac>
   2d89c:	80000415 	stw	zero,16(r16)
   2d8a0:	80800604 	addi	r2,r16,24
   2d8a4:	80000515 	stw	zero,20(r16)
   2d8a8:	00000106 	br	2d8b0 <_calloc_r+0x6c>
   2d8ac:	8005883a 	mov	r2,r16
   2d8b0:	10000015 	stw	zero,0(r2)
   2d8b4:	10000115 	stw	zero,4(r2)
   2d8b8:	10000215 	stw	zero,8(r2)
   2d8bc:	8005883a 	mov	r2,r16
   2d8c0:	dfc00117 	ldw	ra,4(sp)
   2d8c4:	dc000017 	ldw	r16,0(sp)
   2d8c8:	dec00204 	addi	sp,sp,8
   2d8cc:	f800283a 	ret
   2d8d0:	000b883a 	mov	r5,zero
   2d8d4:	8009883a 	mov	r4,r16
   2d8d8:	002acac0 	call	2acac <memset>
   2d8dc:	8005883a 	mov	r2,r16
   2d8e0:	dfc00117 	ldw	ra,4(sp)
   2d8e4:	dc000017 	ldw	r16,0(sp)
   2d8e8:	dec00204 	addi	sp,sp,8
   2d8ec:	f800283a 	ret
   2d8f0:	80800404 	addi	r2,r16,16
   2d8f4:	003fee06 	br	2d8b0 <__alt_data_end+0xfffee4b0>
   2d8f8:	80800204 	addi	r2,r16,8
   2d8fc:	003fec06 	br	2d8b0 <__alt_data_end+0xfffee4b0>
   2d900:	0005883a 	mov	r2,zero
   2d904:	003fee06 	br	2d8c0 <__alt_data_end+0xfffee4c0>

0002d908 <_fclose_r>:
   2d908:	28003926 	beq	r5,zero,2d9f0 <_fclose_r+0xe8>
   2d90c:	defffc04 	addi	sp,sp,-16
   2d910:	dc400115 	stw	r17,4(sp)
   2d914:	dc000015 	stw	r16,0(sp)
   2d918:	dfc00315 	stw	ra,12(sp)
   2d91c:	dc800215 	stw	r18,8(sp)
   2d920:	2023883a 	mov	r17,r4
   2d924:	2821883a 	mov	r16,r5
   2d928:	20000226 	beq	r4,zero,2d934 <_fclose_r+0x2c>
   2d92c:	20800e17 	ldw	r2,56(r4)
   2d930:	10002726 	beq	r2,zero,2d9d0 <_fclose_r+0xc8>
   2d934:	8080030f 	ldh	r2,12(r16)
   2d938:	1000071e 	bne	r2,zero,2d958 <_fclose_r+0x50>
   2d93c:	0005883a 	mov	r2,zero
   2d940:	dfc00317 	ldw	ra,12(sp)
   2d944:	dc800217 	ldw	r18,8(sp)
   2d948:	dc400117 	ldw	r17,4(sp)
   2d94c:	dc000017 	ldw	r16,0(sp)
   2d950:	dec00404 	addi	sp,sp,16
   2d954:	f800283a 	ret
   2d958:	800b883a 	mov	r5,r16
   2d95c:	8809883a 	mov	r4,r17
   2d960:	00293d80 	call	293d8 <__sflush_r>
   2d964:	1025883a 	mov	r18,r2
   2d968:	80800b17 	ldw	r2,44(r16)
   2d96c:	10000426 	beq	r2,zero,2d980 <_fclose_r+0x78>
   2d970:	81400717 	ldw	r5,28(r16)
   2d974:	8809883a 	mov	r4,r17
   2d978:	103ee83a 	callr	r2
   2d97c:	10001616 	blt	r2,zero,2d9d8 <_fclose_r+0xd0>
   2d980:	8080030b 	ldhu	r2,12(r16)
   2d984:	1080200c 	andi	r2,r2,128
   2d988:	1000151e 	bne	r2,zero,2d9e0 <_fclose_r+0xd8>
   2d98c:	81400c17 	ldw	r5,48(r16)
   2d990:	28000526 	beq	r5,zero,2d9a8 <_fclose_r+0xa0>
   2d994:	80801004 	addi	r2,r16,64
   2d998:	28800226 	beq	r5,r2,2d9a4 <_fclose_r+0x9c>
   2d99c:	8809883a 	mov	r4,r17
   2d9a0:	0029b440 	call	29b44 <_free_r>
   2d9a4:	80000c15 	stw	zero,48(r16)
   2d9a8:	81401117 	ldw	r5,68(r16)
   2d9ac:	28000326 	beq	r5,zero,2d9bc <_fclose_r+0xb4>
   2d9b0:	8809883a 	mov	r4,r17
   2d9b4:	0029b440 	call	29b44 <_free_r>
   2d9b8:	80001115 	stw	zero,68(r16)
   2d9bc:	00299e00 	call	299e0 <__sfp_lock_acquire>
   2d9c0:	8000030d 	sth	zero,12(r16)
   2d9c4:	00299e40 	call	299e4 <__sfp_lock_release>
   2d9c8:	9005883a 	mov	r2,r18
   2d9cc:	003fdc06 	br	2d940 <__alt_data_end+0xfffee540>
   2d9d0:	00299d00 	call	299d0 <__sinit>
   2d9d4:	003fd706 	br	2d934 <__alt_data_end+0xfffee534>
   2d9d8:	04bfffc4 	movi	r18,-1
   2d9dc:	003fe806 	br	2d980 <__alt_data_end+0xfffee580>
   2d9e0:	81400417 	ldw	r5,16(r16)
   2d9e4:	8809883a 	mov	r4,r17
   2d9e8:	0029b440 	call	29b44 <_free_r>
   2d9ec:	003fe706 	br	2d98c <__alt_data_end+0xfffee58c>
   2d9f0:	0005883a 	mov	r2,zero
   2d9f4:	f800283a 	ret

0002d9f8 <fclose>:
   2d9f8:	008000f4 	movhi	r2,3
   2d9fc:	10901e04 	addi	r2,r2,16504
   2da00:	200b883a 	mov	r5,r4
   2da04:	11000017 	ldw	r4,0(r2)
   2da08:	002d9081 	jmpi	2d908 <_fclose_r>

0002da0c <__fputwc>:
   2da0c:	defff804 	addi	sp,sp,-32
   2da10:	dcc00415 	stw	r19,16(sp)
   2da14:	dc800315 	stw	r18,12(sp)
   2da18:	dc000115 	stw	r16,4(sp)
   2da1c:	dfc00715 	stw	ra,28(sp)
   2da20:	dd400615 	stw	r21,24(sp)
   2da24:	dd000515 	stw	r20,20(sp)
   2da28:	dc400215 	stw	r17,8(sp)
   2da2c:	2027883a 	mov	r19,r4
   2da30:	2825883a 	mov	r18,r5
   2da34:	3021883a 	mov	r16,r6
   2da38:	002a0640 	call	2a064 <__locale_mb_cur_max>
   2da3c:	00c00044 	movi	r3,1
   2da40:	10c03e26 	beq	r2,r3,2db3c <__fputwc+0x130>
   2da44:	81c01704 	addi	r7,r16,92
   2da48:	900d883a 	mov	r6,r18
   2da4c:	d80b883a 	mov	r5,sp
   2da50:	9809883a 	mov	r4,r19
   2da54:	002ea580 	call	2ea58 <_wcrtomb_r>
   2da58:	1029883a 	mov	r20,r2
   2da5c:	00bfffc4 	movi	r2,-1
   2da60:	a0802026 	beq	r20,r2,2dae4 <__fputwc+0xd8>
   2da64:	d9400003 	ldbu	r5,0(sp)
   2da68:	a0001c26 	beq	r20,zero,2dadc <__fputwc+0xd0>
   2da6c:	0023883a 	mov	r17,zero
   2da70:	05400284 	movi	r21,10
   2da74:	00000906 	br	2da9c <__fputwc+0x90>
   2da78:	80800017 	ldw	r2,0(r16)
   2da7c:	11400005 	stb	r5,0(r2)
   2da80:	80c00017 	ldw	r3,0(r16)
   2da84:	18c00044 	addi	r3,r3,1
   2da88:	80c00015 	stw	r3,0(r16)
   2da8c:	8c400044 	addi	r17,r17,1
   2da90:	dc45883a 	add	r2,sp,r17
   2da94:	8d00112e 	bgeu	r17,r20,2dadc <__fputwc+0xd0>
   2da98:	11400003 	ldbu	r5,0(r2)
   2da9c:	80c00217 	ldw	r3,8(r16)
   2daa0:	18ffffc4 	addi	r3,r3,-1
   2daa4:	80c00215 	stw	r3,8(r16)
   2daa8:	183ff30e 	bge	r3,zero,2da78 <__alt_data_end+0xfffee678>
   2daac:	80800617 	ldw	r2,24(r16)
   2dab0:	18801916 	blt	r3,r2,2db18 <__fputwc+0x10c>
   2dab4:	80800017 	ldw	r2,0(r16)
   2dab8:	11400005 	stb	r5,0(r2)
   2dabc:	80800017 	ldw	r2,0(r16)
   2dac0:	10c00003 	ldbu	r3,0(r2)
   2dac4:	10800044 	addi	r2,r2,1
   2dac8:	1d402326 	beq	r3,r21,2db58 <__fputwc+0x14c>
   2dacc:	80800015 	stw	r2,0(r16)
   2dad0:	8c400044 	addi	r17,r17,1
   2dad4:	dc45883a 	add	r2,sp,r17
   2dad8:	8d3fef36 	bltu	r17,r20,2da98 <__alt_data_end+0xfffee698>
   2dadc:	9005883a 	mov	r2,r18
   2dae0:	00000406 	br	2daf4 <__fputwc+0xe8>
   2dae4:	80c0030b 	ldhu	r3,12(r16)
   2dae8:	a005883a 	mov	r2,r20
   2daec:	18c01014 	ori	r3,r3,64
   2daf0:	80c0030d 	sth	r3,12(r16)
   2daf4:	dfc00717 	ldw	ra,28(sp)
   2daf8:	dd400617 	ldw	r21,24(sp)
   2dafc:	dd000517 	ldw	r20,20(sp)
   2db00:	dcc00417 	ldw	r19,16(sp)
   2db04:	dc800317 	ldw	r18,12(sp)
   2db08:	dc400217 	ldw	r17,8(sp)
   2db0c:	dc000117 	ldw	r16,4(sp)
   2db10:	dec00804 	addi	sp,sp,32
   2db14:	f800283a 	ret
   2db18:	800d883a 	mov	r6,r16
   2db1c:	29403fcc 	andi	r5,r5,255
   2db20:	9809883a 	mov	r4,r19
   2db24:	002e9000 	call	2e900 <__swbuf_r>
   2db28:	10bfffe0 	cmpeqi	r2,r2,-1
   2db2c:	10803fcc 	andi	r2,r2,255
   2db30:	103fd626 	beq	r2,zero,2da8c <__alt_data_end+0xfffee68c>
   2db34:	00bfffc4 	movi	r2,-1
   2db38:	003fee06 	br	2daf4 <__alt_data_end+0xfffee6f4>
   2db3c:	90ffffc4 	addi	r3,r18,-1
   2db40:	01003f84 	movi	r4,254
   2db44:	20ffbf36 	bltu	r4,r3,2da44 <__alt_data_end+0xfffee644>
   2db48:	900b883a 	mov	r5,r18
   2db4c:	dc800005 	stb	r18,0(sp)
   2db50:	1029883a 	mov	r20,r2
   2db54:	003fc506 	br	2da6c <__alt_data_end+0xfffee66c>
   2db58:	800d883a 	mov	r6,r16
   2db5c:	a80b883a 	mov	r5,r21
   2db60:	9809883a 	mov	r4,r19
   2db64:	002e9000 	call	2e900 <__swbuf_r>
   2db68:	10bfffe0 	cmpeqi	r2,r2,-1
   2db6c:	003fef06 	br	2db2c <__alt_data_end+0xfffee72c>

0002db70 <_fputwc_r>:
   2db70:	3080030b 	ldhu	r2,12(r6)
   2db74:	10c8000c 	andi	r3,r2,8192
   2db78:	1800051e 	bne	r3,zero,2db90 <_fputwc_r+0x20>
   2db7c:	30c01917 	ldw	r3,100(r6)
   2db80:	10880014 	ori	r2,r2,8192
   2db84:	3080030d 	sth	r2,12(r6)
   2db88:	18880014 	ori	r2,r3,8192
   2db8c:	30801915 	stw	r2,100(r6)
   2db90:	002da0c1 	jmpi	2da0c <__fputwc>

0002db94 <fputwc>:
   2db94:	008000f4 	movhi	r2,3
   2db98:	defffc04 	addi	sp,sp,-16
   2db9c:	10901e04 	addi	r2,r2,16504
   2dba0:	dc000115 	stw	r16,4(sp)
   2dba4:	14000017 	ldw	r16,0(r2)
   2dba8:	dc400215 	stw	r17,8(sp)
   2dbac:	dfc00315 	stw	ra,12(sp)
   2dbb0:	2023883a 	mov	r17,r4
   2dbb4:	80000226 	beq	r16,zero,2dbc0 <fputwc+0x2c>
   2dbb8:	80800e17 	ldw	r2,56(r16)
   2dbbc:	10001026 	beq	r2,zero,2dc00 <fputwc+0x6c>
   2dbc0:	2880030b 	ldhu	r2,12(r5)
   2dbc4:	10c8000c 	andi	r3,r2,8192
   2dbc8:	1800051e 	bne	r3,zero,2dbe0 <fputwc+0x4c>
   2dbcc:	28c01917 	ldw	r3,100(r5)
   2dbd0:	10880014 	ori	r2,r2,8192
   2dbd4:	2880030d 	sth	r2,12(r5)
   2dbd8:	18880014 	ori	r2,r3,8192
   2dbdc:	28801915 	stw	r2,100(r5)
   2dbe0:	280d883a 	mov	r6,r5
   2dbe4:	8009883a 	mov	r4,r16
   2dbe8:	880b883a 	mov	r5,r17
   2dbec:	dfc00317 	ldw	ra,12(sp)
   2dbf0:	dc400217 	ldw	r17,8(sp)
   2dbf4:	dc000117 	ldw	r16,4(sp)
   2dbf8:	dec00404 	addi	sp,sp,16
   2dbfc:	002da0c1 	jmpi	2da0c <__fputwc>
   2dc00:	8009883a 	mov	r4,r16
   2dc04:	d9400015 	stw	r5,0(sp)
   2dc08:	00299d00 	call	299d0 <__sinit>
   2dc0c:	d9400017 	ldw	r5,0(sp)
   2dc10:	003feb06 	br	2dbc0 <__alt_data_end+0xfffee7c0>

0002dc14 <_fstat_r>:
   2dc14:	defffd04 	addi	sp,sp,-12
   2dc18:	2805883a 	mov	r2,r5
   2dc1c:	dc000015 	stw	r16,0(sp)
   2dc20:	040000f4 	movhi	r16,3
   2dc24:	dc400115 	stw	r17,4(sp)
   2dc28:	8416fc04 	addi	r16,r16,23536
   2dc2c:	2023883a 	mov	r17,r4
   2dc30:	300b883a 	mov	r5,r6
   2dc34:	1009883a 	mov	r4,r2
   2dc38:	dfc00215 	stw	ra,8(sp)
   2dc3c:	80000015 	stw	zero,0(r16)
   2dc40:	002f9940 	call	2f994 <fstat>
   2dc44:	00ffffc4 	movi	r3,-1
   2dc48:	10c00526 	beq	r2,r3,2dc60 <_fstat_r+0x4c>
   2dc4c:	dfc00217 	ldw	ra,8(sp)
   2dc50:	dc400117 	ldw	r17,4(sp)
   2dc54:	dc000017 	ldw	r16,0(sp)
   2dc58:	dec00304 	addi	sp,sp,12
   2dc5c:	f800283a 	ret
   2dc60:	80c00017 	ldw	r3,0(r16)
   2dc64:	183ff926 	beq	r3,zero,2dc4c <__alt_data_end+0xfffee84c>
   2dc68:	88c00015 	stw	r3,0(r17)
   2dc6c:	003ff706 	br	2dc4c <__alt_data_end+0xfffee84c>

0002dc70 <__sfvwrite_r>:
   2dc70:	30800217 	ldw	r2,8(r6)
   2dc74:	10006726 	beq	r2,zero,2de14 <__sfvwrite_r+0x1a4>
   2dc78:	28c0030b 	ldhu	r3,12(r5)
   2dc7c:	defff404 	addi	sp,sp,-48
   2dc80:	dd400715 	stw	r21,28(sp)
   2dc84:	dd000615 	stw	r20,24(sp)
   2dc88:	dc000215 	stw	r16,8(sp)
   2dc8c:	dfc00b15 	stw	ra,44(sp)
   2dc90:	df000a15 	stw	fp,40(sp)
   2dc94:	ddc00915 	stw	r23,36(sp)
   2dc98:	dd800815 	stw	r22,32(sp)
   2dc9c:	dcc00515 	stw	r19,20(sp)
   2dca0:	dc800415 	stw	r18,16(sp)
   2dca4:	dc400315 	stw	r17,12(sp)
   2dca8:	1880020c 	andi	r2,r3,8
   2dcac:	2821883a 	mov	r16,r5
   2dcb0:	202b883a 	mov	r21,r4
   2dcb4:	3029883a 	mov	r20,r6
   2dcb8:	10002726 	beq	r2,zero,2dd58 <__sfvwrite_r+0xe8>
   2dcbc:	28800417 	ldw	r2,16(r5)
   2dcc0:	10002526 	beq	r2,zero,2dd58 <__sfvwrite_r+0xe8>
   2dcc4:	1880008c 	andi	r2,r3,2
   2dcc8:	a4400017 	ldw	r17,0(r20)
   2dccc:	10002a26 	beq	r2,zero,2dd78 <__sfvwrite_r+0x108>
   2dcd0:	05a00034 	movhi	r22,32768
   2dcd4:	0027883a 	mov	r19,zero
   2dcd8:	0025883a 	mov	r18,zero
   2dcdc:	b5bf0004 	addi	r22,r22,-1024
   2dce0:	980d883a 	mov	r6,r19
   2dce4:	a809883a 	mov	r4,r21
   2dce8:	90004626 	beq	r18,zero,2de04 <__sfvwrite_r+0x194>
   2dcec:	900f883a 	mov	r7,r18
   2dcf0:	b480022e 	bgeu	r22,r18,2dcfc <__sfvwrite_r+0x8c>
   2dcf4:	01e00034 	movhi	r7,32768
   2dcf8:	39ff0004 	addi	r7,r7,-1024
   2dcfc:	80800917 	ldw	r2,36(r16)
   2dd00:	81400717 	ldw	r5,28(r16)
   2dd04:	103ee83a 	callr	r2
   2dd08:	0080570e 	bge	zero,r2,2de68 <__sfvwrite_r+0x1f8>
   2dd0c:	a0c00217 	ldw	r3,8(r20)
   2dd10:	98a7883a 	add	r19,r19,r2
   2dd14:	90a5c83a 	sub	r18,r18,r2
   2dd18:	1885c83a 	sub	r2,r3,r2
   2dd1c:	a0800215 	stw	r2,8(r20)
   2dd20:	103fef1e 	bne	r2,zero,2dce0 <__alt_data_end+0xfffee8e0>
   2dd24:	0005883a 	mov	r2,zero
   2dd28:	dfc00b17 	ldw	ra,44(sp)
   2dd2c:	df000a17 	ldw	fp,40(sp)
   2dd30:	ddc00917 	ldw	r23,36(sp)
   2dd34:	dd800817 	ldw	r22,32(sp)
   2dd38:	dd400717 	ldw	r21,28(sp)
   2dd3c:	dd000617 	ldw	r20,24(sp)
   2dd40:	dcc00517 	ldw	r19,20(sp)
   2dd44:	dc800417 	ldw	r18,16(sp)
   2dd48:	dc400317 	ldw	r17,12(sp)
   2dd4c:	dc000217 	ldw	r16,8(sp)
   2dd50:	dec00c04 	addi	sp,sp,48
   2dd54:	f800283a 	ret
   2dd58:	800b883a 	mov	r5,r16
   2dd5c:	a809883a 	mov	r4,r21
   2dd60:	00279fc0 	call	279fc <__swsetup_r>
   2dd64:	1000eb1e 	bne	r2,zero,2e114 <__sfvwrite_r+0x4a4>
   2dd68:	80c0030b 	ldhu	r3,12(r16)
   2dd6c:	a4400017 	ldw	r17,0(r20)
   2dd70:	1880008c 	andi	r2,r3,2
   2dd74:	103fd61e 	bne	r2,zero,2dcd0 <__alt_data_end+0xfffee8d0>
   2dd78:	1880004c 	andi	r2,r3,1
   2dd7c:	10003f1e 	bne	r2,zero,2de7c <__sfvwrite_r+0x20c>
   2dd80:	0039883a 	mov	fp,zero
   2dd84:	0025883a 	mov	r18,zero
   2dd88:	90001a26 	beq	r18,zero,2ddf4 <__sfvwrite_r+0x184>
   2dd8c:	1880800c 	andi	r2,r3,512
   2dd90:	84c00217 	ldw	r19,8(r16)
   2dd94:	10002126 	beq	r2,zero,2de1c <__sfvwrite_r+0x1ac>
   2dd98:	982f883a 	mov	r23,r19
   2dd9c:	94c09336 	bltu	r18,r19,2dfec <__sfvwrite_r+0x37c>
   2dda0:	1881200c 	andi	r2,r3,1152
   2dda4:	10009e1e 	bne	r2,zero,2e020 <__sfvwrite_r+0x3b0>
   2dda8:	81000017 	ldw	r4,0(r16)
   2ddac:	b80d883a 	mov	r6,r23
   2ddb0:	e00b883a 	mov	r5,fp
   2ddb4:	002e1e00 	call	2e1e0 <memmove>
   2ddb8:	80c00217 	ldw	r3,8(r16)
   2ddbc:	81000017 	ldw	r4,0(r16)
   2ddc0:	9005883a 	mov	r2,r18
   2ddc4:	1ce7c83a 	sub	r19,r3,r19
   2ddc8:	25cf883a 	add	r7,r4,r23
   2ddcc:	84c00215 	stw	r19,8(r16)
   2ddd0:	81c00015 	stw	r7,0(r16)
   2ddd4:	a0c00217 	ldw	r3,8(r20)
   2ddd8:	e0b9883a 	add	fp,fp,r2
   2dddc:	90a5c83a 	sub	r18,r18,r2
   2dde0:	18a7c83a 	sub	r19,r3,r2
   2dde4:	a4c00215 	stw	r19,8(r20)
   2dde8:	983fce26 	beq	r19,zero,2dd24 <__alt_data_end+0xfffee924>
   2ddec:	80c0030b 	ldhu	r3,12(r16)
   2ddf0:	903fe61e 	bne	r18,zero,2dd8c <__alt_data_end+0xfffee98c>
   2ddf4:	8f000017 	ldw	fp,0(r17)
   2ddf8:	8c800117 	ldw	r18,4(r17)
   2ddfc:	8c400204 	addi	r17,r17,8
   2de00:	003fe106 	br	2dd88 <__alt_data_end+0xfffee988>
   2de04:	8cc00017 	ldw	r19,0(r17)
   2de08:	8c800117 	ldw	r18,4(r17)
   2de0c:	8c400204 	addi	r17,r17,8
   2de10:	003fb306 	br	2dce0 <__alt_data_end+0xfffee8e0>
   2de14:	0005883a 	mov	r2,zero
   2de18:	f800283a 	ret
   2de1c:	81000017 	ldw	r4,0(r16)
   2de20:	80800417 	ldw	r2,16(r16)
   2de24:	11005736 	bltu	r2,r4,2df84 <__sfvwrite_r+0x314>
   2de28:	85c00517 	ldw	r23,20(r16)
   2de2c:	95c05536 	bltu	r18,r23,2df84 <__sfvwrite_r+0x314>
   2de30:	00a00034 	movhi	r2,32768
   2de34:	10bfffc4 	addi	r2,r2,-1
   2de38:	9009883a 	mov	r4,r18
   2de3c:	1480012e 	bgeu	r2,r18,2de44 <__sfvwrite_r+0x1d4>
   2de40:	1009883a 	mov	r4,r2
   2de44:	b80b883a 	mov	r5,r23
   2de48:	00219c40 	call	219c4 <__divsi3>
   2de4c:	15cf383a 	mul	r7,r2,r23
   2de50:	81400717 	ldw	r5,28(r16)
   2de54:	80800917 	ldw	r2,36(r16)
   2de58:	e00d883a 	mov	r6,fp
   2de5c:	a809883a 	mov	r4,r21
   2de60:	103ee83a 	callr	r2
   2de64:	00bfdb16 	blt	zero,r2,2ddd4 <__alt_data_end+0xfffee9d4>
   2de68:	8080030b 	ldhu	r2,12(r16)
   2de6c:	10801014 	ori	r2,r2,64
   2de70:	8080030d 	sth	r2,12(r16)
   2de74:	00bfffc4 	movi	r2,-1
   2de78:	003fab06 	br	2dd28 <__alt_data_end+0xfffee928>
   2de7c:	0027883a 	mov	r19,zero
   2de80:	0011883a 	mov	r8,zero
   2de84:	0039883a 	mov	fp,zero
   2de88:	0025883a 	mov	r18,zero
   2de8c:	90001f26 	beq	r18,zero,2df0c <__sfvwrite_r+0x29c>
   2de90:	40005a26 	beq	r8,zero,2dffc <__sfvwrite_r+0x38c>
   2de94:	982d883a 	mov	r22,r19
   2de98:	94c0012e 	bgeu	r18,r19,2dea0 <__sfvwrite_r+0x230>
   2de9c:	902d883a 	mov	r22,r18
   2dea0:	81000017 	ldw	r4,0(r16)
   2dea4:	80800417 	ldw	r2,16(r16)
   2dea8:	b02f883a 	mov	r23,r22
   2deac:	81c00517 	ldw	r7,20(r16)
   2deb0:	1100032e 	bgeu	r2,r4,2dec0 <__sfvwrite_r+0x250>
   2deb4:	80c00217 	ldw	r3,8(r16)
   2deb8:	38c7883a 	add	r3,r7,r3
   2debc:	1d801816 	blt	r3,r22,2df20 <__sfvwrite_r+0x2b0>
   2dec0:	b1c03e16 	blt	r22,r7,2dfbc <__sfvwrite_r+0x34c>
   2dec4:	80800917 	ldw	r2,36(r16)
   2dec8:	81400717 	ldw	r5,28(r16)
   2decc:	e00d883a 	mov	r6,fp
   2ded0:	da000115 	stw	r8,4(sp)
   2ded4:	a809883a 	mov	r4,r21
   2ded8:	103ee83a 	callr	r2
   2dedc:	102f883a 	mov	r23,r2
   2dee0:	da000117 	ldw	r8,4(sp)
   2dee4:	00bfe00e 	bge	zero,r2,2de68 <__alt_data_end+0xfffeea68>
   2dee8:	9de7c83a 	sub	r19,r19,r23
   2deec:	98001f26 	beq	r19,zero,2df6c <__sfvwrite_r+0x2fc>
   2def0:	a0800217 	ldw	r2,8(r20)
   2def4:	e5f9883a 	add	fp,fp,r23
   2def8:	95e5c83a 	sub	r18,r18,r23
   2defc:	15efc83a 	sub	r23,r2,r23
   2df00:	a5c00215 	stw	r23,8(r20)
   2df04:	b83f8726 	beq	r23,zero,2dd24 <__alt_data_end+0xfffee924>
   2df08:	903fe11e 	bne	r18,zero,2de90 <__alt_data_end+0xfffeea90>
   2df0c:	8f000017 	ldw	fp,0(r17)
   2df10:	8c800117 	ldw	r18,4(r17)
   2df14:	0011883a 	mov	r8,zero
   2df18:	8c400204 	addi	r17,r17,8
   2df1c:	003fdb06 	br	2de8c <__alt_data_end+0xfffeea8c>
   2df20:	180d883a 	mov	r6,r3
   2df24:	e00b883a 	mov	r5,fp
   2df28:	da000115 	stw	r8,4(sp)
   2df2c:	d8c00015 	stw	r3,0(sp)
   2df30:	002e1e00 	call	2e1e0 <memmove>
   2df34:	d8c00017 	ldw	r3,0(sp)
   2df38:	80800017 	ldw	r2,0(r16)
   2df3c:	800b883a 	mov	r5,r16
   2df40:	a809883a 	mov	r4,r21
   2df44:	10c5883a 	add	r2,r2,r3
   2df48:	80800015 	stw	r2,0(r16)
   2df4c:	d8c00015 	stw	r3,0(sp)
   2df50:	00295f40 	call	295f4 <_fflush_r>
   2df54:	d8c00017 	ldw	r3,0(sp)
   2df58:	da000117 	ldw	r8,4(sp)
   2df5c:	103fc21e 	bne	r2,zero,2de68 <__alt_data_end+0xfffeea68>
   2df60:	182f883a 	mov	r23,r3
   2df64:	9de7c83a 	sub	r19,r19,r23
   2df68:	983fe11e 	bne	r19,zero,2def0 <__alt_data_end+0xfffeeaf0>
   2df6c:	800b883a 	mov	r5,r16
   2df70:	a809883a 	mov	r4,r21
   2df74:	00295f40 	call	295f4 <_fflush_r>
   2df78:	103fbb1e 	bne	r2,zero,2de68 <__alt_data_end+0xfffeea68>
   2df7c:	0011883a 	mov	r8,zero
   2df80:	003fdb06 	br	2def0 <__alt_data_end+0xfffeeaf0>
   2df84:	94c0012e 	bgeu	r18,r19,2df8c <__sfvwrite_r+0x31c>
   2df88:	9027883a 	mov	r19,r18
   2df8c:	980d883a 	mov	r6,r19
   2df90:	e00b883a 	mov	r5,fp
   2df94:	002e1e00 	call	2e1e0 <memmove>
   2df98:	80800217 	ldw	r2,8(r16)
   2df9c:	80c00017 	ldw	r3,0(r16)
   2dfa0:	14c5c83a 	sub	r2,r2,r19
   2dfa4:	1cc7883a 	add	r3,r3,r19
   2dfa8:	80800215 	stw	r2,8(r16)
   2dfac:	80c00015 	stw	r3,0(r16)
   2dfb0:	10004326 	beq	r2,zero,2e0c0 <__sfvwrite_r+0x450>
   2dfb4:	9805883a 	mov	r2,r19
   2dfb8:	003f8606 	br	2ddd4 <__alt_data_end+0xfffee9d4>
   2dfbc:	b00d883a 	mov	r6,r22
   2dfc0:	e00b883a 	mov	r5,fp
   2dfc4:	da000115 	stw	r8,4(sp)
   2dfc8:	002e1e00 	call	2e1e0 <memmove>
   2dfcc:	80800217 	ldw	r2,8(r16)
   2dfd0:	80c00017 	ldw	r3,0(r16)
   2dfd4:	da000117 	ldw	r8,4(sp)
   2dfd8:	1585c83a 	sub	r2,r2,r22
   2dfdc:	1dad883a 	add	r22,r3,r22
   2dfe0:	80800215 	stw	r2,8(r16)
   2dfe4:	85800015 	stw	r22,0(r16)
   2dfe8:	003fbf06 	br	2dee8 <__alt_data_end+0xfffeeae8>
   2dfec:	81000017 	ldw	r4,0(r16)
   2dff0:	9027883a 	mov	r19,r18
   2dff4:	902f883a 	mov	r23,r18
   2dff8:	003f6c06 	br	2ddac <__alt_data_end+0xfffee9ac>
   2dffc:	900d883a 	mov	r6,r18
   2e000:	01400284 	movi	r5,10
   2e004:	e009883a 	mov	r4,fp
   2e008:	002aa800 	call	2aa80 <memchr>
   2e00c:	10003e26 	beq	r2,zero,2e108 <__sfvwrite_r+0x498>
   2e010:	10800044 	addi	r2,r2,1
   2e014:	1727c83a 	sub	r19,r2,fp
   2e018:	02000044 	movi	r8,1
   2e01c:	003f9d06 	br	2de94 <__alt_data_end+0xfffeea94>
   2e020:	80800517 	ldw	r2,20(r16)
   2e024:	81400417 	ldw	r5,16(r16)
   2e028:	81c00017 	ldw	r7,0(r16)
   2e02c:	10a7883a 	add	r19,r2,r2
   2e030:	9885883a 	add	r2,r19,r2
   2e034:	1026d7fa 	srli	r19,r2,31
   2e038:	396dc83a 	sub	r22,r7,r5
   2e03c:	b1000044 	addi	r4,r22,1
   2e040:	9885883a 	add	r2,r19,r2
   2e044:	1027d07a 	srai	r19,r2,1
   2e048:	2485883a 	add	r2,r4,r18
   2e04c:	980d883a 	mov	r6,r19
   2e050:	9880022e 	bgeu	r19,r2,2e05c <__sfvwrite_r+0x3ec>
   2e054:	1027883a 	mov	r19,r2
   2e058:	100d883a 	mov	r6,r2
   2e05c:	18c1000c 	andi	r3,r3,1024
   2e060:	18001c26 	beq	r3,zero,2e0d4 <__sfvwrite_r+0x464>
   2e064:	300b883a 	mov	r5,r6
   2e068:	a809883a 	mov	r4,r21
   2e06c:	002a2740 	call	2a274 <_malloc_r>
   2e070:	102f883a 	mov	r23,r2
   2e074:	10002926 	beq	r2,zero,2e11c <__sfvwrite_r+0x4ac>
   2e078:	81400417 	ldw	r5,16(r16)
   2e07c:	b00d883a 	mov	r6,r22
   2e080:	1009883a 	mov	r4,r2
   2e084:	002ab640 	call	2ab64 <memcpy>
   2e088:	8080030b 	ldhu	r2,12(r16)
   2e08c:	00fedfc4 	movi	r3,-1153
   2e090:	10c4703a 	and	r2,r2,r3
   2e094:	10802014 	ori	r2,r2,128
   2e098:	8080030d 	sth	r2,12(r16)
   2e09c:	bd89883a 	add	r4,r23,r22
   2e0a0:	9d8fc83a 	sub	r7,r19,r22
   2e0a4:	85c00415 	stw	r23,16(r16)
   2e0a8:	84c00515 	stw	r19,20(r16)
   2e0ac:	81000015 	stw	r4,0(r16)
   2e0b0:	9027883a 	mov	r19,r18
   2e0b4:	81c00215 	stw	r7,8(r16)
   2e0b8:	902f883a 	mov	r23,r18
   2e0bc:	003f3b06 	br	2ddac <__alt_data_end+0xfffee9ac>
   2e0c0:	800b883a 	mov	r5,r16
   2e0c4:	a809883a 	mov	r4,r21
   2e0c8:	00295f40 	call	295f4 <_fflush_r>
   2e0cc:	103fb926 	beq	r2,zero,2dfb4 <__alt_data_end+0xfffeebb4>
   2e0d0:	003f6506 	br	2de68 <__alt_data_end+0xfffeea68>
   2e0d4:	a809883a 	mov	r4,r21
   2e0d8:	002e39c0 	call	2e39c <_realloc_r>
   2e0dc:	102f883a 	mov	r23,r2
   2e0e0:	103fee1e 	bne	r2,zero,2e09c <__alt_data_end+0xfffeec9c>
   2e0e4:	81400417 	ldw	r5,16(r16)
   2e0e8:	a809883a 	mov	r4,r21
   2e0ec:	0029b440 	call	29b44 <_free_r>
   2e0f0:	8080030b 	ldhu	r2,12(r16)
   2e0f4:	00ffdfc4 	movi	r3,-129
   2e0f8:	1884703a 	and	r2,r3,r2
   2e0fc:	00c00304 	movi	r3,12
   2e100:	a8c00015 	stw	r3,0(r21)
   2e104:	003f5906 	br	2de6c <__alt_data_end+0xfffeea6c>
   2e108:	94c00044 	addi	r19,r18,1
   2e10c:	02000044 	movi	r8,1
   2e110:	003f6006 	br	2de94 <__alt_data_end+0xfffeea94>
   2e114:	00bfffc4 	movi	r2,-1
   2e118:	003f0306 	br	2dd28 <__alt_data_end+0xfffee928>
   2e11c:	00800304 	movi	r2,12
   2e120:	a8800015 	stw	r2,0(r21)
   2e124:	8080030b 	ldhu	r2,12(r16)
   2e128:	003f5006 	br	2de6c <__alt_data_end+0xfffeea6c>

0002e12c <_isatty_r>:
   2e12c:	defffd04 	addi	sp,sp,-12
   2e130:	dc000015 	stw	r16,0(sp)
   2e134:	040000f4 	movhi	r16,3
   2e138:	dc400115 	stw	r17,4(sp)
   2e13c:	8416fc04 	addi	r16,r16,23536
   2e140:	2023883a 	mov	r17,r4
   2e144:	2809883a 	mov	r4,r5
   2e148:	dfc00215 	stw	ra,8(sp)
   2e14c:	80000015 	stw	zero,0(r16)
   2e150:	002fa800 	call	2fa80 <isatty>
   2e154:	00ffffc4 	movi	r3,-1
   2e158:	10c00526 	beq	r2,r3,2e170 <_isatty_r+0x44>
   2e15c:	dfc00217 	ldw	ra,8(sp)
   2e160:	dc400117 	ldw	r17,4(sp)
   2e164:	dc000017 	ldw	r16,0(sp)
   2e168:	dec00304 	addi	sp,sp,12
   2e16c:	f800283a 	ret
   2e170:	80c00017 	ldw	r3,0(r16)
   2e174:	183ff926 	beq	r3,zero,2e15c <__alt_data_end+0xfffeed5c>
   2e178:	88c00015 	stw	r3,0(r17)
   2e17c:	003ff706 	br	2e15c <__alt_data_end+0xfffeed5c>

0002e180 <_lseek_r>:
   2e180:	defffd04 	addi	sp,sp,-12
   2e184:	2805883a 	mov	r2,r5
   2e188:	dc000015 	stw	r16,0(sp)
   2e18c:	040000f4 	movhi	r16,3
   2e190:	dc400115 	stw	r17,4(sp)
   2e194:	300b883a 	mov	r5,r6
   2e198:	8416fc04 	addi	r16,r16,23536
   2e19c:	2023883a 	mov	r17,r4
   2e1a0:	380d883a 	mov	r6,r7
   2e1a4:	1009883a 	mov	r4,r2
   2e1a8:	dfc00215 	stw	ra,8(sp)
   2e1ac:	80000015 	stw	zero,0(r16)
   2e1b0:	002fc4c0 	call	2fc4c <lseek>
   2e1b4:	00ffffc4 	movi	r3,-1
   2e1b8:	10c00526 	beq	r2,r3,2e1d0 <_lseek_r+0x50>
   2e1bc:	dfc00217 	ldw	ra,8(sp)
   2e1c0:	dc400117 	ldw	r17,4(sp)
   2e1c4:	dc000017 	ldw	r16,0(sp)
   2e1c8:	dec00304 	addi	sp,sp,12
   2e1cc:	f800283a 	ret
   2e1d0:	80c00017 	ldw	r3,0(r16)
   2e1d4:	183ff926 	beq	r3,zero,2e1bc <__alt_data_end+0xfffeedbc>
   2e1d8:	88c00015 	stw	r3,0(r17)
   2e1dc:	003ff706 	br	2e1bc <__alt_data_end+0xfffeedbc>

0002e1e0 <memmove>:
   2e1e0:	2005883a 	mov	r2,r4
   2e1e4:	29000b2e 	bgeu	r5,r4,2e214 <memmove+0x34>
   2e1e8:	298f883a 	add	r7,r5,r6
   2e1ec:	21c0092e 	bgeu	r4,r7,2e214 <memmove+0x34>
   2e1f0:	2187883a 	add	r3,r4,r6
   2e1f4:	198bc83a 	sub	r5,r3,r6
   2e1f8:	30004826 	beq	r6,zero,2e31c <memmove+0x13c>
   2e1fc:	39ffffc4 	addi	r7,r7,-1
   2e200:	39000003 	ldbu	r4,0(r7)
   2e204:	18ffffc4 	addi	r3,r3,-1
   2e208:	19000005 	stb	r4,0(r3)
   2e20c:	28fffb1e 	bne	r5,r3,2e1fc <__alt_data_end+0xfffeedfc>
   2e210:	f800283a 	ret
   2e214:	00c003c4 	movi	r3,15
   2e218:	1980412e 	bgeu	r3,r6,2e320 <memmove+0x140>
   2e21c:	2886b03a 	or	r3,r5,r2
   2e220:	18c000cc 	andi	r3,r3,3
   2e224:	1800401e 	bne	r3,zero,2e328 <memmove+0x148>
   2e228:	33fffc04 	addi	r15,r6,-16
   2e22c:	781ed13a 	srli	r15,r15,4
   2e230:	28c00104 	addi	r3,r5,4
   2e234:	13400104 	addi	r13,r2,4
   2e238:	781c913a 	slli	r14,r15,4
   2e23c:	2b000204 	addi	r12,r5,8
   2e240:	12c00204 	addi	r11,r2,8
   2e244:	73800504 	addi	r14,r14,20
   2e248:	2a800304 	addi	r10,r5,12
   2e24c:	12400304 	addi	r9,r2,12
   2e250:	2b9d883a 	add	r14,r5,r14
   2e254:	2811883a 	mov	r8,r5
   2e258:	100f883a 	mov	r7,r2
   2e25c:	41000017 	ldw	r4,0(r8)
   2e260:	39c00404 	addi	r7,r7,16
   2e264:	18c00404 	addi	r3,r3,16
   2e268:	393ffc15 	stw	r4,-16(r7)
   2e26c:	193ffc17 	ldw	r4,-16(r3)
   2e270:	6b400404 	addi	r13,r13,16
   2e274:	5ac00404 	addi	r11,r11,16
   2e278:	693ffc15 	stw	r4,-16(r13)
   2e27c:	61000017 	ldw	r4,0(r12)
   2e280:	4a400404 	addi	r9,r9,16
   2e284:	42000404 	addi	r8,r8,16
   2e288:	593ffc15 	stw	r4,-16(r11)
   2e28c:	51000017 	ldw	r4,0(r10)
   2e290:	63000404 	addi	r12,r12,16
   2e294:	52800404 	addi	r10,r10,16
   2e298:	493ffc15 	stw	r4,-16(r9)
   2e29c:	1bbfef1e 	bne	r3,r14,2e25c <__alt_data_end+0xfffeee5c>
   2e2a0:	79000044 	addi	r4,r15,1
   2e2a4:	2008913a 	slli	r4,r4,4
   2e2a8:	328003cc 	andi	r10,r6,15
   2e2ac:	02c000c4 	movi	r11,3
   2e2b0:	1107883a 	add	r3,r2,r4
   2e2b4:	290b883a 	add	r5,r5,r4
   2e2b8:	5a801e2e 	bgeu	r11,r10,2e334 <memmove+0x154>
   2e2bc:	1813883a 	mov	r9,r3
   2e2c0:	2811883a 	mov	r8,r5
   2e2c4:	500f883a 	mov	r7,r10
   2e2c8:	41000017 	ldw	r4,0(r8)
   2e2cc:	4a400104 	addi	r9,r9,4
   2e2d0:	39ffff04 	addi	r7,r7,-4
   2e2d4:	493fff15 	stw	r4,-4(r9)
   2e2d8:	42000104 	addi	r8,r8,4
   2e2dc:	59fffa36 	bltu	r11,r7,2e2c8 <__alt_data_end+0xfffeeec8>
   2e2e0:	513fff04 	addi	r4,r10,-4
   2e2e4:	2008d0ba 	srli	r4,r4,2
   2e2e8:	318000cc 	andi	r6,r6,3
   2e2ec:	21000044 	addi	r4,r4,1
   2e2f0:	2109883a 	add	r4,r4,r4
   2e2f4:	2109883a 	add	r4,r4,r4
   2e2f8:	1907883a 	add	r3,r3,r4
   2e2fc:	290b883a 	add	r5,r5,r4
   2e300:	30000b26 	beq	r6,zero,2e330 <memmove+0x150>
   2e304:	198d883a 	add	r6,r3,r6
   2e308:	29c00003 	ldbu	r7,0(r5)
   2e30c:	18c00044 	addi	r3,r3,1
   2e310:	29400044 	addi	r5,r5,1
   2e314:	19ffffc5 	stb	r7,-1(r3)
   2e318:	19bffb1e 	bne	r3,r6,2e308 <__alt_data_end+0xfffeef08>
   2e31c:	f800283a 	ret
   2e320:	1007883a 	mov	r3,r2
   2e324:	003ff606 	br	2e300 <__alt_data_end+0xfffeef00>
   2e328:	1007883a 	mov	r3,r2
   2e32c:	003ff506 	br	2e304 <__alt_data_end+0xfffeef04>
   2e330:	f800283a 	ret
   2e334:	500d883a 	mov	r6,r10
   2e338:	003ff106 	br	2e300 <__alt_data_end+0xfffeef00>

0002e33c <_read_r>:
   2e33c:	defffd04 	addi	sp,sp,-12
   2e340:	2805883a 	mov	r2,r5
   2e344:	dc000015 	stw	r16,0(sp)
   2e348:	040000f4 	movhi	r16,3
   2e34c:	dc400115 	stw	r17,4(sp)
   2e350:	300b883a 	mov	r5,r6
   2e354:	8416fc04 	addi	r16,r16,23536
   2e358:	2023883a 	mov	r17,r4
   2e35c:	380d883a 	mov	r6,r7
   2e360:	1009883a 	mov	r4,r2
   2e364:	dfc00215 	stw	ra,8(sp)
   2e368:	80000015 	stw	zero,0(r16)
   2e36c:	002fe200 	call	2fe20 <read>
   2e370:	00ffffc4 	movi	r3,-1
   2e374:	10c00526 	beq	r2,r3,2e38c <_read_r+0x50>
   2e378:	dfc00217 	ldw	ra,8(sp)
   2e37c:	dc400117 	ldw	r17,4(sp)
   2e380:	dc000017 	ldw	r16,0(sp)
   2e384:	dec00304 	addi	sp,sp,12
   2e388:	f800283a 	ret
   2e38c:	80c00017 	ldw	r3,0(r16)
   2e390:	183ff926 	beq	r3,zero,2e378 <__alt_data_end+0xfffeef78>
   2e394:	88c00015 	stw	r3,0(r17)
   2e398:	003ff706 	br	2e378 <__alt_data_end+0xfffeef78>

0002e39c <_realloc_r>:
   2e39c:	defff604 	addi	sp,sp,-40
   2e3a0:	dc800215 	stw	r18,8(sp)
   2e3a4:	dfc00915 	stw	ra,36(sp)
   2e3a8:	df000815 	stw	fp,32(sp)
   2e3ac:	ddc00715 	stw	r23,28(sp)
   2e3b0:	dd800615 	stw	r22,24(sp)
   2e3b4:	dd400515 	stw	r21,20(sp)
   2e3b8:	dd000415 	stw	r20,16(sp)
   2e3bc:	dcc00315 	stw	r19,12(sp)
   2e3c0:	dc400115 	stw	r17,4(sp)
   2e3c4:	dc000015 	stw	r16,0(sp)
   2e3c8:	3025883a 	mov	r18,r6
   2e3cc:	2800b726 	beq	r5,zero,2e6ac <_realloc_r+0x310>
   2e3d0:	282b883a 	mov	r21,r5
   2e3d4:	2029883a 	mov	r20,r4
   2e3d8:	002fd9c0 	call	2fd9c <__malloc_lock>
   2e3dc:	a8bfff17 	ldw	r2,-4(r21)
   2e3e0:	043fff04 	movi	r16,-4
   2e3e4:	90c002c4 	addi	r3,r18,11
   2e3e8:	01000584 	movi	r4,22
   2e3ec:	acfffe04 	addi	r19,r21,-8
   2e3f0:	1420703a 	and	r16,r2,r16
   2e3f4:	20c0332e 	bgeu	r4,r3,2e4c4 <_realloc_r+0x128>
   2e3f8:	047ffe04 	movi	r17,-8
   2e3fc:	1c62703a 	and	r17,r3,r17
   2e400:	8807883a 	mov	r3,r17
   2e404:	88005816 	blt	r17,zero,2e568 <_realloc_r+0x1cc>
   2e408:	8c805736 	bltu	r17,r18,2e568 <_realloc_r+0x1cc>
   2e40c:	80c0300e 	bge	r16,r3,2e4d0 <_realloc_r+0x134>
   2e410:	070000f4 	movhi	fp,3
   2e414:	e70a8d04 	addi	fp,fp,10804
   2e418:	e1c00217 	ldw	r7,8(fp)
   2e41c:	9c09883a 	add	r4,r19,r16
   2e420:	22000117 	ldw	r8,4(r4)
   2e424:	21c06326 	beq	r4,r7,2e5b4 <_realloc_r+0x218>
   2e428:	017fff84 	movi	r5,-2
   2e42c:	414a703a 	and	r5,r8,r5
   2e430:	214b883a 	add	r5,r4,r5
   2e434:	29800117 	ldw	r6,4(r5)
   2e438:	3180004c 	andi	r6,r6,1
   2e43c:	30003f26 	beq	r6,zero,2e53c <_realloc_r+0x1a0>
   2e440:	1080004c 	andi	r2,r2,1
   2e444:	10008326 	beq	r2,zero,2e654 <_realloc_r+0x2b8>
   2e448:	900b883a 	mov	r5,r18
   2e44c:	a009883a 	mov	r4,r20
   2e450:	002a2740 	call	2a274 <_malloc_r>
   2e454:	1025883a 	mov	r18,r2
   2e458:	10011e26 	beq	r2,zero,2e8d4 <_realloc_r+0x538>
   2e45c:	a93fff17 	ldw	r4,-4(r21)
   2e460:	10fffe04 	addi	r3,r2,-8
   2e464:	00bfff84 	movi	r2,-2
   2e468:	2084703a 	and	r2,r4,r2
   2e46c:	9885883a 	add	r2,r19,r2
   2e470:	1880ee26 	beq	r3,r2,2e82c <_realloc_r+0x490>
   2e474:	81bfff04 	addi	r6,r16,-4
   2e478:	00800904 	movi	r2,36
   2e47c:	1180b836 	bltu	r2,r6,2e760 <_realloc_r+0x3c4>
   2e480:	00c004c4 	movi	r3,19
   2e484:	19809636 	bltu	r3,r6,2e6e0 <_realloc_r+0x344>
   2e488:	9005883a 	mov	r2,r18
   2e48c:	a807883a 	mov	r3,r21
   2e490:	19000017 	ldw	r4,0(r3)
   2e494:	11000015 	stw	r4,0(r2)
   2e498:	19000117 	ldw	r4,4(r3)
   2e49c:	11000115 	stw	r4,4(r2)
   2e4a0:	18c00217 	ldw	r3,8(r3)
   2e4a4:	10c00215 	stw	r3,8(r2)
   2e4a8:	a80b883a 	mov	r5,r21
   2e4ac:	a009883a 	mov	r4,r20
   2e4b0:	0029b440 	call	29b44 <_free_r>
   2e4b4:	a009883a 	mov	r4,r20
   2e4b8:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2e4bc:	9005883a 	mov	r2,r18
   2e4c0:	00001206 	br	2e50c <_realloc_r+0x170>
   2e4c4:	00c00404 	movi	r3,16
   2e4c8:	1823883a 	mov	r17,r3
   2e4cc:	003fce06 	br	2e408 <__alt_data_end+0xfffef008>
   2e4d0:	a825883a 	mov	r18,r21
   2e4d4:	8445c83a 	sub	r2,r16,r17
   2e4d8:	00c003c4 	movi	r3,15
   2e4dc:	18802636 	bltu	r3,r2,2e578 <_realloc_r+0x1dc>
   2e4e0:	99800117 	ldw	r6,4(r19)
   2e4e4:	9c07883a 	add	r3,r19,r16
   2e4e8:	3180004c 	andi	r6,r6,1
   2e4ec:	3420b03a 	or	r16,r6,r16
   2e4f0:	9c000115 	stw	r16,4(r19)
   2e4f4:	18800117 	ldw	r2,4(r3)
   2e4f8:	10800054 	ori	r2,r2,1
   2e4fc:	18800115 	stw	r2,4(r3)
   2e500:	a009883a 	mov	r4,r20
   2e504:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2e508:	9005883a 	mov	r2,r18
   2e50c:	dfc00917 	ldw	ra,36(sp)
   2e510:	df000817 	ldw	fp,32(sp)
   2e514:	ddc00717 	ldw	r23,28(sp)
   2e518:	dd800617 	ldw	r22,24(sp)
   2e51c:	dd400517 	ldw	r21,20(sp)
   2e520:	dd000417 	ldw	r20,16(sp)
   2e524:	dcc00317 	ldw	r19,12(sp)
   2e528:	dc800217 	ldw	r18,8(sp)
   2e52c:	dc400117 	ldw	r17,4(sp)
   2e530:	dc000017 	ldw	r16,0(sp)
   2e534:	dec00a04 	addi	sp,sp,40
   2e538:	f800283a 	ret
   2e53c:	017fff04 	movi	r5,-4
   2e540:	414a703a 	and	r5,r8,r5
   2e544:	814d883a 	add	r6,r16,r5
   2e548:	30c01f16 	blt	r6,r3,2e5c8 <_realloc_r+0x22c>
   2e54c:	20800317 	ldw	r2,12(r4)
   2e550:	20c00217 	ldw	r3,8(r4)
   2e554:	a825883a 	mov	r18,r21
   2e558:	3021883a 	mov	r16,r6
   2e55c:	18800315 	stw	r2,12(r3)
   2e560:	10c00215 	stw	r3,8(r2)
   2e564:	003fdb06 	br	2e4d4 <__alt_data_end+0xfffef0d4>
   2e568:	00800304 	movi	r2,12
   2e56c:	a0800015 	stw	r2,0(r20)
   2e570:	0005883a 	mov	r2,zero
   2e574:	003fe506 	br	2e50c <__alt_data_end+0xfffef10c>
   2e578:	98c00117 	ldw	r3,4(r19)
   2e57c:	9c4b883a 	add	r5,r19,r17
   2e580:	11000054 	ori	r4,r2,1
   2e584:	18c0004c 	andi	r3,r3,1
   2e588:	1c62b03a 	or	r17,r3,r17
   2e58c:	9c400115 	stw	r17,4(r19)
   2e590:	29000115 	stw	r4,4(r5)
   2e594:	2885883a 	add	r2,r5,r2
   2e598:	10c00117 	ldw	r3,4(r2)
   2e59c:	29400204 	addi	r5,r5,8
   2e5a0:	a009883a 	mov	r4,r20
   2e5a4:	18c00054 	ori	r3,r3,1
   2e5a8:	10c00115 	stw	r3,4(r2)
   2e5ac:	0029b440 	call	29b44 <_free_r>
   2e5b0:	003fd306 	br	2e500 <__alt_data_end+0xfffef100>
   2e5b4:	017fff04 	movi	r5,-4
   2e5b8:	414a703a 	and	r5,r8,r5
   2e5bc:	89800404 	addi	r6,r17,16
   2e5c0:	8151883a 	add	r8,r16,r5
   2e5c4:	4180590e 	bge	r8,r6,2e72c <_realloc_r+0x390>
   2e5c8:	1080004c 	andi	r2,r2,1
   2e5cc:	103f9e1e 	bne	r2,zero,2e448 <__alt_data_end+0xfffef048>
   2e5d0:	adbffe17 	ldw	r22,-8(r21)
   2e5d4:	00bfff04 	movi	r2,-4
   2e5d8:	9dadc83a 	sub	r22,r19,r22
   2e5dc:	b1800117 	ldw	r6,4(r22)
   2e5e0:	3084703a 	and	r2,r6,r2
   2e5e4:	20002026 	beq	r4,zero,2e668 <_realloc_r+0x2cc>
   2e5e8:	80af883a 	add	r23,r16,r2
   2e5ec:	b96f883a 	add	r23,r23,r5
   2e5f0:	21c05f26 	beq	r4,r7,2e770 <_realloc_r+0x3d4>
   2e5f4:	b8c01c16 	blt	r23,r3,2e668 <_realloc_r+0x2cc>
   2e5f8:	20800317 	ldw	r2,12(r4)
   2e5fc:	20c00217 	ldw	r3,8(r4)
   2e600:	81bfff04 	addi	r6,r16,-4
   2e604:	01000904 	movi	r4,36
   2e608:	18800315 	stw	r2,12(r3)
   2e60c:	10c00215 	stw	r3,8(r2)
   2e610:	b0c00217 	ldw	r3,8(r22)
   2e614:	b0800317 	ldw	r2,12(r22)
   2e618:	b4800204 	addi	r18,r22,8
   2e61c:	18800315 	stw	r2,12(r3)
   2e620:	10c00215 	stw	r3,8(r2)
   2e624:	21801b36 	bltu	r4,r6,2e694 <_realloc_r+0x2f8>
   2e628:	008004c4 	movi	r2,19
   2e62c:	1180352e 	bgeu	r2,r6,2e704 <_realloc_r+0x368>
   2e630:	a8800017 	ldw	r2,0(r21)
   2e634:	b0800215 	stw	r2,8(r22)
   2e638:	a8800117 	ldw	r2,4(r21)
   2e63c:	b0800315 	stw	r2,12(r22)
   2e640:	008006c4 	movi	r2,27
   2e644:	11807f36 	bltu	r2,r6,2e844 <_realloc_r+0x4a8>
   2e648:	b0800404 	addi	r2,r22,16
   2e64c:	ad400204 	addi	r21,r21,8
   2e650:	00002d06 	br	2e708 <_realloc_r+0x36c>
   2e654:	adbffe17 	ldw	r22,-8(r21)
   2e658:	00bfff04 	movi	r2,-4
   2e65c:	9dadc83a 	sub	r22,r19,r22
   2e660:	b1000117 	ldw	r4,4(r22)
   2e664:	2084703a 	and	r2,r4,r2
   2e668:	b03f7726 	beq	r22,zero,2e448 <__alt_data_end+0xfffef048>
   2e66c:	80af883a 	add	r23,r16,r2
   2e670:	b8ff7516 	blt	r23,r3,2e448 <__alt_data_end+0xfffef048>
   2e674:	b0800317 	ldw	r2,12(r22)
   2e678:	b0c00217 	ldw	r3,8(r22)
   2e67c:	81bfff04 	addi	r6,r16,-4
   2e680:	01000904 	movi	r4,36
   2e684:	18800315 	stw	r2,12(r3)
   2e688:	10c00215 	stw	r3,8(r2)
   2e68c:	b4800204 	addi	r18,r22,8
   2e690:	21bfe52e 	bgeu	r4,r6,2e628 <__alt_data_end+0xfffef228>
   2e694:	a80b883a 	mov	r5,r21
   2e698:	9009883a 	mov	r4,r18
   2e69c:	002e1e00 	call	2e1e0 <memmove>
   2e6a0:	b821883a 	mov	r16,r23
   2e6a4:	b027883a 	mov	r19,r22
   2e6a8:	003f8a06 	br	2e4d4 <__alt_data_end+0xfffef0d4>
   2e6ac:	300b883a 	mov	r5,r6
   2e6b0:	dfc00917 	ldw	ra,36(sp)
   2e6b4:	df000817 	ldw	fp,32(sp)
   2e6b8:	ddc00717 	ldw	r23,28(sp)
   2e6bc:	dd800617 	ldw	r22,24(sp)
   2e6c0:	dd400517 	ldw	r21,20(sp)
   2e6c4:	dd000417 	ldw	r20,16(sp)
   2e6c8:	dcc00317 	ldw	r19,12(sp)
   2e6cc:	dc800217 	ldw	r18,8(sp)
   2e6d0:	dc400117 	ldw	r17,4(sp)
   2e6d4:	dc000017 	ldw	r16,0(sp)
   2e6d8:	dec00a04 	addi	sp,sp,40
   2e6dc:	002a2741 	jmpi	2a274 <_malloc_r>
   2e6e0:	a8c00017 	ldw	r3,0(r21)
   2e6e4:	90c00015 	stw	r3,0(r18)
   2e6e8:	a8c00117 	ldw	r3,4(r21)
   2e6ec:	90c00115 	stw	r3,4(r18)
   2e6f0:	00c006c4 	movi	r3,27
   2e6f4:	19804536 	bltu	r3,r6,2e80c <_realloc_r+0x470>
   2e6f8:	90800204 	addi	r2,r18,8
   2e6fc:	a8c00204 	addi	r3,r21,8
   2e700:	003f6306 	br	2e490 <__alt_data_end+0xfffef090>
   2e704:	9005883a 	mov	r2,r18
   2e708:	a8c00017 	ldw	r3,0(r21)
   2e70c:	b821883a 	mov	r16,r23
   2e710:	b027883a 	mov	r19,r22
   2e714:	10c00015 	stw	r3,0(r2)
   2e718:	a8c00117 	ldw	r3,4(r21)
   2e71c:	10c00115 	stw	r3,4(r2)
   2e720:	a8c00217 	ldw	r3,8(r21)
   2e724:	10c00215 	stw	r3,8(r2)
   2e728:	003f6a06 	br	2e4d4 <__alt_data_end+0xfffef0d4>
   2e72c:	9c67883a 	add	r19,r19,r17
   2e730:	4445c83a 	sub	r2,r8,r17
   2e734:	e4c00215 	stw	r19,8(fp)
   2e738:	10800054 	ori	r2,r2,1
   2e73c:	98800115 	stw	r2,4(r19)
   2e740:	a8bfff17 	ldw	r2,-4(r21)
   2e744:	a009883a 	mov	r4,r20
   2e748:	1080004c 	andi	r2,r2,1
   2e74c:	1462b03a 	or	r17,r2,r17
   2e750:	ac7fff15 	stw	r17,-4(r21)
   2e754:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2e758:	a805883a 	mov	r2,r21
   2e75c:	003f6b06 	br	2e50c <__alt_data_end+0xfffef10c>
   2e760:	a80b883a 	mov	r5,r21
   2e764:	9009883a 	mov	r4,r18
   2e768:	002e1e00 	call	2e1e0 <memmove>
   2e76c:	003f4e06 	br	2e4a8 <__alt_data_end+0xfffef0a8>
   2e770:	89000404 	addi	r4,r17,16
   2e774:	b93fbc16 	blt	r23,r4,2e668 <__alt_data_end+0xfffef268>
   2e778:	b0800317 	ldw	r2,12(r22)
   2e77c:	b0c00217 	ldw	r3,8(r22)
   2e780:	81bfff04 	addi	r6,r16,-4
   2e784:	01000904 	movi	r4,36
   2e788:	18800315 	stw	r2,12(r3)
   2e78c:	10c00215 	stw	r3,8(r2)
   2e790:	b4800204 	addi	r18,r22,8
   2e794:	21804336 	bltu	r4,r6,2e8a4 <_realloc_r+0x508>
   2e798:	008004c4 	movi	r2,19
   2e79c:	11803f2e 	bgeu	r2,r6,2e89c <_realloc_r+0x500>
   2e7a0:	a8800017 	ldw	r2,0(r21)
   2e7a4:	b0800215 	stw	r2,8(r22)
   2e7a8:	a8800117 	ldw	r2,4(r21)
   2e7ac:	b0800315 	stw	r2,12(r22)
   2e7b0:	008006c4 	movi	r2,27
   2e7b4:	11803f36 	bltu	r2,r6,2e8b4 <_realloc_r+0x518>
   2e7b8:	b0800404 	addi	r2,r22,16
   2e7bc:	ad400204 	addi	r21,r21,8
   2e7c0:	a8c00017 	ldw	r3,0(r21)
   2e7c4:	10c00015 	stw	r3,0(r2)
   2e7c8:	a8c00117 	ldw	r3,4(r21)
   2e7cc:	10c00115 	stw	r3,4(r2)
   2e7d0:	a8c00217 	ldw	r3,8(r21)
   2e7d4:	10c00215 	stw	r3,8(r2)
   2e7d8:	b447883a 	add	r3,r22,r17
   2e7dc:	bc45c83a 	sub	r2,r23,r17
   2e7e0:	e0c00215 	stw	r3,8(fp)
   2e7e4:	10800054 	ori	r2,r2,1
   2e7e8:	18800115 	stw	r2,4(r3)
   2e7ec:	b0800117 	ldw	r2,4(r22)
   2e7f0:	a009883a 	mov	r4,r20
   2e7f4:	1080004c 	andi	r2,r2,1
   2e7f8:	1462b03a 	or	r17,r2,r17
   2e7fc:	b4400115 	stw	r17,4(r22)
   2e800:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2e804:	9005883a 	mov	r2,r18
   2e808:	003f4006 	br	2e50c <__alt_data_end+0xfffef10c>
   2e80c:	a8c00217 	ldw	r3,8(r21)
   2e810:	90c00215 	stw	r3,8(r18)
   2e814:	a8c00317 	ldw	r3,12(r21)
   2e818:	90c00315 	stw	r3,12(r18)
   2e81c:	30801126 	beq	r6,r2,2e864 <_realloc_r+0x4c8>
   2e820:	90800404 	addi	r2,r18,16
   2e824:	a8c00404 	addi	r3,r21,16
   2e828:	003f1906 	br	2e490 <__alt_data_end+0xfffef090>
   2e82c:	90ffff17 	ldw	r3,-4(r18)
   2e830:	00bfff04 	movi	r2,-4
   2e834:	a825883a 	mov	r18,r21
   2e838:	1884703a 	and	r2,r3,r2
   2e83c:	80a1883a 	add	r16,r16,r2
   2e840:	003f2406 	br	2e4d4 <__alt_data_end+0xfffef0d4>
   2e844:	a8800217 	ldw	r2,8(r21)
   2e848:	b0800415 	stw	r2,16(r22)
   2e84c:	a8800317 	ldw	r2,12(r21)
   2e850:	b0800515 	stw	r2,20(r22)
   2e854:	31000a26 	beq	r6,r4,2e880 <_realloc_r+0x4e4>
   2e858:	b0800604 	addi	r2,r22,24
   2e85c:	ad400404 	addi	r21,r21,16
   2e860:	003fa906 	br	2e708 <__alt_data_end+0xfffef308>
   2e864:	a9000417 	ldw	r4,16(r21)
   2e868:	90800604 	addi	r2,r18,24
   2e86c:	a8c00604 	addi	r3,r21,24
   2e870:	91000415 	stw	r4,16(r18)
   2e874:	a9000517 	ldw	r4,20(r21)
   2e878:	91000515 	stw	r4,20(r18)
   2e87c:	003f0406 	br	2e490 <__alt_data_end+0xfffef090>
   2e880:	a8c00417 	ldw	r3,16(r21)
   2e884:	ad400604 	addi	r21,r21,24
   2e888:	b0800804 	addi	r2,r22,32
   2e88c:	b0c00615 	stw	r3,24(r22)
   2e890:	a8ffff17 	ldw	r3,-4(r21)
   2e894:	b0c00715 	stw	r3,28(r22)
   2e898:	003f9b06 	br	2e708 <__alt_data_end+0xfffef308>
   2e89c:	9005883a 	mov	r2,r18
   2e8a0:	003fc706 	br	2e7c0 <__alt_data_end+0xfffef3c0>
   2e8a4:	a80b883a 	mov	r5,r21
   2e8a8:	9009883a 	mov	r4,r18
   2e8ac:	002e1e00 	call	2e1e0 <memmove>
   2e8b0:	003fc906 	br	2e7d8 <__alt_data_end+0xfffef3d8>
   2e8b4:	a8800217 	ldw	r2,8(r21)
   2e8b8:	b0800415 	stw	r2,16(r22)
   2e8bc:	a8800317 	ldw	r2,12(r21)
   2e8c0:	b0800515 	stw	r2,20(r22)
   2e8c4:	31000726 	beq	r6,r4,2e8e4 <_realloc_r+0x548>
   2e8c8:	b0800604 	addi	r2,r22,24
   2e8cc:	ad400404 	addi	r21,r21,16
   2e8d0:	003fbb06 	br	2e7c0 <__alt_data_end+0xfffef3c0>
   2e8d4:	a009883a 	mov	r4,r20
   2e8d8:	002fdc00 	call	2fdc0 <__malloc_unlock>
   2e8dc:	0005883a 	mov	r2,zero
   2e8e0:	003f0a06 	br	2e50c <__alt_data_end+0xfffef10c>
   2e8e4:	a8c00417 	ldw	r3,16(r21)
   2e8e8:	ad400604 	addi	r21,r21,24
   2e8ec:	b0800804 	addi	r2,r22,32
   2e8f0:	b0c00615 	stw	r3,24(r22)
   2e8f4:	a8ffff17 	ldw	r3,-4(r21)
   2e8f8:	b0c00715 	stw	r3,28(r22)
   2e8fc:	003fb006 	br	2e7c0 <__alt_data_end+0xfffef3c0>

0002e900 <__swbuf_r>:
   2e900:	defffb04 	addi	sp,sp,-20
   2e904:	dcc00315 	stw	r19,12(sp)
   2e908:	dc800215 	stw	r18,8(sp)
   2e90c:	dc000015 	stw	r16,0(sp)
   2e910:	dfc00415 	stw	ra,16(sp)
   2e914:	dc400115 	stw	r17,4(sp)
   2e918:	2025883a 	mov	r18,r4
   2e91c:	2827883a 	mov	r19,r5
   2e920:	3021883a 	mov	r16,r6
   2e924:	20000226 	beq	r4,zero,2e930 <__swbuf_r+0x30>
   2e928:	20800e17 	ldw	r2,56(r4)
   2e92c:	10004226 	beq	r2,zero,2ea38 <__swbuf_r+0x138>
   2e930:	80800617 	ldw	r2,24(r16)
   2e934:	8100030b 	ldhu	r4,12(r16)
   2e938:	80800215 	stw	r2,8(r16)
   2e93c:	2080020c 	andi	r2,r4,8
   2e940:	10003626 	beq	r2,zero,2ea1c <__swbuf_r+0x11c>
   2e944:	80c00417 	ldw	r3,16(r16)
   2e948:	18003426 	beq	r3,zero,2ea1c <__swbuf_r+0x11c>
   2e94c:	2088000c 	andi	r2,r4,8192
   2e950:	9c403fcc 	andi	r17,r19,255
   2e954:	10001a26 	beq	r2,zero,2e9c0 <__swbuf_r+0xc0>
   2e958:	80800017 	ldw	r2,0(r16)
   2e95c:	81000517 	ldw	r4,20(r16)
   2e960:	10c7c83a 	sub	r3,r2,r3
   2e964:	1900200e 	bge	r3,r4,2e9e8 <__swbuf_r+0xe8>
   2e968:	18c00044 	addi	r3,r3,1
   2e96c:	81000217 	ldw	r4,8(r16)
   2e970:	11400044 	addi	r5,r2,1
   2e974:	81400015 	stw	r5,0(r16)
   2e978:	213fffc4 	addi	r4,r4,-1
   2e97c:	81000215 	stw	r4,8(r16)
   2e980:	14c00005 	stb	r19,0(r2)
   2e984:	80800517 	ldw	r2,20(r16)
   2e988:	10c01e26 	beq	r2,r3,2ea04 <__swbuf_r+0x104>
   2e98c:	8080030b 	ldhu	r2,12(r16)
   2e990:	1080004c 	andi	r2,r2,1
   2e994:	10000226 	beq	r2,zero,2e9a0 <__swbuf_r+0xa0>
   2e998:	00800284 	movi	r2,10
   2e99c:	88801926 	beq	r17,r2,2ea04 <__swbuf_r+0x104>
   2e9a0:	8805883a 	mov	r2,r17
   2e9a4:	dfc00417 	ldw	ra,16(sp)
   2e9a8:	dcc00317 	ldw	r19,12(sp)
   2e9ac:	dc800217 	ldw	r18,8(sp)
   2e9b0:	dc400117 	ldw	r17,4(sp)
   2e9b4:	dc000017 	ldw	r16,0(sp)
   2e9b8:	dec00504 	addi	sp,sp,20
   2e9bc:	f800283a 	ret
   2e9c0:	81401917 	ldw	r5,100(r16)
   2e9c4:	00b7ffc4 	movi	r2,-8193
   2e9c8:	21080014 	ori	r4,r4,8192
   2e9cc:	2884703a 	and	r2,r5,r2
   2e9d0:	80801915 	stw	r2,100(r16)
   2e9d4:	80800017 	ldw	r2,0(r16)
   2e9d8:	8100030d 	sth	r4,12(r16)
   2e9dc:	81000517 	ldw	r4,20(r16)
   2e9e0:	10c7c83a 	sub	r3,r2,r3
   2e9e4:	193fe016 	blt	r3,r4,2e968 <__alt_data_end+0xfffef568>
   2e9e8:	800b883a 	mov	r5,r16
   2e9ec:	9009883a 	mov	r4,r18
   2e9f0:	00295f40 	call	295f4 <_fflush_r>
   2e9f4:	1000071e 	bne	r2,zero,2ea14 <__swbuf_r+0x114>
   2e9f8:	80800017 	ldw	r2,0(r16)
   2e9fc:	00c00044 	movi	r3,1
   2ea00:	003fda06 	br	2e96c <__alt_data_end+0xfffef56c>
   2ea04:	800b883a 	mov	r5,r16
   2ea08:	9009883a 	mov	r4,r18
   2ea0c:	00295f40 	call	295f4 <_fflush_r>
   2ea10:	103fe326 	beq	r2,zero,2e9a0 <__alt_data_end+0xfffef5a0>
   2ea14:	00bfffc4 	movi	r2,-1
   2ea18:	003fe206 	br	2e9a4 <__alt_data_end+0xfffef5a4>
   2ea1c:	800b883a 	mov	r5,r16
   2ea20:	9009883a 	mov	r4,r18
   2ea24:	00279fc0 	call	279fc <__swsetup_r>
   2ea28:	103ffa1e 	bne	r2,zero,2ea14 <__alt_data_end+0xfffef614>
   2ea2c:	8100030b 	ldhu	r4,12(r16)
   2ea30:	80c00417 	ldw	r3,16(r16)
   2ea34:	003fc506 	br	2e94c <__alt_data_end+0xfffef54c>
   2ea38:	00299d00 	call	299d0 <__sinit>
   2ea3c:	003fbc06 	br	2e930 <__alt_data_end+0xfffef530>

0002ea40 <__swbuf>:
   2ea40:	008000f4 	movhi	r2,3
   2ea44:	10901e04 	addi	r2,r2,16504
   2ea48:	280d883a 	mov	r6,r5
   2ea4c:	200b883a 	mov	r5,r4
   2ea50:	11000017 	ldw	r4,0(r2)
   2ea54:	002e9001 	jmpi	2e900 <__swbuf_r>

0002ea58 <_wcrtomb_r>:
   2ea58:	defff604 	addi	sp,sp,-40
   2ea5c:	008000f4 	movhi	r2,3
   2ea60:	dc800815 	stw	r18,32(sp)
   2ea64:	dc400715 	stw	r17,28(sp)
   2ea68:	dc000615 	stw	r16,24(sp)
   2ea6c:	10902204 	addi	r2,r2,16520
   2ea70:	dfc00915 	stw	ra,36(sp)
   2ea74:	2021883a 	mov	r16,r4
   2ea78:	3823883a 	mov	r17,r7
   2ea7c:	14800017 	ldw	r18,0(r2)
   2ea80:	28001426 	beq	r5,zero,2ead4 <_wcrtomb_r+0x7c>
   2ea84:	d9400415 	stw	r5,16(sp)
   2ea88:	d9800515 	stw	r6,20(sp)
   2ea8c:	002a0580 	call	2a058 <__locale_charset>
   2ea90:	d9800517 	ldw	r6,20(sp)
   2ea94:	d9400417 	ldw	r5,16(sp)
   2ea98:	100f883a 	mov	r7,r2
   2ea9c:	dc400015 	stw	r17,0(sp)
   2eaa0:	8009883a 	mov	r4,r16
   2eaa4:	903ee83a 	callr	r18
   2eaa8:	00ffffc4 	movi	r3,-1
   2eaac:	10c0031e 	bne	r2,r3,2eabc <_wcrtomb_r+0x64>
   2eab0:	88000015 	stw	zero,0(r17)
   2eab4:	00c02284 	movi	r3,138
   2eab8:	80c00015 	stw	r3,0(r16)
   2eabc:	dfc00917 	ldw	ra,36(sp)
   2eac0:	dc800817 	ldw	r18,32(sp)
   2eac4:	dc400717 	ldw	r17,28(sp)
   2eac8:	dc000617 	ldw	r16,24(sp)
   2eacc:	dec00a04 	addi	sp,sp,40
   2ead0:	f800283a 	ret
   2ead4:	002a0580 	call	2a058 <__locale_charset>
   2ead8:	100f883a 	mov	r7,r2
   2eadc:	dc400015 	stw	r17,0(sp)
   2eae0:	000d883a 	mov	r6,zero
   2eae4:	d9400104 	addi	r5,sp,4
   2eae8:	8009883a 	mov	r4,r16
   2eaec:	903ee83a 	callr	r18
   2eaf0:	003fed06 	br	2eaa8 <__alt_data_end+0xfffef6a8>

0002eaf4 <wcrtomb>:
   2eaf4:	defff604 	addi	sp,sp,-40
   2eaf8:	008000f4 	movhi	r2,3
   2eafc:	dc800615 	stw	r18,24(sp)
   2eb00:	dc400515 	stw	r17,20(sp)
   2eb04:	10901e04 	addi	r2,r2,16504
   2eb08:	dfc00915 	stw	ra,36(sp)
   2eb0c:	dd000815 	stw	r20,32(sp)
   2eb10:	dcc00715 	stw	r19,28(sp)
   2eb14:	dc000415 	stw	r16,16(sp)
   2eb18:	3025883a 	mov	r18,r6
   2eb1c:	14400017 	ldw	r17,0(r2)
   2eb20:	20001926 	beq	r4,zero,2eb88 <wcrtomb+0x94>
   2eb24:	008000f4 	movhi	r2,3
   2eb28:	10902204 	addi	r2,r2,16520
   2eb2c:	15000017 	ldw	r20,0(r2)
   2eb30:	2021883a 	mov	r16,r4
   2eb34:	2827883a 	mov	r19,r5
   2eb38:	002a0580 	call	2a058 <__locale_charset>
   2eb3c:	100f883a 	mov	r7,r2
   2eb40:	dc800015 	stw	r18,0(sp)
   2eb44:	980d883a 	mov	r6,r19
   2eb48:	800b883a 	mov	r5,r16
   2eb4c:	8809883a 	mov	r4,r17
   2eb50:	a03ee83a 	callr	r20
   2eb54:	00ffffc4 	movi	r3,-1
   2eb58:	10c0031e 	bne	r2,r3,2eb68 <wcrtomb+0x74>
   2eb5c:	90000015 	stw	zero,0(r18)
   2eb60:	00c02284 	movi	r3,138
   2eb64:	88c00015 	stw	r3,0(r17)
   2eb68:	dfc00917 	ldw	ra,36(sp)
   2eb6c:	dd000817 	ldw	r20,32(sp)
   2eb70:	dcc00717 	ldw	r19,28(sp)
   2eb74:	dc800617 	ldw	r18,24(sp)
   2eb78:	dc400517 	ldw	r17,20(sp)
   2eb7c:	dc000417 	ldw	r16,16(sp)
   2eb80:	dec00a04 	addi	sp,sp,40
   2eb84:	f800283a 	ret
   2eb88:	008000f4 	movhi	r2,3
   2eb8c:	10902204 	addi	r2,r2,16520
   2eb90:	14000017 	ldw	r16,0(r2)
   2eb94:	002a0580 	call	2a058 <__locale_charset>
   2eb98:	100f883a 	mov	r7,r2
   2eb9c:	dc800015 	stw	r18,0(sp)
   2eba0:	000d883a 	mov	r6,zero
   2eba4:	d9400104 	addi	r5,sp,4
   2eba8:	8809883a 	mov	r4,r17
   2ebac:	803ee83a 	callr	r16
   2ebb0:	003fe806 	br	2eb54 <__alt_data_end+0xfffef754>

0002ebb4 <__ascii_wctomb>:
   2ebb4:	28000526 	beq	r5,zero,2ebcc <__ascii_wctomb+0x18>
   2ebb8:	00803fc4 	movi	r2,255
   2ebbc:	11800536 	bltu	r2,r6,2ebd4 <__ascii_wctomb+0x20>
   2ebc0:	29800005 	stb	r6,0(r5)
   2ebc4:	00800044 	movi	r2,1
   2ebc8:	f800283a 	ret
   2ebcc:	0005883a 	mov	r2,zero
   2ebd0:	f800283a 	ret
   2ebd4:	00802284 	movi	r2,138
   2ebd8:	20800015 	stw	r2,0(r4)
   2ebdc:	00bfffc4 	movi	r2,-1
   2ebe0:	f800283a 	ret

0002ebe4 <_wctomb_r>:
   2ebe4:	008000f4 	movhi	r2,3
   2ebe8:	defff904 	addi	sp,sp,-28
   2ebec:	10902204 	addi	r2,r2,16520
   2ebf0:	dfc00615 	stw	ra,24(sp)
   2ebf4:	dc400515 	stw	r17,20(sp)
   2ebf8:	dc000415 	stw	r16,16(sp)
   2ebfc:	3823883a 	mov	r17,r7
   2ec00:	14000017 	ldw	r16,0(r2)
   2ec04:	d9000115 	stw	r4,4(sp)
   2ec08:	d9400215 	stw	r5,8(sp)
   2ec0c:	d9800315 	stw	r6,12(sp)
   2ec10:	002a0580 	call	2a058 <__locale_charset>
   2ec14:	d9800317 	ldw	r6,12(sp)
   2ec18:	d9400217 	ldw	r5,8(sp)
   2ec1c:	d9000117 	ldw	r4,4(sp)
   2ec20:	100f883a 	mov	r7,r2
   2ec24:	dc400015 	stw	r17,0(sp)
   2ec28:	803ee83a 	callr	r16
   2ec2c:	dfc00617 	ldw	ra,24(sp)
   2ec30:	dc400517 	ldw	r17,20(sp)
   2ec34:	dc000417 	ldw	r16,16(sp)
   2ec38:	dec00704 	addi	sp,sp,28
   2ec3c:	f800283a 	ret

0002ec40 <__udivdi3>:
   2ec40:	defff504 	addi	sp,sp,-44
   2ec44:	dcc00415 	stw	r19,16(sp)
   2ec48:	dc000115 	stw	r16,4(sp)
   2ec4c:	dfc00a15 	stw	ra,40(sp)
   2ec50:	df000915 	stw	fp,36(sp)
   2ec54:	ddc00815 	stw	r23,32(sp)
   2ec58:	dd800715 	stw	r22,28(sp)
   2ec5c:	dd400615 	stw	r21,24(sp)
   2ec60:	dd000515 	stw	r20,20(sp)
   2ec64:	dc800315 	stw	r18,12(sp)
   2ec68:	dc400215 	stw	r17,8(sp)
   2ec6c:	2027883a 	mov	r19,r4
   2ec70:	2821883a 	mov	r16,r5
   2ec74:	3800411e 	bne	r7,zero,2ed7c <__udivdi3+0x13c>
   2ec78:	3023883a 	mov	r17,r6
   2ec7c:	2025883a 	mov	r18,r4
   2ec80:	2980522e 	bgeu	r5,r6,2edcc <__udivdi3+0x18c>
   2ec84:	00bfffd4 	movui	r2,65535
   2ec88:	282d883a 	mov	r22,r5
   2ec8c:	1180a836 	bltu	r2,r6,2ef30 <__udivdi3+0x2f0>
   2ec90:	00803fc4 	movi	r2,255
   2ec94:	1185803a 	cmpltu	r2,r2,r6
   2ec98:	100490fa 	slli	r2,r2,3
   2ec9c:	3086d83a 	srl	r3,r6,r2
   2eca0:	010000f4 	movhi	r4,3
   2eca4:	2108a604 	addi	r4,r4,8856
   2eca8:	20c7883a 	add	r3,r4,r3
   2ecac:	18c00003 	ldbu	r3,0(r3)
   2ecb0:	1885883a 	add	r2,r3,r2
   2ecb4:	00c00804 	movi	r3,32
   2ecb8:	1887c83a 	sub	r3,r3,r2
   2ecbc:	18000526 	beq	r3,zero,2ecd4 <__udivdi3+0x94>
   2ecc0:	80e0983a 	sll	r16,r16,r3
   2ecc4:	9884d83a 	srl	r2,r19,r2
   2ecc8:	30e2983a 	sll	r17,r6,r3
   2eccc:	98e4983a 	sll	r18,r19,r3
   2ecd0:	142cb03a 	or	r22,r2,r16
   2ecd4:	882ad43a 	srli	r21,r17,16
   2ecd8:	b009883a 	mov	r4,r22
   2ecdc:	8d3fffcc 	andi	r20,r17,65535
   2ece0:	a80b883a 	mov	r5,r21
   2ece4:	0021b200 	call	21b20 <__umodsi3>
   2ece8:	b009883a 	mov	r4,r22
   2ecec:	a80b883a 	mov	r5,r21
   2ecf0:	1027883a 	mov	r19,r2
   2ecf4:	0021abc0 	call	21abc <__udivsi3>
   2ecf8:	102d883a 	mov	r22,r2
   2ecfc:	9826943a 	slli	r19,r19,16
   2ed00:	9004d43a 	srli	r2,r18,16
   2ed04:	a5a1383a 	mul	r16,r20,r22
   2ed08:	14c4b03a 	or	r2,r2,r19
   2ed0c:	1400052e 	bgeu	r2,r16,2ed24 <__udivdi3+0xe4>
   2ed10:	1445883a 	add	r2,r2,r17
   2ed14:	b0ffffc4 	addi	r3,r22,-1
   2ed18:	14400136 	bltu	r2,r17,2ed20 <__udivdi3+0xe0>
   2ed1c:	14012336 	bltu	r2,r16,2f1ac <__udivdi3+0x56c>
   2ed20:	182d883a 	mov	r22,r3
   2ed24:	1421c83a 	sub	r16,r2,r16
   2ed28:	a80b883a 	mov	r5,r21
   2ed2c:	8009883a 	mov	r4,r16
   2ed30:	0021b200 	call	21b20 <__umodsi3>
   2ed34:	1027883a 	mov	r19,r2
   2ed38:	a80b883a 	mov	r5,r21
   2ed3c:	8009883a 	mov	r4,r16
   2ed40:	0021abc0 	call	21abc <__udivsi3>
   2ed44:	9826943a 	slli	r19,r19,16
   2ed48:	a0a9383a 	mul	r20,r20,r2
   2ed4c:	94bfffcc 	andi	r18,r18,65535
   2ed50:	94e4b03a 	or	r18,r18,r19
   2ed54:	9500052e 	bgeu	r18,r20,2ed6c <__udivdi3+0x12c>
   2ed58:	8ca5883a 	add	r18,r17,r18
   2ed5c:	10ffffc4 	addi	r3,r2,-1
   2ed60:	9440f136 	bltu	r18,r17,2f128 <__udivdi3+0x4e8>
   2ed64:	9500f02e 	bgeu	r18,r20,2f128 <__udivdi3+0x4e8>
   2ed68:	10bfff84 	addi	r2,r2,-2
   2ed6c:	b00c943a 	slli	r6,r22,16
   2ed70:	0007883a 	mov	r3,zero
   2ed74:	3084b03a 	or	r2,r6,r2
   2ed78:	00005906 	br	2eee0 <__udivdi3+0x2a0>
   2ed7c:	29c05636 	bltu	r5,r7,2eed8 <__udivdi3+0x298>
   2ed80:	00bfffd4 	movui	r2,65535
   2ed84:	11c0622e 	bgeu	r2,r7,2ef10 <__udivdi3+0x2d0>
   2ed88:	00804034 	movhi	r2,256
   2ed8c:	10bfffc4 	addi	r2,r2,-1
   2ed90:	11c0ee36 	bltu	r2,r7,2f14c <__udivdi3+0x50c>
   2ed94:	00800404 	movi	r2,16
   2ed98:	3886d83a 	srl	r3,r7,r2
   2ed9c:	010000f4 	movhi	r4,3
   2eda0:	2108a604 	addi	r4,r4,8856
   2eda4:	20c7883a 	add	r3,r4,r3
   2eda8:	18c00003 	ldbu	r3,0(r3)
   2edac:	05400804 	movi	r21,32
   2edb0:	1885883a 	add	r2,r3,r2
   2edb4:	a8abc83a 	sub	r21,r21,r2
   2edb8:	a800621e 	bne	r21,zero,2ef44 <__udivdi3+0x304>
   2edbc:	3c00e936 	bltu	r7,r16,2f164 <__udivdi3+0x524>
   2edc0:	9985403a 	cmpgeu	r2,r19,r6
   2edc4:	0007883a 	mov	r3,zero
   2edc8:	00004506 	br	2eee0 <__udivdi3+0x2a0>
   2edcc:	3000041e 	bne	r6,zero,2ede0 <__udivdi3+0x1a0>
   2edd0:	000b883a 	mov	r5,zero
   2edd4:	01000044 	movi	r4,1
   2edd8:	0021abc0 	call	21abc <__udivsi3>
   2eddc:	1023883a 	mov	r17,r2
   2ede0:	00bfffd4 	movui	r2,65535
   2ede4:	14404e2e 	bgeu	r2,r17,2ef20 <__udivdi3+0x2e0>
   2ede8:	00804034 	movhi	r2,256
   2edec:	10bfffc4 	addi	r2,r2,-1
   2edf0:	1440d836 	bltu	r2,r17,2f154 <__udivdi3+0x514>
   2edf4:	00800404 	movi	r2,16
   2edf8:	8886d83a 	srl	r3,r17,r2
   2edfc:	010000f4 	movhi	r4,3
   2ee00:	2108a604 	addi	r4,r4,8856
   2ee04:	20c7883a 	add	r3,r4,r3
   2ee08:	18c00003 	ldbu	r3,0(r3)
   2ee0c:	1885883a 	add	r2,r3,r2
   2ee10:	00c00804 	movi	r3,32
   2ee14:	1887c83a 	sub	r3,r3,r2
   2ee18:	18008f1e 	bne	r3,zero,2f058 <__udivdi3+0x418>
   2ee1c:	882ad43a 	srli	r21,r17,16
   2ee20:	8461c83a 	sub	r16,r16,r17
   2ee24:	8d3fffcc 	andi	r20,r17,65535
   2ee28:	00c00044 	movi	r3,1
   2ee2c:	8009883a 	mov	r4,r16
   2ee30:	a80b883a 	mov	r5,r21
   2ee34:	d8c00015 	stw	r3,0(sp)
   2ee38:	0021b200 	call	21b20 <__umodsi3>
   2ee3c:	8009883a 	mov	r4,r16
   2ee40:	a80b883a 	mov	r5,r21
   2ee44:	1027883a 	mov	r19,r2
   2ee48:	0021abc0 	call	21abc <__udivsi3>
   2ee4c:	9826943a 	slli	r19,r19,16
   2ee50:	9008d43a 	srli	r4,r18,16
   2ee54:	1521383a 	mul	r16,r2,r20
   2ee58:	102d883a 	mov	r22,r2
   2ee5c:	24c8b03a 	or	r4,r4,r19
   2ee60:	d8c00017 	ldw	r3,0(sp)
   2ee64:	2400052e 	bgeu	r4,r16,2ee7c <__udivdi3+0x23c>
   2ee68:	2449883a 	add	r4,r4,r17
   2ee6c:	b0bfffc4 	addi	r2,r22,-1
   2ee70:	24400136 	bltu	r4,r17,2ee78 <__udivdi3+0x238>
   2ee74:	2400ca36 	bltu	r4,r16,2f1a0 <__udivdi3+0x560>
   2ee78:	102d883a 	mov	r22,r2
   2ee7c:	2421c83a 	sub	r16,r4,r16
   2ee80:	a80b883a 	mov	r5,r21
   2ee84:	8009883a 	mov	r4,r16
   2ee88:	d8c00015 	stw	r3,0(sp)
   2ee8c:	0021b200 	call	21b20 <__umodsi3>
   2ee90:	1027883a 	mov	r19,r2
   2ee94:	a80b883a 	mov	r5,r21
   2ee98:	8009883a 	mov	r4,r16
   2ee9c:	0021abc0 	call	21abc <__udivsi3>
   2eea0:	9826943a 	slli	r19,r19,16
   2eea4:	1529383a 	mul	r20,r2,r20
   2eea8:	94bfffcc 	andi	r18,r18,65535
   2eeac:	94e4b03a 	or	r18,r18,r19
   2eeb0:	d8c00017 	ldw	r3,0(sp)
   2eeb4:	9500052e 	bgeu	r18,r20,2eecc <__udivdi3+0x28c>
   2eeb8:	8ca5883a 	add	r18,r17,r18
   2eebc:	113fffc4 	addi	r4,r2,-1
   2eec0:	94409736 	bltu	r18,r17,2f120 <__udivdi3+0x4e0>
   2eec4:	9500962e 	bgeu	r18,r20,2f120 <__udivdi3+0x4e0>
   2eec8:	10bfff84 	addi	r2,r2,-2
   2eecc:	b00c943a 	slli	r6,r22,16
   2eed0:	3084b03a 	or	r2,r6,r2
   2eed4:	00000206 	br	2eee0 <__udivdi3+0x2a0>
   2eed8:	0007883a 	mov	r3,zero
   2eedc:	0005883a 	mov	r2,zero
   2eee0:	dfc00a17 	ldw	ra,40(sp)
   2eee4:	df000917 	ldw	fp,36(sp)
   2eee8:	ddc00817 	ldw	r23,32(sp)
   2eeec:	dd800717 	ldw	r22,28(sp)
   2eef0:	dd400617 	ldw	r21,24(sp)
   2eef4:	dd000517 	ldw	r20,20(sp)
   2eef8:	dcc00417 	ldw	r19,16(sp)
   2eefc:	dc800317 	ldw	r18,12(sp)
   2ef00:	dc400217 	ldw	r17,8(sp)
   2ef04:	dc000117 	ldw	r16,4(sp)
   2ef08:	dec00b04 	addi	sp,sp,44
   2ef0c:	f800283a 	ret
   2ef10:	00803fc4 	movi	r2,255
   2ef14:	11c5803a 	cmpltu	r2,r2,r7
   2ef18:	100490fa 	slli	r2,r2,3
   2ef1c:	003f9e06 	br	2ed98 <__alt_data_end+0xfffef998>
   2ef20:	00803fc4 	movi	r2,255
   2ef24:	1445803a 	cmpltu	r2,r2,r17
   2ef28:	100490fa 	slli	r2,r2,3
   2ef2c:	003fb206 	br	2edf8 <__alt_data_end+0xfffef9f8>
   2ef30:	00804034 	movhi	r2,256
   2ef34:	10bfffc4 	addi	r2,r2,-1
   2ef38:	11808836 	bltu	r2,r6,2f15c <__udivdi3+0x51c>
   2ef3c:	00800404 	movi	r2,16
   2ef40:	003f5606 	br	2ec9c <__alt_data_end+0xfffef89c>
   2ef44:	30aed83a 	srl	r23,r6,r2
   2ef48:	3d4e983a 	sll	r7,r7,r21
   2ef4c:	80acd83a 	srl	r22,r16,r2
   2ef50:	9884d83a 	srl	r2,r19,r2
   2ef54:	3deeb03a 	or	r23,r7,r23
   2ef58:	b824d43a 	srli	r18,r23,16
   2ef5c:	8560983a 	sll	r16,r16,r21
   2ef60:	b009883a 	mov	r4,r22
   2ef64:	900b883a 	mov	r5,r18
   2ef68:	3568983a 	sll	r20,r6,r21
   2ef6c:	1420b03a 	or	r16,r2,r16
   2ef70:	0021b200 	call	21b20 <__umodsi3>
   2ef74:	b009883a 	mov	r4,r22
   2ef78:	900b883a 	mov	r5,r18
   2ef7c:	1023883a 	mov	r17,r2
   2ef80:	0021abc0 	call	21abc <__udivsi3>
   2ef84:	8808943a 	slli	r4,r17,16
   2ef88:	bf3fffcc 	andi	fp,r23,65535
   2ef8c:	8006d43a 	srli	r3,r16,16
   2ef90:	e0a3383a 	mul	r17,fp,r2
   2ef94:	100d883a 	mov	r6,r2
   2ef98:	1906b03a 	or	r3,r3,r4
   2ef9c:	1c40042e 	bgeu	r3,r17,2efb0 <__udivdi3+0x370>
   2efa0:	1dc7883a 	add	r3,r3,r23
   2efa4:	10bfffc4 	addi	r2,r2,-1
   2efa8:	1dc0752e 	bgeu	r3,r23,2f180 <__udivdi3+0x540>
   2efac:	100d883a 	mov	r6,r2
   2efb0:	1c63c83a 	sub	r17,r3,r17
   2efb4:	900b883a 	mov	r5,r18
   2efb8:	8809883a 	mov	r4,r17
   2efbc:	d9800015 	stw	r6,0(sp)
   2efc0:	0021b200 	call	21b20 <__umodsi3>
   2efc4:	102d883a 	mov	r22,r2
   2efc8:	8809883a 	mov	r4,r17
   2efcc:	900b883a 	mov	r5,r18
   2efd0:	0021abc0 	call	21abc <__udivsi3>
   2efd4:	b02c943a 	slli	r22,r22,16
   2efd8:	e089383a 	mul	r4,fp,r2
   2efdc:	843fffcc 	andi	r16,r16,65535
   2efe0:	85a0b03a 	or	r16,r16,r22
   2efe4:	d9800017 	ldw	r6,0(sp)
   2efe8:	8100042e 	bgeu	r16,r4,2effc <__udivdi3+0x3bc>
   2efec:	85e1883a 	add	r16,r16,r23
   2eff0:	10ffffc4 	addi	r3,r2,-1
   2eff4:	85c05e2e 	bgeu	r16,r23,2f170 <__udivdi3+0x530>
   2eff8:	1805883a 	mov	r2,r3
   2effc:	300c943a 	slli	r6,r6,16
   2f000:	a17fffcc 	andi	r5,r20,65535
   2f004:	a028d43a 	srli	r20,r20,16
   2f008:	3084b03a 	or	r2,r6,r2
   2f00c:	10ffffcc 	andi	r3,r2,65535
   2f010:	100cd43a 	srli	r6,r2,16
   2f014:	194f383a 	mul	r7,r3,r5
   2f018:	1d07383a 	mul	r3,r3,r20
   2f01c:	314b383a 	mul	r5,r6,r5
   2f020:	3810d43a 	srli	r8,r7,16
   2f024:	8121c83a 	sub	r16,r16,r4
   2f028:	1947883a 	add	r3,r3,r5
   2f02c:	40c7883a 	add	r3,r8,r3
   2f030:	350d383a 	mul	r6,r6,r20
   2f034:	1940022e 	bgeu	r3,r5,2f040 <__udivdi3+0x400>
   2f038:	01000074 	movhi	r4,1
   2f03c:	310d883a 	add	r6,r6,r4
   2f040:	1828d43a 	srli	r20,r3,16
   2f044:	a18d883a 	add	r6,r20,r6
   2f048:	81803e36 	bltu	r16,r6,2f144 <__udivdi3+0x504>
   2f04c:	81803826 	beq	r16,r6,2f130 <__udivdi3+0x4f0>
   2f050:	0007883a 	mov	r3,zero
   2f054:	003fa206 	br	2eee0 <__alt_data_end+0xfffefae0>
   2f058:	88e2983a 	sll	r17,r17,r3
   2f05c:	80a8d83a 	srl	r20,r16,r2
   2f060:	80e0983a 	sll	r16,r16,r3
   2f064:	882ad43a 	srli	r21,r17,16
   2f068:	9884d83a 	srl	r2,r19,r2
   2f06c:	a009883a 	mov	r4,r20
   2f070:	a80b883a 	mov	r5,r21
   2f074:	142eb03a 	or	r23,r2,r16
   2f078:	98e4983a 	sll	r18,r19,r3
   2f07c:	0021b200 	call	21b20 <__umodsi3>
   2f080:	a009883a 	mov	r4,r20
   2f084:	a80b883a 	mov	r5,r21
   2f088:	1021883a 	mov	r16,r2
   2f08c:	0021abc0 	call	21abc <__udivsi3>
   2f090:	1039883a 	mov	fp,r2
   2f094:	8d3fffcc 	andi	r20,r17,65535
   2f098:	8020943a 	slli	r16,r16,16
   2f09c:	b804d43a 	srli	r2,r23,16
   2f0a0:	a72d383a 	mul	r22,r20,fp
   2f0a4:	1404b03a 	or	r2,r2,r16
   2f0a8:	1580062e 	bgeu	r2,r22,2f0c4 <__udivdi3+0x484>
   2f0ac:	1445883a 	add	r2,r2,r17
   2f0b0:	e0ffffc4 	addi	r3,fp,-1
   2f0b4:	14403836 	bltu	r2,r17,2f198 <__udivdi3+0x558>
   2f0b8:	1580372e 	bgeu	r2,r22,2f198 <__udivdi3+0x558>
   2f0bc:	e73fff84 	addi	fp,fp,-2
   2f0c0:	1445883a 	add	r2,r2,r17
   2f0c4:	15adc83a 	sub	r22,r2,r22
   2f0c8:	a80b883a 	mov	r5,r21
   2f0cc:	b009883a 	mov	r4,r22
   2f0d0:	0021b200 	call	21b20 <__umodsi3>
   2f0d4:	1027883a 	mov	r19,r2
   2f0d8:	b009883a 	mov	r4,r22
   2f0dc:	a80b883a 	mov	r5,r21
   2f0e0:	0021abc0 	call	21abc <__udivsi3>
   2f0e4:	9826943a 	slli	r19,r19,16
   2f0e8:	a0a1383a 	mul	r16,r20,r2
   2f0ec:	b93fffcc 	andi	r4,r23,65535
   2f0f0:	24c8b03a 	or	r4,r4,r19
   2f0f4:	2400062e 	bgeu	r4,r16,2f110 <__udivdi3+0x4d0>
   2f0f8:	2449883a 	add	r4,r4,r17
   2f0fc:	10ffffc4 	addi	r3,r2,-1
   2f100:	24402336 	bltu	r4,r17,2f190 <__udivdi3+0x550>
   2f104:	2400222e 	bgeu	r4,r16,2f190 <__udivdi3+0x550>
   2f108:	10bfff84 	addi	r2,r2,-2
   2f10c:	2449883a 	add	r4,r4,r17
   2f110:	e038943a 	slli	fp,fp,16
   2f114:	2421c83a 	sub	r16,r4,r16
   2f118:	e086b03a 	or	r3,fp,r2
   2f11c:	003f4306 	br	2ee2c <__alt_data_end+0xfffefa2c>
   2f120:	2005883a 	mov	r2,r4
   2f124:	003f6906 	br	2eecc <__alt_data_end+0xfffefacc>
   2f128:	1805883a 	mov	r2,r3
   2f12c:	003f0f06 	br	2ed6c <__alt_data_end+0xfffef96c>
   2f130:	1806943a 	slli	r3,r3,16
   2f134:	9d66983a 	sll	r19,r19,r21
   2f138:	39ffffcc 	andi	r7,r7,65535
   2f13c:	19c7883a 	add	r3,r3,r7
   2f140:	98ffc32e 	bgeu	r19,r3,2f050 <__alt_data_end+0xfffefc50>
   2f144:	10bfffc4 	addi	r2,r2,-1
   2f148:	003fc106 	br	2f050 <__alt_data_end+0xfffefc50>
   2f14c:	00800604 	movi	r2,24
   2f150:	003f1106 	br	2ed98 <__alt_data_end+0xfffef998>
   2f154:	00800604 	movi	r2,24
   2f158:	003f2706 	br	2edf8 <__alt_data_end+0xfffef9f8>
   2f15c:	00800604 	movi	r2,24
   2f160:	003ece06 	br	2ec9c <__alt_data_end+0xfffef89c>
   2f164:	0007883a 	mov	r3,zero
   2f168:	00800044 	movi	r2,1
   2f16c:	003f5c06 	br	2eee0 <__alt_data_end+0xfffefae0>
   2f170:	813fa12e 	bgeu	r16,r4,2eff8 <__alt_data_end+0xfffefbf8>
   2f174:	10bfff84 	addi	r2,r2,-2
   2f178:	85e1883a 	add	r16,r16,r23
   2f17c:	003f9f06 	br	2effc <__alt_data_end+0xfffefbfc>
   2f180:	1c7f8a2e 	bgeu	r3,r17,2efac <__alt_data_end+0xfffefbac>
   2f184:	31bfff84 	addi	r6,r6,-2
   2f188:	1dc7883a 	add	r3,r3,r23
   2f18c:	003f8806 	br	2efb0 <__alt_data_end+0xfffefbb0>
   2f190:	1805883a 	mov	r2,r3
   2f194:	003fde06 	br	2f110 <__alt_data_end+0xfffefd10>
   2f198:	1839883a 	mov	fp,r3
   2f19c:	003fc906 	br	2f0c4 <__alt_data_end+0xfffefcc4>
   2f1a0:	b5bfff84 	addi	r22,r22,-2
   2f1a4:	2449883a 	add	r4,r4,r17
   2f1a8:	003f3406 	br	2ee7c <__alt_data_end+0xfffefa7c>
   2f1ac:	b5bfff84 	addi	r22,r22,-2
   2f1b0:	1445883a 	add	r2,r2,r17
   2f1b4:	003edb06 	br	2ed24 <__alt_data_end+0xfffef924>

0002f1b8 <__umoddi3>:
   2f1b8:	defff404 	addi	sp,sp,-48
   2f1bc:	df000a15 	stw	fp,40(sp)
   2f1c0:	dc400315 	stw	r17,12(sp)
   2f1c4:	dc000215 	stw	r16,8(sp)
   2f1c8:	dfc00b15 	stw	ra,44(sp)
   2f1cc:	ddc00915 	stw	r23,36(sp)
   2f1d0:	dd800815 	stw	r22,32(sp)
   2f1d4:	dd400715 	stw	r21,28(sp)
   2f1d8:	dd000615 	stw	r20,24(sp)
   2f1dc:	dcc00515 	stw	r19,20(sp)
   2f1e0:	dc800415 	stw	r18,16(sp)
   2f1e4:	2021883a 	mov	r16,r4
   2f1e8:	2823883a 	mov	r17,r5
   2f1ec:	2839883a 	mov	fp,r5
   2f1f0:	38003c1e 	bne	r7,zero,2f2e4 <__umoddi3+0x12c>
   2f1f4:	3027883a 	mov	r19,r6
   2f1f8:	2029883a 	mov	r20,r4
   2f1fc:	2980512e 	bgeu	r5,r6,2f344 <__umoddi3+0x18c>
   2f200:	00bfffd4 	movui	r2,65535
   2f204:	11809a36 	bltu	r2,r6,2f470 <__umoddi3+0x2b8>
   2f208:	01003fc4 	movi	r4,255
   2f20c:	2189803a 	cmpltu	r4,r4,r6
   2f210:	200890fa 	slli	r4,r4,3
   2f214:	3104d83a 	srl	r2,r6,r4
   2f218:	00c000f4 	movhi	r3,3
   2f21c:	18c8a604 	addi	r3,r3,8856
   2f220:	1885883a 	add	r2,r3,r2
   2f224:	10c00003 	ldbu	r3,0(r2)
   2f228:	00800804 	movi	r2,32
   2f22c:	1909883a 	add	r4,r3,r4
   2f230:	1125c83a 	sub	r18,r2,r4
   2f234:	90000526 	beq	r18,zero,2f24c <__umoddi3+0x94>
   2f238:	8ca2983a 	sll	r17,r17,r18
   2f23c:	8108d83a 	srl	r4,r16,r4
   2f240:	34a6983a 	sll	r19,r6,r18
   2f244:	84a8983a 	sll	r20,r16,r18
   2f248:	2478b03a 	or	fp,r4,r17
   2f24c:	982ed43a 	srli	r23,r19,16
   2f250:	e009883a 	mov	r4,fp
   2f254:	9dbfffcc 	andi	r22,r19,65535
   2f258:	b80b883a 	mov	r5,r23
   2f25c:	0021b200 	call	21b20 <__umodsi3>
   2f260:	e009883a 	mov	r4,fp
   2f264:	b80b883a 	mov	r5,r23
   2f268:	102b883a 	mov	r21,r2
   2f26c:	0021abc0 	call	21abc <__udivsi3>
   2f270:	a806943a 	slli	r3,r21,16
   2f274:	a008d43a 	srli	r4,r20,16
   2f278:	b085383a 	mul	r2,r22,r2
   2f27c:	20c8b03a 	or	r4,r4,r3
   2f280:	2080032e 	bgeu	r4,r2,2f290 <__umoddi3+0xd8>
   2f284:	24c9883a 	add	r4,r4,r19
   2f288:	24c00136 	bltu	r4,r19,2f290 <__umoddi3+0xd8>
   2f28c:	20811036 	bltu	r4,r2,2f6d0 <__umoddi3+0x518>
   2f290:	20abc83a 	sub	r21,r4,r2
   2f294:	b80b883a 	mov	r5,r23
   2f298:	a809883a 	mov	r4,r21
   2f29c:	0021b200 	call	21b20 <__umodsi3>
   2f2a0:	1023883a 	mov	r17,r2
   2f2a4:	b80b883a 	mov	r5,r23
   2f2a8:	a809883a 	mov	r4,r21
   2f2ac:	0021abc0 	call	21abc <__udivsi3>
   2f2b0:	8822943a 	slli	r17,r17,16
   2f2b4:	b085383a 	mul	r2,r22,r2
   2f2b8:	a0ffffcc 	andi	r3,r20,65535
   2f2bc:	1c46b03a 	or	r3,r3,r17
   2f2c0:	1880042e 	bgeu	r3,r2,2f2d4 <__umoddi3+0x11c>
   2f2c4:	1cc7883a 	add	r3,r3,r19
   2f2c8:	1cc00236 	bltu	r3,r19,2f2d4 <__umoddi3+0x11c>
   2f2cc:	1880012e 	bgeu	r3,r2,2f2d4 <__umoddi3+0x11c>
   2f2d0:	1cc7883a 	add	r3,r3,r19
   2f2d4:	1885c83a 	sub	r2,r3,r2
   2f2d8:	1484d83a 	srl	r2,r2,r18
   2f2dc:	0007883a 	mov	r3,zero
   2f2e0:	00004f06 	br	2f420 <__umoddi3+0x268>
   2f2e4:	29c04c36 	bltu	r5,r7,2f418 <__umoddi3+0x260>
   2f2e8:	00bfffd4 	movui	r2,65535
   2f2ec:	11c0582e 	bgeu	r2,r7,2f450 <__umoddi3+0x298>
   2f2f0:	00804034 	movhi	r2,256
   2f2f4:	10bfffc4 	addi	r2,r2,-1
   2f2f8:	11c0e736 	bltu	r2,r7,2f698 <__umoddi3+0x4e0>
   2f2fc:	01000404 	movi	r4,16
   2f300:	3904d83a 	srl	r2,r7,r4
   2f304:	00c000f4 	movhi	r3,3
   2f308:	18c8a604 	addi	r3,r3,8856
   2f30c:	1885883a 	add	r2,r3,r2
   2f310:	14c00003 	ldbu	r19,0(r2)
   2f314:	00c00804 	movi	r3,32
   2f318:	9927883a 	add	r19,r19,r4
   2f31c:	1ce9c83a 	sub	r20,r3,r19
   2f320:	a000581e 	bne	r20,zero,2f484 <__umoddi3+0x2cc>
   2f324:	3c400136 	bltu	r7,r17,2f32c <__umoddi3+0x174>
   2f328:	8180eb36 	bltu	r16,r6,2f6d8 <__umoddi3+0x520>
   2f32c:	8185c83a 	sub	r2,r16,r6
   2f330:	89e3c83a 	sub	r17,r17,r7
   2f334:	8089803a 	cmpltu	r4,r16,r2
   2f338:	8939c83a 	sub	fp,r17,r4
   2f33c:	e007883a 	mov	r3,fp
   2f340:	00003706 	br	2f420 <__umoddi3+0x268>
   2f344:	3000041e 	bne	r6,zero,2f358 <__umoddi3+0x1a0>
   2f348:	000b883a 	mov	r5,zero
   2f34c:	01000044 	movi	r4,1
   2f350:	0021abc0 	call	21abc <__udivsi3>
   2f354:	1027883a 	mov	r19,r2
   2f358:	00bfffd4 	movui	r2,65535
   2f35c:	14c0402e 	bgeu	r2,r19,2f460 <__umoddi3+0x2a8>
   2f360:	00804034 	movhi	r2,256
   2f364:	10bfffc4 	addi	r2,r2,-1
   2f368:	14c0cd36 	bltu	r2,r19,2f6a0 <__umoddi3+0x4e8>
   2f36c:	00800404 	movi	r2,16
   2f370:	9886d83a 	srl	r3,r19,r2
   2f374:	010000f4 	movhi	r4,3
   2f378:	2108a604 	addi	r4,r4,8856
   2f37c:	20c7883a 	add	r3,r4,r3
   2f380:	18c00003 	ldbu	r3,0(r3)
   2f384:	1887883a 	add	r3,r3,r2
   2f388:	00800804 	movi	r2,32
   2f38c:	10e5c83a 	sub	r18,r2,r3
   2f390:	9000901e 	bne	r18,zero,2f5d4 <__umoddi3+0x41c>
   2f394:	982cd43a 	srli	r22,r19,16
   2f398:	8ce3c83a 	sub	r17,r17,r19
   2f39c:	9d7fffcc 	andi	r21,r19,65535
   2f3a0:	b00b883a 	mov	r5,r22
   2f3a4:	8809883a 	mov	r4,r17
   2f3a8:	0021b200 	call	21b20 <__umodsi3>
   2f3ac:	8809883a 	mov	r4,r17
   2f3b0:	b00b883a 	mov	r5,r22
   2f3b4:	1021883a 	mov	r16,r2
   2f3b8:	0021abc0 	call	21abc <__udivsi3>
   2f3bc:	8006943a 	slli	r3,r16,16
   2f3c0:	a008d43a 	srli	r4,r20,16
   2f3c4:	1545383a 	mul	r2,r2,r21
   2f3c8:	20c8b03a 	or	r4,r4,r3
   2f3cc:	2080042e 	bgeu	r4,r2,2f3e0 <__umoddi3+0x228>
   2f3d0:	24c9883a 	add	r4,r4,r19
   2f3d4:	24c00236 	bltu	r4,r19,2f3e0 <__umoddi3+0x228>
   2f3d8:	2080012e 	bgeu	r4,r2,2f3e0 <__umoddi3+0x228>
   2f3dc:	24c9883a 	add	r4,r4,r19
   2f3e0:	20a1c83a 	sub	r16,r4,r2
   2f3e4:	b00b883a 	mov	r5,r22
   2f3e8:	8009883a 	mov	r4,r16
   2f3ec:	0021b200 	call	21b20 <__umodsi3>
   2f3f0:	1023883a 	mov	r17,r2
   2f3f4:	b00b883a 	mov	r5,r22
   2f3f8:	8009883a 	mov	r4,r16
   2f3fc:	0021abc0 	call	21abc <__udivsi3>
   2f400:	8822943a 	slli	r17,r17,16
   2f404:	1545383a 	mul	r2,r2,r21
   2f408:	a53fffcc 	andi	r20,r20,65535
   2f40c:	a446b03a 	or	r3,r20,r17
   2f410:	18bfb02e 	bgeu	r3,r2,2f2d4 <__alt_data_end+0xfffefed4>
   2f414:	003fab06 	br	2f2c4 <__alt_data_end+0xfffefec4>
   2f418:	2005883a 	mov	r2,r4
   2f41c:	2807883a 	mov	r3,r5
   2f420:	dfc00b17 	ldw	ra,44(sp)
   2f424:	df000a17 	ldw	fp,40(sp)
   2f428:	ddc00917 	ldw	r23,36(sp)
   2f42c:	dd800817 	ldw	r22,32(sp)
   2f430:	dd400717 	ldw	r21,28(sp)
   2f434:	dd000617 	ldw	r20,24(sp)
   2f438:	dcc00517 	ldw	r19,20(sp)
   2f43c:	dc800417 	ldw	r18,16(sp)
   2f440:	dc400317 	ldw	r17,12(sp)
   2f444:	dc000217 	ldw	r16,8(sp)
   2f448:	dec00c04 	addi	sp,sp,48
   2f44c:	f800283a 	ret
   2f450:	04c03fc4 	movi	r19,255
   2f454:	99c9803a 	cmpltu	r4,r19,r7
   2f458:	200890fa 	slli	r4,r4,3
   2f45c:	003fa806 	br	2f300 <__alt_data_end+0xfffeff00>
   2f460:	00803fc4 	movi	r2,255
   2f464:	14c5803a 	cmpltu	r2,r2,r19
   2f468:	100490fa 	slli	r2,r2,3
   2f46c:	003fc006 	br	2f370 <__alt_data_end+0xfffeff70>
   2f470:	00804034 	movhi	r2,256
   2f474:	10bfffc4 	addi	r2,r2,-1
   2f478:	11808b36 	bltu	r2,r6,2f6a8 <__umoddi3+0x4f0>
   2f47c:	01000404 	movi	r4,16
   2f480:	003f6406 	br	2f214 <__alt_data_end+0xfffefe14>
   2f484:	34c4d83a 	srl	r2,r6,r19
   2f488:	3d0e983a 	sll	r7,r7,r20
   2f48c:	8cf8d83a 	srl	fp,r17,r19
   2f490:	8d10983a 	sll	r8,r17,r20
   2f494:	38aab03a 	or	r21,r7,r2
   2f498:	a82cd43a 	srli	r22,r21,16
   2f49c:	84e2d83a 	srl	r17,r16,r19
   2f4a0:	e009883a 	mov	r4,fp
   2f4a4:	b00b883a 	mov	r5,r22
   2f4a8:	8a22b03a 	or	r17,r17,r8
   2f4ac:	3524983a 	sll	r18,r6,r20
   2f4b0:	0021b200 	call	21b20 <__umodsi3>
   2f4b4:	e009883a 	mov	r4,fp
   2f4b8:	b00b883a 	mov	r5,r22
   2f4bc:	102f883a 	mov	r23,r2
   2f4c0:	0021abc0 	call	21abc <__udivsi3>
   2f4c4:	100d883a 	mov	r6,r2
   2f4c8:	b808943a 	slli	r4,r23,16
   2f4cc:	aa3fffcc 	andi	r8,r21,65535
   2f4d0:	8804d43a 	srli	r2,r17,16
   2f4d4:	41af383a 	mul	r23,r8,r6
   2f4d8:	8520983a 	sll	r16,r16,r20
   2f4dc:	1104b03a 	or	r2,r2,r4
   2f4e0:	15c0042e 	bgeu	r2,r23,2f4f4 <__umoddi3+0x33c>
   2f4e4:	1545883a 	add	r2,r2,r21
   2f4e8:	30ffffc4 	addi	r3,r6,-1
   2f4ec:	1540742e 	bgeu	r2,r21,2f6c0 <__umoddi3+0x508>
   2f4f0:	180d883a 	mov	r6,r3
   2f4f4:	15efc83a 	sub	r23,r2,r23
   2f4f8:	b00b883a 	mov	r5,r22
   2f4fc:	b809883a 	mov	r4,r23
   2f500:	d9800115 	stw	r6,4(sp)
   2f504:	da000015 	stw	r8,0(sp)
   2f508:	0021b200 	call	21b20 <__umodsi3>
   2f50c:	b00b883a 	mov	r5,r22
   2f510:	b809883a 	mov	r4,r23
   2f514:	1039883a 	mov	fp,r2
   2f518:	0021abc0 	call	21abc <__udivsi3>
   2f51c:	da000017 	ldw	r8,0(sp)
   2f520:	e038943a 	slli	fp,fp,16
   2f524:	100b883a 	mov	r5,r2
   2f528:	4089383a 	mul	r4,r8,r2
   2f52c:	8a3fffcc 	andi	r8,r17,65535
   2f530:	4710b03a 	or	r8,r8,fp
   2f534:	d9800117 	ldw	r6,4(sp)
   2f538:	4100042e 	bgeu	r8,r4,2f54c <__umoddi3+0x394>
   2f53c:	4551883a 	add	r8,r8,r21
   2f540:	10bfffc4 	addi	r2,r2,-1
   2f544:	45405a2e 	bgeu	r8,r21,2f6b0 <__umoddi3+0x4f8>
   2f548:	100b883a 	mov	r5,r2
   2f54c:	300c943a 	slli	r6,r6,16
   2f550:	91ffffcc 	andi	r7,r18,65535
   2f554:	9004d43a 	srli	r2,r18,16
   2f558:	314cb03a 	or	r6,r6,r5
   2f55c:	317fffcc 	andi	r5,r6,65535
   2f560:	300cd43a 	srli	r6,r6,16
   2f564:	29d3383a 	mul	r9,r5,r7
   2f568:	288b383a 	mul	r5,r5,r2
   2f56c:	31cf383a 	mul	r7,r6,r7
   2f570:	4806d43a 	srli	r3,r9,16
   2f574:	4111c83a 	sub	r8,r8,r4
   2f578:	29cb883a 	add	r5,r5,r7
   2f57c:	194b883a 	add	r5,r3,r5
   2f580:	3085383a 	mul	r2,r6,r2
   2f584:	29c0022e 	bgeu	r5,r7,2f590 <__umoddi3+0x3d8>
   2f588:	00c00074 	movhi	r3,1
   2f58c:	10c5883a 	add	r2,r2,r3
   2f590:	2808d43a 	srli	r4,r5,16
   2f594:	280a943a 	slli	r5,r5,16
   2f598:	4a7fffcc 	andi	r9,r9,65535
   2f59c:	2085883a 	add	r2,r4,r2
   2f5a0:	2a4b883a 	add	r5,r5,r9
   2f5a4:	40803636 	bltu	r8,r2,2f680 <__umoddi3+0x4c8>
   2f5a8:	40804d26 	beq	r8,r2,2f6e0 <__umoddi3+0x528>
   2f5ac:	4089c83a 	sub	r4,r8,r2
   2f5b0:	280f883a 	mov	r7,r5
   2f5b4:	81cfc83a 	sub	r7,r16,r7
   2f5b8:	81c7803a 	cmpltu	r3,r16,r7
   2f5bc:	20c7c83a 	sub	r3,r4,r3
   2f5c0:	1cc4983a 	sll	r2,r3,r19
   2f5c4:	3d0ed83a 	srl	r7,r7,r20
   2f5c8:	1d06d83a 	srl	r3,r3,r20
   2f5cc:	11c4b03a 	or	r2,r2,r7
   2f5d0:	003f9306 	br	2f420 <__alt_data_end+0xffff0020>
   2f5d4:	9ca6983a 	sll	r19,r19,r18
   2f5d8:	88e8d83a 	srl	r20,r17,r3
   2f5dc:	80c4d83a 	srl	r2,r16,r3
   2f5e0:	982cd43a 	srli	r22,r19,16
   2f5e4:	8ca2983a 	sll	r17,r17,r18
   2f5e8:	a009883a 	mov	r4,r20
   2f5ec:	b00b883a 	mov	r5,r22
   2f5f0:	1478b03a 	or	fp,r2,r17
   2f5f4:	0021b200 	call	21b20 <__umodsi3>
   2f5f8:	a009883a 	mov	r4,r20
   2f5fc:	b00b883a 	mov	r5,r22
   2f600:	1023883a 	mov	r17,r2
   2f604:	0021abc0 	call	21abc <__udivsi3>
   2f608:	9d7fffcc 	andi	r21,r19,65535
   2f60c:	880a943a 	slli	r5,r17,16
   2f610:	e008d43a 	srli	r4,fp,16
   2f614:	a885383a 	mul	r2,r21,r2
   2f618:	84a8983a 	sll	r20,r16,r18
   2f61c:	2148b03a 	or	r4,r4,r5
   2f620:	2080042e 	bgeu	r4,r2,2f634 <__umoddi3+0x47c>
   2f624:	24c9883a 	add	r4,r4,r19
   2f628:	24c00236 	bltu	r4,r19,2f634 <__umoddi3+0x47c>
   2f62c:	2080012e 	bgeu	r4,r2,2f634 <__umoddi3+0x47c>
   2f630:	24c9883a 	add	r4,r4,r19
   2f634:	20a3c83a 	sub	r17,r4,r2
   2f638:	b00b883a 	mov	r5,r22
   2f63c:	8809883a 	mov	r4,r17
   2f640:	0021b200 	call	21b20 <__umodsi3>
   2f644:	102f883a 	mov	r23,r2
   2f648:	8809883a 	mov	r4,r17
   2f64c:	b00b883a 	mov	r5,r22
   2f650:	0021abc0 	call	21abc <__udivsi3>
   2f654:	b82e943a 	slli	r23,r23,16
   2f658:	a885383a 	mul	r2,r21,r2
   2f65c:	e13fffcc 	andi	r4,fp,65535
   2f660:	25c8b03a 	or	r4,r4,r23
   2f664:	2080042e 	bgeu	r4,r2,2f678 <__umoddi3+0x4c0>
   2f668:	24c9883a 	add	r4,r4,r19
   2f66c:	24c00236 	bltu	r4,r19,2f678 <__umoddi3+0x4c0>
   2f670:	2080012e 	bgeu	r4,r2,2f678 <__umoddi3+0x4c0>
   2f674:	24c9883a 	add	r4,r4,r19
   2f678:	20a3c83a 	sub	r17,r4,r2
   2f67c:	003f4806 	br	2f3a0 <__alt_data_end+0xfffeffa0>
   2f680:	2c8fc83a 	sub	r7,r5,r18
   2f684:	1545c83a 	sub	r2,r2,r21
   2f688:	29cb803a 	cmpltu	r5,r5,r7
   2f68c:	1145c83a 	sub	r2,r2,r5
   2f690:	4089c83a 	sub	r4,r8,r2
   2f694:	003fc706 	br	2f5b4 <__alt_data_end+0xffff01b4>
   2f698:	01000604 	movi	r4,24
   2f69c:	003f1806 	br	2f300 <__alt_data_end+0xfffeff00>
   2f6a0:	00800604 	movi	r2,24
   2f6a4:	003f3206 	br	2f370 <__alt_data_end+0xfffeff70>
   2f6a8:	01000604 	movi	r4,24
   2f6ac:	003ed906 	br	2f214 <__alt_data_end+0xfffefe14>
   2f6b0:	413fa52e 	bgeu	r8,r4,2f548 <__alt_data_end+0xffff0148>
   2f6b4:	297fff84 	addi	r5,r5,-2
   2f6b8:	4551883a 	add	r8,r8,r21
   2f6bc:	003fa306 	br	2f54c <__alt_data_end+0xffff014c>
   2f6c0:	15ff8b2e 	bgeu	r2,r23,2f4f0 <__alt_data_end+0xffff00f0>
   2f6c4:	31bfff84 	addi	r6,r6,-2
   2f6c8:	1545883a 	add	r2,r2,r21
   2f6cc:	003f8906 	br	2f4f4 <__alt_data_end+0xffff00f4>
   2f6d0:	24c9883a 	add	r4,r4,r19
   2f6d4:	003eee06 	br	2f290 <__alt_data_end+0xfffefe90>
   2f6d8:	8005883a 	mov	r2,r16
   2f6dc:	003f1706 	br	2f33c <__alt_data_end+0xfffeff3c>
   2f6e0:	817fe736 	bltu	r16,r5,2f680 <__alt_data_end+0xffff0280>
   2f6e4:	280f883a 	mov	r7,r5
   2f6e8:	0009883a 	mov	r4,zero
   2f6ec:	003fb106 	br	2f5b4 <__alt_data_end+0xffff01b4>

0002f6f0 <__eqdf2>:
   2f6f0:	2804d53a 	srli	r2,r5,20
   2f6f4:	3806d53a 	srli	r3,r7,20
   2f6f8:	02000434 	movhi	r8,16
   2f6fc:	423fffc4 	addi	r8,r8,-1
   2f700:	1081ffcc 	andi	r2,r2,2047
   2f704:	0281ffc4 	movi	r10,2047
   2f708:	2a12703a 	and	r9,r5,r8
   2f70c:	18c1ffcc 	andi	r3,r3,2047
   2f710:	3a10703a 	and	r8,r7,r8
   2f714:	280ad7fa 	srli	r5,r5,31
   2f718:	380ed7fa 	srli	r7,r7,31
   2f71c:	12801026 	beq	r2,r10,2f760 <__eqdf2+0x70>
   2f720:	0281ffc4 	movi	r10,2047
   2f724:	1a800a26 	beq	r3,r10,2f750 <__eqdf2+0x60>
   2f728:	10c00226 	beq	r2,r3,2f734 <__eqdf2+0x44>
   2f72c:	00800044 	movi	r2,1
   2f730:	f800283a 	ret
   2f734:	4a3ffd1e 	bne	r9,r8,2f72c <__alt_data_end+0xffff032c>
   2f738:	21bffc1e 	bne	r4,r6,2f72c <__alt_data_end+0xffff032c>
   2f73c:	29c00c26 	beq	r5,r7,2f770 <__eqdf2+0x80>
   2f740:	103ffa1e 	bne	r2,zero,2f72c <__alt_data_end+0xffff032c>
   2f744:	2244b03a 	or	r2,r4,r9
   2f748:	1004c03a 	cmpne	r2,r2,zero
   2f74c:	f800283a 	ret
   2f750:	3214b03a 	or	r10,r6,r8
   2f754:	503ff426 	beq	r10,zero,2f728 <__alt_data_end+0xffff0328>
   2f758:	00800044 	movi	r2,1
   2f75c:	f800283a 	ret
   2f760:	2254b03a 	or	r10,r4,r9
   2f764:	503fee26 	beq	r10,zero,2f720 <__alt_data_end+0xffff0320>
   2f768:	00800044 	movi	r2,1
   2f76c:	f800283a 	ret
   2f770:	0005883a 	mov	r2,zero
   2f774:	f800283a 	ret

0002f778 <__floatunsidf>:
   2f778:	defffe04 	addi	sp,sp,-8
   2f77c:	dc000015 	stw	r16,0(sp)
   2f780:	dfc00115 	stw	ra,4(sp)
   2f784:	2021883a 	mov	r16,r4
   2f788:	20002226 	beq	r4,zero,2f814 <__floatunsidf+0x9c>
   2f78c:	002564c0 	call	2564c <__clzsi2>
   2f790:	01010784 	movi	r4,1054
   2f794:	2089c83a 	sub	r4,r4,r2
   2f798:	01810cc4 	movi	r6,1075
   2f79c:	310dc83a 	sub	r6,r6,r4
   2f7a0:	00c007c4 	movi	r3,31
   2f7a4:	1980120e 	bge	r3,r6,2f7f0 <__floatunsidf+0x78>
   2f7a8:	00c104c4 	movi	r3,1043
   2f7ac:	1907c83a 	sub	r3,r3,r4
   2f7b0:	80ca983a 	sll	r5,r16,r3
   2f7b4:	00800434 	movhi	r2,16
   2f7b8:	10bfffc4 	addi	r2,r2,-1
   2f7bc:	2101ffcc 	andi	r4,r4,2047
   2f7c0:	0021883a 	mov	r16,zero
   2f7c4:	288a703a 	and	r5,r5,r2
   2f7c8:	2008953a 	slli	r4,r4,20
   2f7cc:	00c00434 	movhi	r3,16
   2f7d0:	18ffffc4 	addi	r3,r3,-1
   2f7d4:	28c6703a 	and	r3,r5,r3
   2f7d8:	8005883a 	mov	r2,r16
   2f7dc:	1906b03a 	or	r3,r3,r4
   2f7e0:	dfc00117 	ldw	ra,4(sp)
   2f7e4:	dc000017 	ldw	r16,0(sp)
   2f7e8:	dec00204 	addi	sp,sp,8
   2f7ec:	f800283a 	ret
   2f7f0:	00c002c4 	movi	r3,11
   2f7f4:	188bc83a 	sub	r5,r3,r2
   2f7f8:	814ad83a 	srl	r5,r16,r5
   2f7fc:	00c00434 	movhi	r3,16
   2f800:	18ffffc4 	addi	r3,r3,-1
   2f804:	81a0983a 	sll	r16,r16,r6
   2f808:	2101ffcc 	andi	r4,r4,2047
   2f80c:	28ca703a 	and	r5,r5,r3
   2f810:	003fed06 	br	2f7c8 <__alt_data_end+0xffff03c8>
   2f814:	0009883a 	mov	r4,zero
   2f818:	000b883a 	mov	r5,zero
   2f81c:	003fea06 	br	2f7c8 <__alt_data_end+0xffff03c8>

0002f820 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f820:	defffe04 	addi	sp,sp,-8
   2f824:	dfc00115 	stw	ra,4(sp)
   2f828:	df000015 	stw	fp,0(sp)
   2f82c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f830:	d0a00c17 	ldw	r2,-32720(gp)
   2f834:	10000326 	beq	r2,zero,2f844 <alt_get_errno+0x24>
   2f838:	d0a00c17 	ldw	r2,-32720(gp)
   2f83c:	103ee83a 	callr	r2
   2f840:	00000106 	br	2f848 <alt_get_errno+0x28>
   2f844:	d0a6e004 	addi	r2,gp,-25728
}
   2f848:	e037883a 	mov	sp,fp
   2f84c:	dfc00117 	ldw	ra,4(sp)
   2f850:	df000017 	ldw	fp,0(sp)
   2f854:	dec00204 	addi	sp,sp,8
   2f858:	f800283a 	ret

0002f85c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2f85c:	defffb04 	addi	sp,sp,-20
   2f860:	dfc00415 	stw	ra,16(sp)
   2f864:	df000315 	stw	fp,12(sp)
   2f868:	df000304 	addi	fp,sp,12
   2f86c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2f870:	e0bfff17 	ldw	r2,-4(fp)
   2f874:	10000616 	blt	r2,zero,2f890 <close+0x34>
   2f878:	e0bfff17 	ldw	r2,-4(fp)
   2f87c:	10c00324 	muli	r3,r2,12
   2f880:	008000f4 	movhi	r2,3
   2f884:	108b9904 	addi	r2,r2,11876
   2f888:	1885883a 	add	r2,r3,r2
   2f88c:	00000106 	br	2f894 <close+0x38>
   2f890:	0005883a 	mov	r2,zero
   2f894:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2f898:	e0bffd17 	ldw	r2,-12(fp)
   2f89c:	10001926 	beq	r2,zero,2f904 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2f8a0:	e0bffd17 	ldw	r2,-12(fp)
   2f8a4:	10800017 	ldw	r2,0(r2)
   2f8a8:	10800417 	ldw	r2,16(r2)
   2f8ac:	10000626 	beq	r2,zero,2f8c8 <close+0x6c>
   2f8b0:	e0bffd17 	ldw	r2,-12(fp)
   2f8b4:	10800017 	ldw	r2,0(r2)
   2f8b8:	10800417 	ldw	r2,16(r2)
   2f8bc:	e13ffd17 	ldw	r4,-12(fp)
   2f8c0:	103ee83a 	callr	r2
   2f8c4:	00000106 	br	2f8cc <close+0x70>
   2f8c8:	0005883a 	mov	r2,zero
   2f8cc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2f8d0:	e13fff17 	ldw	r4,-4(fp)
   2f8d4:	002ff1c0 	call	2ff1c <alt_release_fd>
    if (rval < 0)
   2f8d8:	e0bffe17 	ldw	r2,-8(fp)
   2f8dc:	1000070e 	bge	r2,zero,2f8fc <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2f8e0:	002f8200 	call	2f820 <alt_get_errno>
   2f8e4:	1007883a 	mov	r3,r2
   2f8e8:	e0bffe17 	ldw	r2,-8(fp)
   2f8ec:	0085c83a 	sub	r2,zero,r2
   2f8f0:	18800015 	stw	r2,0(r3)
      return -1;
   2f8f4:	00bfffc4 	movi	r2,-1
   2f8f8:	00000706 	br	2f918 <close+0xbc>
    }
    return 0;
   2f8fc:	0005883a 	mov	r2,zero
   2f900:	00000506 	br	2f918 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2f904:	002f8200 	call	2f820 <alt_get_errno>
   2f908:	1007883a 	mov	r3,r2
   2f90c:	00801444 	movi	r2,81
   2f910:	18800015 	stw	r2,0(r3)
    return -1;
   2f914:	00bfffc4 	movi	r2,-1
  }
}
   2f918:	e037883a 	mov	sp,fp
   2f91c:	dfc00117 	ldw	ra,4(sp)
   2f920:	df000017 	ldw	fp,0(sp)
   2f924:	dec00204 	addi	sp,sp,8
   2f928:	f800283a 	ret

0002f92c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2f92c:	defffc04 	addi	sp,sp,-16
   2f930:	df000315 	stw	fp,12(sp)
   2f934:	df000304 	addi	fp,sp,12
   2f938:	e13ffd15 	stw	r4,-12(fp)
   2f93c:	e17ffe15 	stw	r5,-8(fp)
   2f940:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2f944:	e0bfff17 	ldw	r2,-4(fp)
}
   2f948:	e037883a 	mov	sp,fp
   2f94c:	df000017 	ldw	fp,0(sp)
   2f950:	dec00104 	addi	sp,sp,4
   2f954:	f800283a 	ret

0002f958 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f958:	defffe04 	addi	sp,sp,-8
   2f95c:	dfc00115 	stw	ra,4(sp)
   2f960:	df000015 	stw	fp,0(sp)
   2f964:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f968:	d0a00c17 	ldw	r2,-32720(gp)
   2f96c:	10000326 	beq	r2,zero,2f97c <alt_get_errno+0x24>
   2f970:	d0a00c17 	ldw	r2,-32720(gp)
   2f974:	103ee83a 	callr	r2
   2f978:	00000106 	br	2f980 <alt_get_errno+0x28>
   2f97c:	d0a6e004 	addi	r2,gp,-25728
}
   2f980:	e037883a 	mov	sp,fp
   2f984:	dfc00117 	ldw	ra,4(sp)
   2f988:	df000017 	ldw	fp,0(sp)
   2f98c:	dec00204 	addi	sp,sp,8
   2f990:	f800283a 	ret

0002f994 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2f994:	defffb04 	addi	sp,sp,-20
   2f998:	dfc00415 	stw	ra,16(sp)
   2f99c:	df000315 	stw	fp,12(sp)
   2f9a0:	df000304 	addi	fp,sp,12
   2f9a4:	e13ffe15 	stw	r4,-8(fp)
   2f9a8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2f9ac:	e0bffe17 	ldw	r2,-8(fp)
   2f9b0:	10000616 	blt	r2,zero,2f9cc <fstat+0x38>
   2f9b4:	e0bffe17 	ldw	r2,-8(fp)
   2f9b8:	10c00324 	muli	r3,r2,12
   2f9bc:	008000f4 	movhi	r2,3
   2f9c0:	108b9904 	addi	r2,r2,11876
   2f9c4:	1885883a 	add	r2,r3,r2
   2f9c8:	00000106 	br	2f9d0 <fstat+0x3c>
   2f9cc:	0005883a 	mov	r2,zero
   2f9d0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2f9d4:	e0bffd17 	ldw	r2,-12(fp)
   2f9d8:	10001026 	beq	r2,zero,2fa1c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2f9dc:	e0bffd17 	ldw	r2,-12(fp)
   2f9e0:	10800017 	ldw	r2,0(r2)
   2f9e4:	10800817 	ldw	r2,32(r2)
   2f9e8:	10000726 	beq	r2,zero,2fa08 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2f9ec:	e0bffd17 	ldw	r2,-12(fp)
   2f9f0:	10800017 	ldw	r2,0(r2)
   2f9f4:	10800817 	ldw	r2,32(r2)
   2f9f8:	e17fff17 	ldw	r5,-4(fp)
   2f9fc:	e13ffd17 	ldw	r4,-12(fp)
   2fa00:	103ee83a 	callr	r2
   2fa04:	00000a06 	br	2fa30 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2fa08:	e0bfff17 	ldw	r2,-4(fp)
   2fa0c:	00c80004 	movi	r3,8192
   2fa10:	10c00115 	stw	r3,4(r2)
      return 0;
   2fa14:	0005883a 	mov	r2,zero
   2fa18:	00000506 	br	2fa30 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2fa1c:	002f9580 	call	2f958 <alt_get_errno>
   2fa20:	1007883a 	mov	r3,r2
   2fa24:	00801444 	movi	r2,81
   2fa28:	18800015 	stw	r2,0(r3)
    return -1;
   2fa2c:	00bfffc4 	movi	r2,-1
  }
}
   2fa30:	e037883a 	mov	sp,fp
   2fa34:	dfc00117 	ldw	ra,4(sp)
   2fa38:	df000017 	ldw	fp,0(sp)
   2fa3c:	dec00204 	addi	sp,sp,8
   2fa40:	f800283a 	ret

0002fa44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2fa44:	defffe04 	addi	sp,sp,-8
   2fa48:	dfc00115 	stw	ra,4(sp)
   2fa4c:	df000015 	stw	fp,0(sp)
   2fa50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fa54:	d0a00c17 	ldw	r2,-32720(gp)
   2fa58:	10000326 	beq	r2,zero,2fa68 <alt_get_errno+0x24>
   2fa5c:	d0a00c17 	ldw	r2,-32720(gp)
   2fa60:	103ee83a 	callr	r2
   2fa64:	00000106 	br	2fa6c <alt_get_errno+0x28>
   2fa68:	d0a6e004 	addi	r2,gp,-25728
}
   2fa6c:	e037883a 	mov	sp,fp
   2fa70:	dfc00117 	ldw	ra,4(sp)
   2fa74:	df000017 	ldw	fp,0(sp)
   2fa78:	dec00204 	addi	sp,sp,8
   2fa7c:	f800283a 	ret

0002fa80 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2fa80:	deffed04 	addi	sp,sp,-76
   2fa84:	dfc01215 	stw	ra,72(sp)
   2fa88:	df001115 	stw	fp,68(sp)
   2fa8c:	df001104 	addi	fp,sp,68
   2fa90:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2fa94:	e0bfff17 	ldw	r2,-4(fp)
   2fa98:	10000616 	blt	r2,zero,2fab4 <isatty+0x34>
   2fa9c:	e0bfff17 	ldw	r2,-4(fp)
   2faa0:	10c00324 	muli	r3,r2,12
   2faa4:	008000f4 	movhi	r2,3
   2faa8:	108b9904 	addi	r2,r2,11876
   2faac:	1885883a 	add	r2,r3,r2
   2fab0:	00000106 	br	2fab8 <isatty+0x38>
   2fab4:	0005883a 	mov	r2,zero
   2fab8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2fabc:	e0bfef17 	ldw	r2,-68(fp)
   2fac0:	10000e26 	beq	r2,zero,2fafc <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2fac4:	e0bfef17 	ldw	r2,-68(fp)
   2fac8:	10800017 	ldw	r2,0(r2)
   2facc:	10800817 	ldw	r2,32(r2)
   2fad0:	1000021e 	bne	r2,zero,2fadc <isatty+0x5c>
    {
      return 1;
   2fad4:	00800044 	movi	r2,1
   2fad8:	00000d06 	br	2fb10 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2fadc:	e0bff004 	addi	r2,fp,-64
   2fae0:	100b883a 	mov	r5,r2
   2fae4:	e13fff17 	ldw	r4,-4(fp)
   2fae8:	002f9940 	call	2f994 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2faec:	e0bff117 	ldw	r2,-60(fp)
   2faf0:	10880020 	cmpeqi	r2,r2,8192
   2faf4:	10803fcc 	andi	r2,r2,255
   2faf8:	00000506 	br	2fb10 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2fafc:	002fa440 	call	2fa44 <alt_get_errno>
   2fb00:	1007883a 	mov	r3,r2
   2fb04:	00801444 	movi	r2,81
   2fb08:	18800015 	stw	r2,0(r3)
    return 0;
   2fb0c:	0005883a 	mov	r2,zero
  }
}
   2fb10:	e037883a 	mov	sp,fp
   2fb14:	dfc00117 	ldw	ra,4(sp)
   2fb18:	df000017 	ldw	fp,0(sp)
   2fb1c:	dec00204 	addi	sp,sp,8
   2fb20:	f800283a 	ret

0002fb24 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2fb24:	defffc04 	addi	sp,sp,-16
   2fb28:	df000315 	stw	fp,12(sp)
   2fb2c:	df000304 	addi	fp,sp,12
   2fb30:	e13ffd15 	stw	r4,-12(fp)
   2fb34:	e17ffe15 	stw	r5,-8(fp)
   2fb38:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2fb3c:	e0fffe17 	ldw	r3,-8(fp)
   2fb40:	e0bffd17 	ldw	r2,-12(fp)
   2fb44:	18800c26 	beq	r3,r2,2fb78 <alt_load_section+0x54>
  {
    while( to != end )
   2fb48:	00000806 	br	2fb6c <alt_load_section+0x48>
    {
      *to++ = *from++;
   2fb4c:	e0bffe17 	ldw	r2,-8(fp)
   2fb50:	10c00104 	addi	r3,r2,4
   2fb54:	e0fffe15 	stw	r3,-8(fp)
   2fb58:	e0fffd17 	ldw	r3,-12(fp)
   2fb5c:	19000104 	addi	r4,r3,4
   2fb60:	e13ffd15 	stw	r4,-12(fp)
   2fb64:	18c00017 	ldw	r3,0(r3)
   2fb68:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2fb6c:	e0fffe17 	ldw	r3,-8(fp)
   2fb70:	e0bfff17 	ldw	r2,-4(fp)
   2fb74:	18bff51e 	bne	r3,r2,2fb4c <__alt_data_end+0xffff074c>
    {
      *to++ = *from++;
    }
  }
}
   2fb78:	0001883a 	nop
   2fb7c:	e037883a 	mov	sp,fp
   2fb80:	df000017 	ldw	fp,0(sp)
   2fb84:	dec00104 	addi	sp,sp,4
   2fb88:	f800283a 	ret

0002fb8c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2fb8c:	defffe04 	addi	sp,sp,-8
   2fb90:	dfc00115 	stw	ra,4(sp)
   2fb94:	df000015 	stw	fp,0(sp)
   2fb98:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2fb9c:	018000f4 	movhi	r6,3
   2fba0:	31902d04 	addi	r6,r6,16564
   2fba4:	014000f4 	movhi	r5,3
   2fba8:	29496604 	addi	r5,r5,9624
   2fbac:	010000f4 	movhi	r4,3
   2fbb0:	21102d04 	addi	r4,r4,16564
   2fbb4:	002fb240 	call	2fb24 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2fbb8:	018000b4 	movhi	r6,2
   2fbbc:	31809104 	addi	r6,r6,580
   2fbc0:	014000b4 	movhi	r5,2
   2fbc4:	29400804 	addi	r5,r5,32
   2fbc8:	010000b4 	movhi	r4,2
   2fbcc:	21000804 	addi	r4,r4,32
   2fbd0:	002fb240 	call	2fb24 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2fbd4:	018000f4 	movhi	r6,3
   2fbd8:	31896604 	addi	r6,r6,9624
   2fbdc:	014000f4 	movhi	r5,3
   2fbe0:	29485804 	addi	r5,r5,8544
   2fbe4:	010000f4 	movhi	r4,3
   2fbe8:	21085804 	addi	r4,r4,8544
   2fbec:	002fb240 	call	2fb24 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2fbf0:	003104c0 	call	3104c <alt_dcache_flush_all>
  alt_icache_flush_all();
   2fbf4:	00312340 	call	31234 <alt_icache_flush_all>
}
   2fbf8:	0001883a 	nop
   2fbfc:	e037883a 	mov	sp,fp
   2fc00:	dfc00117 	ldw	ra,4(sp)
   2fc04:	df000017 	ldw	fp,0(sp)
   2fc08:	dec00204 	addi	sp,sp,8
   2fc0c:	f800283a 	ret

0002fc10 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2fc10:	defffe04 	addi	sp,sp,-8
   2fc14:	dfc00115 	stw	ra,4(sp)
   2fc18:	df000015 	stw	fp,0(sp)
   2fc1c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fc20:	d0a00c17 	ldw	r2,-32720(gp)
   2fc24:	10000326 	beq	r2,zero,2fc34 <alt_get_errno+0x24>
   2fc28:	d0a00c17 	ldw	r2,-32720(gp)
   2fc2c:	103ee83a 	callr	r2
   2fc30:	00000106 	br	2fc38 <alt_get_errno+0x28>
   2fc34:	d0a6e004 	addi	r2,gp,-25728
}
   2fc38:	e037883a 	mov	sp,fp
   2fc3c:	dfc00117 	ldw	ra,4(sp)
   2fc40:	df000017 	ldw	fp,0(sp)
   2fc44:	dec00204 	addi	sp,sp,8
   2fc48:	f800283a 	ret

0002fc4c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2fc4c:	defff904 	addi	sp,sp,-28
   2fc50:	dfc00615 	stw	ra,24(sp)
   2fc54:	df000515 	stw	fp,20(sp)
   2fc58:	df000504 	addi	fp,sp,20
   2fc5c:	e13ffd15 	stw	r4,-12(fp)
   2fc60:	e17ffe15 	stw	r5,-8(fp)
   2fc64:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2fc68:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2fc6c:	e0bffd17 	ldw	r2,-12(fp)
   2fc70:	10000616 	blt	r2,zero,2fc8c <lseek+0x40>
   2fc74:	e0bffd17 	ldw	r2,-12(fp)
   2fc78:	10c00324 	muli	r3,r2,12
   2fc7c:	008000f4 	movhi	r2,3
   2fc80:	108b9904 	addi	r2,r2,11876
   2fc84:	1885883a 	add	r2,r3,r2
   2fc88:	00000106 	br	2fc90 <lseek+0x44>
   2fc8c:	0005883a 	mov	r2,zero
   2fc90:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2fc94:	e0bffc17 	ldw	r2,-16(fp)
   2fc98:	10001026 	beq	r2,zero,2fcdc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2fc9c:	e0bffc17 	ldw	r2,-16(fp)
   2fca0:	10800017 	ldw	r2,0(r2)
   2fca4:	10800717 	ldw	r2,28(r2)
   2fca8:	10000926 	beq	r2,zero,2fcd0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2fcac:	e0bffc17 	ldw	r2,-16(fp)
   2fcb0:	10800017 	ldw	r2,0(r2)
   2fcb4:	10800717 	ldw	r2,28(r2)
   2fcb8:	e1bfff17 	ldw	r6,-4(fp)
   2fcbc:	e17ffe17 	ldw	r5,-8(fp)
   2fcc0:	e13ffc17 	ldw	r4,-16(fp)
   2fcc4:	103ee83a 	callr	r2
   2fcc8:	e0bffb15 	stw	r2,-20(fp)
   2fccc:	00000506 	br	2fce4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2fcd0:	00bfde84 	movi	r2,-134
   2fcd4:	e0bffb15 	stw	r2,-20(fp)
   2fcd8:	00000206 	br	2fce4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2fcdc:	00bfebc4 	movi	r2,-81
   2fce0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2fce4:	e0bffb17 	ldw	r2,-20(fp)
   2fce8:	1000070e 	bge	r2,zero,2fd08 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2fcec:	002fc100 	call	2fc10 <alt_get_errno>
   2fcf0:	1007883a 	mov	r3,r2
   2fcf4:	e0bffb17 	ldw	r2,-20(fp)
   2fcf8:	0085c83a 	sub	r2,zero,r2
   2fcfc:	18800015 	stw	r2,0(r3)
    rc = -1;
   2fd00:	00bfffc4 	movi	r2,-1
   2fd04:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2fd08:	e0bffb17 	ldw	r2,-20(fp)
}
   2fd0c:	e037883a 	mov	sp,fp
   2fd10:	dfc00117 	ldw	ra,4(sp)
   2fd14:	df000017 	ldw	fp,0(sp)
   2fd18:	dec00204 	addi	sp,sp,8
   2fd1c:	f800283a 	ret

0002fd20 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2fd20:	defffd04 	addi	sp,sp,-12
   2fd24:	dfc00215 	stw	ra,8(sp)
   2fd28:	df000115 	stw	fp,4(sp)
   2fd2c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2fd30:	0009883a 	mov	r4,zero
   2fd34:	00301c80 	call	301c8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2fd38:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2fd3c:	00302000 	call	30200 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2fd40:	018000f4 	movhi	r6,3
   2fd44:	31895b04 	addi	r6,r6,9580
   2fd48:	014000f4 	movhi	r5,3
   2fd4c:	29495b04 	addi	r5,r5,9580
   2fd50:	010000f4 	movhi	r4,3
   2fd54:	21095b04 	addi	r4,r4,9580
   2fd58:	00315cc0 	call	315cc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2fd5c:	00311740 	call	31174 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2fd60:	010000f4 	movhi	r4,3
   2fd64:	21047504 	addi	r4,r4,4564
   2fd68:	0031dcc0 	call	31dcc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2fd6c:	d0a6e117 	ldw	r2,-25724(gp)
   2fd70:	d0e6e217 	ldw	r3,-25720(gp)
   2fd74:	d126e317 	ldw	r4,-25716(gp)
   2fd78:	200d883a 	mov	r6,r4
   2fd7c:	180b883a 	mov	r5,r3
   2fd80:	1009883a 	mov	r4,r2
   2fd84:	0020fdc0 	call	20fdc <main>
   2fd88:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2fd8c:	01000044 	movi	r4,1
   2fd90:	002f85c0 	call	2f85c <close>
  exit (result);
   2fd94:	e13fff17 	ldw	r4,-4(fp)
   2fd98:	0031de00 	call	31de0 <exit>

0002fd9c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2fd9c:	defffe04 	addi	sp,sp,-8
   2fda0:	df000115 	stw	fp,4(sp)
   2fda4:	df000104 	addi	fp,sp,4
   2fda8:	e13fff15 	stw	r4,-4(fp)
}
   2fdac:	0001883a 	nop
   2fdb0:	e037883a 	mov	sp,fp
   2fdb4:	df000017 	ldw	fp,0(sp)
   2fdb8:	dec00104 	addi	sp,sp,4
   2fdbc:	f800283a 	ret

0002fdc0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2fdc0:	defffe04 	addi	sp,sp,-8
   2fdc4:	df000115 	stw	fp,4(sp)
   2fdc8:	df000104 	addi	fp,sp,4
   2fdcc:	e13fff15 	stw	r4,-4(fp)
}
   2fdd0:	0001883a 	nop
   2fdd4:	e037883a 	mov	sp,fp
   2fdd8:	df000017 	ldw	fp,0(sp)
   2fddc:	dec00104 	addi	sp,sp,4
   2fde0:	f800283a 	ret

0002fde4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2fde4:	defffe04 	addi	sp,sp,-8
   2fde8:	dfc00115 	stw	ra,4(sp)
   2fdec:	df000015 	stw	fp,0(sp)
   2fdf0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fdf4:	d0a00c17 	ldw	r2,-32720(gp)
   2fdf8:	10000326 	beq	r2,zero,2fe08 <alt_get_errno+0x24>
   2fdfc:	d0a00c17 	ldw	r2,-32720(gp)
   2fe00:	103ee83a 	callr	r2
   2fe04:	00000106 	br	2fe0c <alt_get_errno+0x28>
   2fe08:	d0a6e004 	addi	r2,gp,-25728
}
   2fe0c:	e037883a 	mov	sp,fp
   2fe10:	dfc00117 	ldw	ra,4(sp)
   2fe14:	df000017 	ldw	fp,0(sp)
   2fe18:	dec00204 	addi	sp,sp,8
   2fe1c:	f800283a 	ret

0002fe20 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2fe20:	defff904 	addi	sp,sp,-28
   2fe24:	dfc00615 	stw	ra,24(sp)
   2fe28:	df000515 	stw	fp,20(sp)
   2fe2c:	df000504 	addi	fp,sp,20
   2fe30:	e13ffd15 	stw	r4,-12(fp)
   2fe34:	e17ffe15 	stw	r5,-8(fp)
   2fe38:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2fe3c:	e0bffd17 	ldw	r2,-12(fp)
   2fe40:	10000616 	blt	r2,zero,2fe5c <read+0x3c>
   2fe44:	e0bffd17 	ldw	r2,-12(fp)
   2fe48:	10c00324 	muli	r3,r2,12
   2fe4c:	008000f4 	movhi	r2,3
   2fe50:	108b9904 	addi	r2,r2,11876
   2fe54:	1885883a 	add	r2,r3,r2
   2fe58:	00000106 	br	2fe60 <read+0x40>
   2fe5c:	0005883a 	mov	r2,zero
   2fe60:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2fe64:	e0bffb17 	ldw	r2,-20(fp)
   2fe68:	10002226 	beq	r2,zero,2fef4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2fe6c:	e0bffb17 	ldw	r2,-20(fp)
   2fe70:	10800217 	ldw	r2,8(r2)
   2fe74:	108000cc 	andi	r2,r2,3
   2fe78:	10800060 	cmpeqi	r2,r2,1
   2fe7c:	1000181e 	bne	r2,zero,2fee0 <read+0xc0>
        (fd->dev->read))
   2fe80:	e0bffb17 	ldw	r2,-20(fp)
   2fe84:	10800017 	ldw	r2,0(r2)
   2fe88:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2fe8c:	10001426 	beq	r2,zero,2fee0 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2fe90:	e0bffb17 	ldw	r2,-20(fp)
   2fe94:	10800017 	ldw	r2,0(r2)
   2fe98:	10800517 	ldw	r2,20(r2)
   2fe9c:	e0ffff17 	ldw	r3,-4(fp)
   2fea0:	180d883a 	mov	r6,r3
   2fea4:	e17ffe17 	ldw	r5,-8(fp)
   2fea8:	e13ffb17 	ldw	r4,-20(fp)
   2feac:	103ee83a 	callr	r2
   2feb0:	e0bffc15 	stw	r2,-16(fp)
   2feb4:	e0bffc17 	ldw	r2,-16(fp)
   2feb8:	1000070e 	bge	r2,zero,2fed8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2febc:	002fde40 	call	2fde4 <alt_get_errno>
   2fec0:	1007883a 	mov	r3,r2
   2fec4:	e0bffc17 	ldw	r2,-16(fp)
   2fec8:	0085c83a 	sub	r2,zero,r2
   2fecc:	18800015 	stw	r2,0(r3)
          return -1;
   2fed0:	00bfffc4 	movi	r2,-1
   2fed4:	00000c06 	br	2ff08 <read+0xe8>
        }
        return rval;
   2fed8:	e0bffc17 	ldw	r2,-16(fp)
   2fedc:	00000a06 	br	2ff08 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2fee0:	002fde40 	call	2fde4 <alt_get_errno>
   2fee4:	1007883a 	mov	r3,r2
   2fee8:	00800344 	movi	r2,13
   2feec:	18800015 	stw	r2,0(r3)
   2fef0:	00000406 	br	2ff04 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2fef4:	002fde40 	call	2fde4 <alt_get_errno>
   2fef8:	1007883a 	mov	r3,r2
   2fefc:	00801444 	movi	r2,81
   2ff00:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2ff04:	00bfffc4 	movi	r2,-1
}
   2ff08:	e037883a 	mov	sp,fp
   2ff0c:	dfc00117 	ldw	ra,4(sp)
   2ff10:	df000017 	ldw	fp,0(sp)
   2ff14:	dec00204 	addi	sp,sp,8
   2ff18:	f800283a 	ret

0002ff1c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2ff1c:	defffe04 	addi	sp,sp,-8
   2ff20:	df000115 	stw	fp,4(sp)
   2ff24:	df000104 	addi	fp,sp,4
   2ff28:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2ff2c:	e0bfff17 	ldw	r2,-4(fp)
   2ff30:	108000d0 	cmplti	r2,r2,3
   2ff34:	10000d1e 	bne	r2,zero,2ff6c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2ff38:	008000f4 	movhi	r2,3
   2ff3c:	108b9904 	addi	r2,r2,11876
   2ff40:	e0ffff17 	ldw	r3,-4(fp)
   2ff44:	18c00324 	muli	r3,r3,12
   2ff48:	10c5883a 	add	r2,r2,r3
   2ff4c:	10800204 	addi	r2,r2,8
   2ff50:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2ff54:	008000f4 	movhi	r2,3
   2ff58:	108b9904 	addi	r2,r2,11876
   2ff5c:	e0ffff17 	ldw	r3,-4(fp)
   2ff60:	18c00324 	muli	r3,r3,12
   2ff64:	10c5883a 	add	r2,r2,r3
   2ff68:	10000015 	stw	zero,0(r2)
  }
}
   2ff6c:	0001883a 	nop
   2ff70:	e037883a 	mov	sp,fp
   2ff74:	df000017 	ldw	fp,0(sp)
   2ff78:	dec00104 	addi	sp,sp,4
   2ff7c:	f800283a 	ret

0002ff80 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2ff80:	defff904 	addi	sp,sp,-28
   2ff84:	df000615 	stw	fp,24(sp)
   2ff88:	df000604 	addi	fp,sp,24
   2ff8c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ff90:	0005303a 	rdctl	r2,status
   2ff94:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ff98:	e0fffe17 	ldw	r3,-8(fp)
   2ff9c:	00bfff84 	movi	r2,-2
   2ffa0:	1884703a 	and	r2,r3,r2
   2ffa4:	1001703a 	wrctl	status,r2
  
  return context;
   2ffa8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2ffac:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2ffb0:	d0a00d17 	ldw	r2,-32716(gp)
   2ffb4:	10c000c4 	addi	r3,r2,3
   2ffb8:	00bfff04 	movi	r2,-4
   2ffbc:	1884703a 	and	r2,r3,r2
   2ffc0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2ffc4:	d0e00d17 	ldw	r3,-32716(gp)
   2ffc8:	e0bfff17 	ldw	r2,-4(fp)
   2ffcc:	1887883a 	add	r3,r3,r2
   2ffd0:	00800134 	movhi	r2,4
   2ffd4:	10bd0004 	addi	r2,r2,-3072
   2ffd8:	10c0062e 	bgeu	r2,r3,2fff4 <sbrk+0x74>
   2ffdc:	e0bffb17 	ldw	r2,-20(fp)
   2ffe0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ffe4:	e0bffa17 	ldw	r2,-24(fp)
   2ffe8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2ffec:	00bfffc4 	movi	r2,-1
   2fff0:	00000b06 	br	30020 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2fff4:	d0a00d17 	ldw	r2,-32716(gp)
   2fff8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2fffc:	d0e00d17 	ldw	r3,-32716(gp)
   30000:	e0bfff17 	ldw	r2,-4(fp)
   30004:	1885883a 	add	r2,r3,r2
   30008:	d0a00d15 	stw	r2,-32716(gp)
   3000c:	e0bffb17 	ldw	r2,-20(fp)
   30010:	e0bffc15 	stw	r2,-16(fp)
   30014:	e0bffc17 	ldw	r2,-16(fp)
   30018:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   3001c:	e0bffd17 	ldw	r2,-12(fp)
} 
   30020:	e037883a 	mov	sp,fp
   30024:	df000017 	ldw	fp,0(sp)
   30028:	dec00104 	addi	sp,sp,4
   3002c:	f800283a 	ret

00030030 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   30030:	defffd04 	addi	sp,sp,-12
   30034:	dfc00215 	stw	ra,8(sp)
   30038:	df000115 	stw	fp,4(sp)
   3003c:	df000104 	addi	fp,sp,4
   30040:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   30044:	e13fff17 	ldw	r4,-4(fp)
   30048:	0030ef40 	call	30ef4 <alt_busy_sleep>
}
   3004c:	e037883a 	mov	sp,fp
   30050:	dfc00117 	ldw	ra,4(sp)
   30054:	df000017 	ldw	fp,0(sp)
   30058:	dec00204 	addi	sp,sp,8
   3005c:	f800283a 	ret

00030060 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30060:	defffe04 	addi	sp,sp,-8
   30064:	dfc00115 	stw	ra,4(sp)
   30068:	df000015 	stw	fp,0(sp)
   3006c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30070:	d0a00c17 	ldw	r2,-32720(gp)
   30074:	10000326 	beq	r2,zero,30084 <alt_get_errno+0x24>
   30078:	d0a00c17 	ldw	r2,-32720(gp)
   3007c:	103ee83a 	callr	r2
   30080:	00000106 	br	30088 <alt_get_errno+0x28>
   30084:	d0a6e004 	addi	r2,gp,-25728
}
   30088:	e037883a 	mov	sp,fp
   3008c:	dfc00117 	ldw	ra,4(sp)
   30090:	df000017 	ldw	fp,0(sp)
   30094:	dec00204 	addi	sp,sp,8
   30098:	f800283a 	ret

0003009c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   3009c:	defff904 	addi	sp,sp,-28
   300a0:	dfc00615 	stw	ra,24(sp)
   300a4:	df000515 	stw	fp,20(sp)
   300a8:	df000504 	addi	fp,sp,20
   300ac:	e13ffd15 	stw	r4,-12(fp)
   300b0:	e17ffe15 	stw	r5,-8(fp)
   300b4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   300b8:	e0bffd17 	ldw	r2,-12(fp)
   300bc:	10000616 	blt	r2,zero,300d8 <write+0x3c>
   300c0:	e0bffd17 	ldw	r2,-12(fp)
   300c4:	10c00324 	muli	r3,r2,12
   300c8:	008000f4 	movhi	r2,3
   300cc:	108b9904 	addi	r2,r2,11876
   300d0:	1885883a 	add	r2,r3,r2
   300d4:	00000106 	br	300dc <write+0x40>
   300d8:	0005883a 	mov	r2,zero
   300dc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   300e0:	e0bffb17 	ldw	r2,-20(fp)
   300e4:	10002126 	beq	r2,zero,3016c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   300e8:	e0bffb17 	ldw	r2,-20(fp)
   300ec:	10800217 	ldw	r2,8(r2)
   300f0:	108000cc 	andi	r2,r2,3
   300f4:	10001826 	beq	r2,zero,30158 <write+0xbc>
   300f8:	e0bffb17 	ldw	r2,-20(fp)
   300fc:	10800017 	ldw	r2,0(r2)
   30100:	10800617 	ldw	r2,24(r2)
   30104:	10001426 	beq	r2,zero,30158 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   30108:	e0bffb17 	ldw	r2,-20(fp)
   3010c:	10800017 	ldw	r2,0(r2)
   30110:	10800617 	ldw	r2,24(r2)
   30114:	e0ffff17 	ldw	r3,-4(fp)
   30118:	180d883a 	mov	r6,r3
   3011c:	e17ffe17 	ldw	r5,-8(fp)
   30120:	e13ffb17 	ldw	r4,-20(fp)
   30124:	103ee83a 	callr	r2
   30128:	e0bffc15 	stw	r2,-16(fp)
   3012c:	e0bffc17 	ldw	r2,-16(fp)
   30130:	1000070e 	bge	r2,zero,30150 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   30134:	00300600 	call	30060 <alt_get_errno>
   30138:	1007883a 	mov	r3,r2
   3013c:	e0bffc17 	ldw	r2,-16(fp)
   30140:	0085c83a 	sub	r2,zero,r2
   30144:	18800015 	stw	r2,0(r3)
        return -1;
   30148:	00bfffc4 	movi	r2,-1
   3014c:	00000c06 	br	30180 <write+0xe4>
      }
      return rval;
   30150:	e0bffc17 	ldw	r2,-16(fp)
   30154:	00000a06 	br	30180 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   30158:	00300600 	call	30060 <alt_get_errno>
   3015c:	1007883a 	mov	r3,r2
   30160:	00800344 	movi	r2,13
   30164:	18800015 	stw	r2,0(r3)
   30168:	00000406 	br	3017c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   3016c:	00300600 	call	30060 <alt_get_errno>
   30170:	1007883a 	mov	r3,r2
   30174:	00801444 	movi	r2,81
   30178:	18800015 	stw	r2,0(r3)
  }
  return -1;
   3017c:	00bfffc4 	movi	r2,-1
}
   30180:	e037883a 	mov	sp,fp
   30184:	dfc00117 	ldw	ra,4(sp)
   30188:	df000017 	ldw	fp,0(sp)
   3018c:	dec00204 	addi	sp,sp,8
   30190:	f800283a 	ret

00030194 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   30194:	defffd04 	addi	sp,sp,-12
   30198:	dfc00215 	stw	ra,8(sp)
   3019c:	df000115 	stw	fp,4(sp)
   301a0:	df000104 	addi	fp,sp,4
   301a4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   301a8:	d1600904 	addi	r5,gp,-32732
   301ac:	e13fff17 	ldw	r4,-4(fp)
   301b0:	00310d00 	call	310d0 <alt_dev_llist_insert>
}
   301b4:	e037883a 	mov	sp,fp
   301b8:	dfc00117 	ldw	ra,4(sp)
   301bc:	df000017 	ldw	fp,0(sp)
   301c0:	dec00204 	addi	sp,sp,8
   301c4:	f800283a 	ret

000301c8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   301c8:	defffd04 	addi	sp,sp,-12
   301cc:	dfc00215 	stw	ra,8(sp)
   301d0:	df000115 	stw	fp,4(sp)
   301d4:	df000104 	addi	fp,sp,4
   301d8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( PROCESADOR1, Procesador1);
   301dc:	0031a400 	call	31a40 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   301e0:	00800044 	movi	r2,1
   301e4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   301e8:	0001883a 	nop
   301ec:	e037883a 	mov	sp,fp
   301f0:	dfc00117 	ldw	ra,4(sp)
   301f4:	df000017 	ldw	fp,0(sp)
   301f8:	dec00204 	addi	sp,sp,8
   301fc:	f800283a 	ret

00030200 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   30200:	defffe04 	addi	sp,sp,-8
   30204:	dfc00115 	stw	ra,4(sp)
   30208:	df000015 	stw	fp,0(sp)
   3020c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, TIMER);
   30210:	01c0fa04 	movi	r7,1000
   30214:	000d883a 	mov	r6,zero
   30218:	000b883a 	mov	r5,zero
   3021c:	01000134 	movhi	r4,4
   30220:	21040004 	addi	r4,r4,4096
   30224:	0030d4c0 	call	30d4c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   30228:	01800044 	movi	r6,1
   3022c:	000b883a 	mov	r5,zero
   30230:	010000f4 	movhi	r4,3
   30234:	210c0304 	addi	r4,r4,12300
   30238:	00303d00 	call	303d0 <altera_avalon_jtag_uart_init>
   3023c:	010000f4 	movhi	r4,3
   30240:	210bf904 	addi	r4,r4,12260
   30244:	00301940 	call	30194 <alt_dev_reg>
    ALTERA_UP_AVALON_ADC_INIT ( LDR, LDR);
   30248:	010000f4 	movhi	r4,3
   3024c:	21101104 	addi	r4,r4,16452
   30250:	00301940 	call	30194 <alt_dev_reg>
}
   30254:	0001883a 	nop
   30258:	e037883a 	mov	sp,fp
   3025c:	dfc00117 	ldw	ra,4(sp)
   30260:	df000017 	ldw	fp,0(sp)
   30264:	dec00204 	addi	sp,sp,8
   30268:	f800283a 	ret

0003026c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   3026c:	defffa04 	addi	sp,sp,-24
   30270:	dfc00515 	stw	ra,20(sp)
   30274:	df000415 	stw	fp,16(sp)
   30278:	df000404 	addi	fp,sp,16
   3027c:	e13ffd15 	stw	r4,-12(fp)
   30280:	e17ffe15 	stw	r5,-8(fp)
   30284:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   30288:	e0bffd17 	ldw	r2,-12(fp)
   3028c:	10800017 	ldw	r2,0(r2)
   30290:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   30294:	e0bffc17 	ldw	r2,-16(fp)
   30298:	10c00a04 	addi	r3,r2,40
   3029c:	e0bffd17 	ldw	r2,-12(fp)
   302a0:	10800217 	ldw	r2,8(r2)
   302a4:	100f883a 	mov	r7,r2
   302a8:	e1bfff17 	ldw	r6,-4(fp)
   302ac:	e17ffe17 	ldw	r5,-8(fp)
   302b0:	1809883a 	mov	r4,r3
   302b4:	00308940 	call	30894 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   302b8:	e037883a 	mov	sp,fp
   302bc:	dfc00117 	ldw	ra,4(sp)
   302c0:	df000017 	ldw	fp,0(sp)
   302c4:	dec00204 	addi	sp,sp,8
   302c8:	f800283a 	ret

000302cc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   302cc:	defffa04 	addi	sp,sp,-24
   302d0:	dfc00515 	stw	ra,20(sp)
   302d4:	df000415 	stw	fp,16(sp)
   302d8:	df000404 	addi	fp,sp,16
   302dc:	e13ffd15 	stw	r4,-12(fp)
   302e0:	e17ffe15 	stw	r5,-8(fp)
   302e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   302e8:	e0bffd17 	ldw	r2,-12(fp)
   302ec:	10800017 	ldw	r2,0(r2)
   302f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   302f4:	e0bffc17 	ldw	r2,-16(fp)
   302f8:	10c00a04 	addi	r3,r2,40
   302fc:	e0bffd17 	ldw	r2,-12(fp)
   30300:	10800217 	ldw	r2,8(r2)
   30304:	100f883a 	mov	r7,r2
   30308:	e1bfff17 	ldw	r6,-4(fp)
   3030c:	e17ffe17 	ldw	r5,-8(fp)
   30310:	1809883a 	mov	r4,r3
   30314:	0030ab00 	call	30ab0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   30318:	e037883a 	mov	sp,fp
   3031c:	dfc00117 	ldw	ra,4(sp)
   30320:	df000017 	ldw	fp,0(sp)
   30324:	dec00204 	addi	sp,sp,8
   30328:	f800283a 	ret

0003032c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   3032c:	defffc04 	addi	sp,sp,-16
   30330:	dfc00315 	stw	ra,12(sp)
   30334:	df000215 	stw	fp,8(sp)
   30338:	df000204 	addi	fp,sp,8
   3033c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   30340:	e0bfff17 	ldw	r2,-4(fp)
   30344:	10800017 	ldw	r2,0(r2)
   30348:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   3034c:	e0bffe17 	ldw	r2,-8(fp)
   30350:	10c00a04 	addi	r3,r2,40
   30354:	e0bfff17 	ldw	r2,-4(fp)
   30358:	10800217 	ldw	r2,8(r2)
   3035c:	100b883a 	mov	r5,r2
   30360:	1809883a 	mov	r4,r3
   30364:	003073c0 	call	3073c <altera_avalon_jtag_uart_close>
}
   30368:	e037883a 	mov	sp,fp
   3036c:	dfc00117 	ldw	ra,4(sp)
   30370:	df000017 	ldw	fp,0(sp)
   30374:	dec00204 	addi	sp,sp,8
   30378:	f800283a 	ret

0003037c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   3037c:	defffa04 	addi	sp,sp,-24
   30380:	dfc00515 	stw	ra,20(sp)
   30384:	df000415 	stw	fp,16(sp)
   30388:	df000404 	addi	fp,sp,16
   3038c:	e13ffd15 	stw	r4,-12(fp)
   30390:	e17ffe15 	stw	r5,-8(fp)
   30394:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   30398:	e0bffd17 	ldw	r2,-12(fp)
   3039c:	10800017 	ldw	r2,0(r2)
   303a0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   303a4:	e0bffc17 	ldw	r2,-16(fp)
   303a8:	10800a04 	addi	r2,r2,40
   303ac:	e1bfff17 	ldw	r6,-4(fp)
   303b0:	e17ffe17 	ldw	r5,-8(fp)
   303b4:	1009883a 	mov	r4,r2
   303b8:	00307a40 	call	307a4 <altera_avalon_jtag_uart_ioctl>
}
   303bc:	e037883a 	mov	sp,fp
   303c0:	dfc00117 	ldw	ra,4(sp)
   303c4:	df000017 	ldw	fp,0(sp)
   303c8:	dec00204 	addi	sp,sp,8
   303cc:	f800283a 	ret

000303d0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   303d0:	defffa04 	addi	sp,sp,-24
   303d4:	dfc00515 	stw	ra,20(sp)
   303d8:	df000415 	stw	fp,16(sp)
   303dc:	df000404 	addi	fp,sp,16
   303e0:	e13ffd15 	stw	r4,-12(fp)
   303e4:	e17ffe15 	stw	r5,-8(fp)
   303e8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   303ec:	e0bffd17 	ldw	r2,-12(fp)
   303f0:	00c00044 	movi	r3,1
   303f4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   303f8:	e0bffd17 	ldw	r2,-12(fp)
   303fc:	10800017 	ldw	r2,0(r2)
   30400:	10800104 	addi	r2,r2,4
   30404:	1007883a 	mov	r3,r2
   30408:	e0bffd17 	ldw	r2,-12(fp)
   3040c:	10800817 	ldw	r2,32(r2)
   30410:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   30414:	e0bffe17 	ldw	r2,-8(fp)
   30418:	e0ffff17 	ldw	r3,-4(fp)
   3041c:	d8000015 	stw	zero,0(sp)
   30420:	e1fffd17 	ldw	r7,-12(fp)
   30424:	018000f4 	movhi	r6,3
   30428:	31812404 	addi	r6,r6,1168
   3042c:	180b883a 	mov	r5,r3
   30430:	1009883a 	mov	r4,r2
   30434:	00312680 	call	31268 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   30438:	e0bffd17 	ldw	r2,-12(fp)
   3043c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   30440:	e0bffd17 	ldw	r2,-12(fp)
   30444:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   30448:	d0e6e517 	ldw	r3,-25708(gp)
   3044c:	e1fffd17 	ldw	r7,-12(fp)
   30450:	018000f4 	movhi	r6,3
   30454:	3181a704 	addi	r6,r6,1692
   30458:	180b883a 	mov	r5,r3
   3045c:	1009883a 	mov	r4,r2
   30460:	0030dc80 	call	30dc8 <alt_alarm_start>
   30464:	1000040e 	bge	r2,zero,30478 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   30468:	e0fffd17 	ldw	r3,-12(fp)
   3046c:	00a00034 	movhi	r2,32768
   30470:	10bfffc4 	addi	r2,r2,-1
   30474:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   30478:	0001883a 	nop
   3047c:	e037883a 	mov	sp,fp
   30480:	dfc00117 	ldw	ra,4(sp)
   30484:	df000017 	ldw	fp,0(sp)
   30488:	dec00204 	addi	sp,sp,8
   3048c:	f800283a 	ret

00030490 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   30490:	defff804 	addi	sp,sp,-32
   30494:	df000715 	stw	fp,28(sp)
   30498:	df000704 	addi	fp,sp,28
   3049c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   304a0:	e0bfff17 	ldw	r2,-4(fp)
   304a4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   304a8:	e0bffb17 	ldw	r2,-20(fp)
   304ac:	10800017 	ldw	r2,0(r2)
   304b0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   304b4:	e0bffc17 	ldw	r2,-16(fp)
   304b8:	10800104 	addi	r2,r2,4
   304bc:	10800037 	ldwio	r2,0(r2)
   304c0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   304c4:	e0bffd17 	ldw	r2,-12(fp)
   304c8:	1080c00c 	andi	r2,r2,768
   304cc:	10006d26 	beq	r2,zero,30684 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   304d0:	e0bffd17 	ldw	r2,-12(fp)
   304d4:	1080400c 	andi	r2,r2,256
   304d8:	10003526 	beq	r2,zero,305b0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   304dc:	00800074 	movhi	r2,1
   304e0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   304e4:	e0bffb17 	ldw	r2,-20(fp)
   304e8:	10800a17 	ldw	r2,40(r2)
   304ec:	10800044 	addi	r2,r2,1
   304f0:	1081ffcc 	andi	r2,r2,2047
   304f4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   304f8:	e0bffb17 	ldw	r2,-20(fp)
   304fc:	10c00b17 	ldw	r3,44(r2)
   30500:	e0bffe17 	ldw	r2,-8(fp)
   30504:	18801526 	beq	r3,r2,3055c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   30508:	e0bffc17 	ldw	r2,-16(fp)
   3050c:	10800037 	ldwio	r2,0(r2)
   30510:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   30514:	e0bff917 	ldw	r2,-28(fp)
   30518:	10a0000c 	andi	r2,r2,32768
   3051c:	10001126 	beq	r2,zero,30564 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   30520:	e0bffb17 	ldw	r2,-20(fp)
   30524:	10800a17 	ldw	r2,40(r2)
   30528:	e0fff917 	ldw	r3,-28(fp)
   3052c:	1809883a 	mov	r4,r3
   30530:	e0fffb17 	ldw	r3,-20(fp)
   30534:	1885883a 	add	r2,r3,r2
   30538:	10800e04 	addi	r2,r2,56
   3053c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   30540:	e0bffb17 	ldw	r2,-20(fp)
   30544:	10800a17 	ldw	r2,40(r2)
   30548:	10800044 	addi	r2,r2,1
   3054c:	10c1ffcc 	andi	r3,r2,2047
   30550:	e0bffb17 	ldw	r2,-20(fp)
   30554:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   30558:	003fe206 	br	304e4 <__alt_data_end+0xffff10e4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   3055c:	0001883a 	nop
   30560:	00000106 	br	30568 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   30564:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   30568:	e0bff917 	ldw	r2,-28(fp)
   3056c:	10bfffec 	andhi	r2,r2,65535
   30570:	10000f26 	beq	r2,zero,305b0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   30574:	e0bffb17 	ldw	r2,-20(fp)
   30578:	10c00817 	ldw	r3,32(r2)
   3057c:	00bfff84 	movi	r2,-2
   30580:	1886703a 	and	r3,r3,r2
   30584:	e0bffb17 	ldw	r2,-20(fp)
   30588:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   3058c:	e0bffc17 	ldw	r2,-16(fp)
   30590:	10800104 	addi	r2,r2,4
   30594:	1007883a 	mov	r3,r2
   30598:	e0bffb17 	ldw	r2,-20(fp)
   3059c:	10800817 	ldw	r2,32(r2)
   305a0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   305a4:	e0bffc17 	ldw	r2,-16(fp)
   305a8:	10800104 	addi	r2,r2,4
   305ac:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   305b0:	e0bffd17 	ldw	r2,-12(fp)
   305b4:	1080800c 	andi	r2,r2,512
   305b8:	103fbe26 	beq	r2,zero,304b4 <__alt_data_end+0xffff10b4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   305bc:	e0bffd17 	ldw	r2,-12(fp)
   305c0:	1004d43a 	srli	r2,r2,16
   305c4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   305c8:	00001406 	br	3061c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   305cc:	e0bffc17 	ldw	r2,-16(fp)
   305d0:	e0fffb17 	ldw	r3,-20(fp)
   305d4:	18c00d17 	ldw	r3,52(r3)
   305d8:	e13ffb17 	ldw	r4,-20(fp)
   305dc:	20c7883a 	add	r3,r4,r3
   305e0:	18c20e04 	addi	r3,r3,2104
   305e4:	18c00003 	ldbu	r3,0(r3)
   305e8:	18c03fcc 	andi	r3,r3,255
   305ec:	18c0201c 	xori	r3,r3,128
   305f0:	18ffe004 	addi	r3,r3,-128
   305f4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   305f8:	e0bffb17 	ldw	r2,-20(fp)
   305fc:	10800d17 	ldw	r2,52(r2)
   30600:	10800044 	addi	r2,r2,1
   30604:	10c1ffcc 	andi	r3,r2,2047
   30608:	e0bffb17 	ldw	r2,-20(fp)
   3060c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   30610:	e0bffa17 	ldw	r2,-24(fp)
   30614:	10bfffc4 	addi	r2,r2,-1
   30618:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   3061c:	e0bffa17 	ldw	r2,-24(fp)
   30620:	10000526 	beq	r2,zero,30638 <altera_avalon_jtag_uart_irq+0x1a8>
   30624:	e0bffb17 	ldw	r2,-20(fp)
   30628:	10c00d17 	ldw	r3,52(r2)
   3062c:	e0bffb17 	ldw	r2,-20(fp)
   30630:	10800c17 	ldw	r2,48(r2)
   30634:	18bfe51e 	bne	r3,r2,305cc <__alt_data_end+0xffff11cc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   30638:	e0bffa17 	ldw	r2,-24(fp)
   3063c:	103f9d26 	beq	r2,zero,304b4 <__alt_data_end+0xffff10b4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   30640:	e0bffb17 	ldw	r2,-20(fp)
   30644:	10c00817 	ldw	r3,32(r2)
   30648:	00bfff44 	movi	r2,-3
   3064c:	1886703a 	and	r3,r3,r2
   30650:	e0bffb17 	ldw	r2,-20(fp)
   30654:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   30658:	e0bffb17 	ldw	r2,-20(fp)
   3065c:	10800017 	ldw	r2,0(r2)
   30660:	10800104 	addi	r2,r2,4
   30664:	1007883a 	mov	r3,r2
   30668:	e0bffb17 	ldw	r2,-20(fp)
   3066c:	10800817 	ldw	r2,32(r2)
   30670:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   30674:	e0bffc17 	ldw	r2,-16(fp)
   30678:	10800104 	addi	r2,r2,4
   3067c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   30680:	003f8c06 	br	304b4 <__alt_data_end+0xffff10b4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   30684:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   30688:	0001883a 	nop
   3068c:	e037883a 	mov	sp,fp
   30690:	df000017 	ldw	fp,0(sp)
   30694:	dec00104 	addi	sp,sp,4
   30698:	f800283a 	ret

0003069c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   3069c:	defff804 	addi	sp,sp,-32
   306a0:	df000715 	stw	fp,28(sp)
   306a4:	df000704 	addi	fp,sp,28
   306a8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   306ac:	e0bffb17 	ldw	r2,-20(fp)
   306b0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   306b4:	e0bff917 	ldw	r2,-28(fp)
   306b8:	10800017 	ldw	r2,0(r2)
   306bc:	10800104 	addi	r2,r2,4
   306c0:	10800037 	ldwio	r2,0(r2)
   306c4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   306c8:	e0bffa17 	ldw	r2,-24(fp)
   306cc:	1081000c 	andi	r2,r2,1024
   306d0:	10000b26 	beq	r2,zero,30700 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   306d4:	e0bff917 	ldw	r2,-28(fp)
   306d8:	10800017 	ldw	r2,0(r2)
   306dc:	10800104 	addi	r2,r2,4
   306e0:	1007883a 	mov	r3,r2
   306e4:	e0bff917 	ldw	r2,-28(fp)
   306e8:	10800817 	ldw	r2,32(r2)
   306ec:	10810014 	ori	r2,r2,1024
   306f0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   306f4:	e0bff917 	ldw	r2,-28(fp)
   306f8:	10000915 	stw	zero,36(r2)
   306fc:	00000a06 	br	30728 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   30700:	e0bff917 	ldw	r2,-28(fp)
   30704:	10c00917 	ldw	r3,36(r2)
   30708:	00a00034 	movhi	r2,32768
   3070c:	10bfff04 	addi	r2,r2,-4
   30710:	10c00536 	bltu	r2,r3,30728 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   30714:	e0bff917 	ldw	r2,-28(fp)
   30718:	10800917 	ldw	r2,36(r2)
   3071c:	10c00044 	addi	r3,r2,1
   30720:	e0bff917 	ldw	r2,-28(fp)
   30724:	10c00915 	stw	r3,36(r2)
   30728:	d0a6e517 	ldw	r2,-25708(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   3072c:	e037883a 	mov	sp,fp
   30730:	df000017 	ldw	fp,0(sp)
   30734:	dec00104 	addi	sp,sp,4
   30738:	f800283a 	ret

0003073c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   3073c:	defffd04 	addi	sp,sp,-12
   30740:	df000215 	stw	fp,8(sp)
   30744:	df000204 	addi	fp,sp,8
   30748:	e13ffe15 	stw	r4,-8(fp)
   3074c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   30750:	00000506 	br	30768 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   30754:	e0bfff17 	ldw	r2,-4(fp)
   30758:	1090000c 	andi	r2,r2,16384
   3075c:	10000226 	beq	r2,zero,30768 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   30760:	00bffd44 	movi	r2,-11
   30764:	00000b06 	br	30794 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   30768:	e0bffe17 	ldw	r2,-8(fp)
   3076c:	10c00d17 	ldw	r3,52(r2)
   30770:	e0bffe17 	ldw	r2,-8(fp)
   30774:	10800c17 	ldw	r2,48(r2)
   30778:	18800526 	beq	r3,r2,30790 <altera_avalon_jtag_uart_close+0x54>
   3077c:	e0bffe17 	ldw	r2,-8(fp)
   30780:	10c00917 	ldw	r3,36(r2)
   30784:	e0bffe17 	ldw	r2,-8(fp)
   30788:	10800117 	ldw	r2,4(r2)
   3078c:	18bff136 	bltu	r3,r2,30754 <__alt_data_end+0xffff1354>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   30790:	0005883a 	mov	r2,zero
}
   30794:	e037883a 	mov	sp,fp
   30798:	df000017 	ldw	fp,0(sp)
   3079c:	dec00104 	addi	sp,sp,4
   307a0:	f800283a 	ret

000307a4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   307a4:	defffa04 	addi	sp,sp,-24
   307a8:	df000515 	stw	fp,20(sp)
   307ac:	df000504 	addi	fp,sp,20
   307b0:	e13ffd15 	stw	r4,-12(fp)
   307b4:	e17ffe15 	stw	r5,-8(fp)
   307b8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   307bc:	00bff9c4 	movi	r2,-25
   307c0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   307c4:	e0bffe17 	ldw	r2,-8(fp)
   307c8:	10da8060 	cmpeqi	r3,r2,27137
   307cc:	1800031e 	bne	r3,zero,307dc <altera_avalon_jtag_uart_ioctl+0x38>
   307d0:	109a80a0 	cmpeqi	r2,r2,27138
   307d4:	1000181e 	bne	r2,zero,30838 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   307d8:	00002906 	br	30880 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   307dc:	e0bffd17 	ldw	r2,-12(fp)
   307e0:	10c00117 	ldw	r3,4(r2)
   307e4:	00a00034 	movhi	r2,32768
   307e8:	10bfffc4 	addi	r2,r2,-1
   307ec:	18802126 	beq	r3,r2,30874 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   307f0:	e0bfff17 	ldw	r2,-4(fp)
   307f4:	10800017 	ldw	r2,0(r2)
   307f8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   307fc:	e0bffc17 	ldw	r2,-16(fp)
   30800:	10800090 	cmplti	r2,r2,2
   30804:	1000061e 	bne	r2,zero,30820 <altera_avalon_jtag_uart_ioctl+0x7c>
   30808:	e0fffc17 	ldw	r3,-16(fp)
   3080c:	00a00034 	movhi	r2,32768
   30810:	10bfffc4 	addi	r2,r2,-1
   30814:	18800226 	beq	r3,r2,30820 <altera_avalon_jtag_uart_ioctl+0x7c>
   30818:	e0bffc17 	ldw	r2,-16(fp)
   3081c:	00000206 	br	30828 <altera_avalon_jtag_uart_ioctl+0x84>
   30820:	00a00034 	movhi	r2,32768
   30824:	10bfff84 	addi	r2,r2,-2
   30828:	e0fffd17 	ldw	r3,-12(fp)
   3082c:	18800115 	stw	r2,4(r3)
      rc = 0;
   30830:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   30834:	00000f06 	br	30874 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   30838:	e0bffd17 	ldw	r2,-12(fp)
   3083c:	10c00117 	ldw	r3,4(r2)
   30840:	00a00034 	movhi	r2,32768
   30844:	10bfffc4 	addi	r2,r2,-1
   30848:	18800c26 	beq	r3,r2,3087c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   3084c:	e0bffd17 	ldw	r2,-12(fp)
   30850:	10c00917 	ldw	r3,36(r2)
   30854:	e0bffd17 	ldw	r2,-12(fp)
   30858:	10800117 	ldw	r2,4(r2)
   3085c:	1885803a 	cmpltu	r2,r3,r2
   30860:	10c03fcc 	andi	r3,r2,255
   30864:	e0bfff17 	ldw	r2,-4(fp)
   30868:	10c00015 	stw	r3,0(r2)
      rc = 0;
   3086c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   30870:	00000206 	br	3087c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   30874:	0001883a 	nop
   30878:	00000106 	br	30880 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   3087c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   30880:	e0bffb17 	ldw	r2,-20(fp)
}
   30884:	e037883a 	mov	sp,fp
   30888:	df000017 	ldw	fp,0(sp)
   3088c:	dec00104 	addi	sp,sp,4
   30890:	f800283a 	ret

00030894 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   30894:	defff304 	addi	sp,sp,-52
   30898:	dfc00c15 	stw	ra,48(sp)
   3089c:	df000b15 	stw	fp,44(sp)
   308a0:	df000b04 	addi	fp,sp,44
   308a4:	e13ffc15 	stw	r4,-16(fp)
   308a8:	e17ffd15 	stw	r5,-12(fp)
   308ac:	e1bffe15 	stw	r6,-8(fp)
   308b0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   308b4:	e0bffd17 	ldw	r2,-12(fp)
   308b8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   308bc:	00004706 	br	309dc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   308c0:	e0bffc17 	ldw	r2,-16(fp)
   308c4:	10800a17 	ldw	r2,40(r2)
   308c8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   308cc:	e0bffc17 	ldw	r2,-16(fp)
   308d0:	10800b17 	ldw	r2,44(r2)
   308d4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   308d8:	e0fff717 	ldw	r3,-36(fp)
   308dc:	e0bff817 	ldw	r2,-32(fp)
   308e0:	18800536 	bltu	r3,r2,308f8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   308e4:	e0fff717 	ldw	r3,-36(fp)
   308e8:	e0bff817 	ldw	r2,-32(fp)
   308ec:	1885c83a 	sub	r2,r3,r2
   308f0:	e0bff615 	stw	r2,-40(fp)
   308f4:	00000406 	br	30908 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   308f8:	00c20004 	movi	r3,2048
   308fc:	e0bff817 	ldw	r2,-32(fp)
   30900:	1885c83a 	sub	r2,r3,r2
   30904:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   30908:	e0bff617 	ldw	r2,-40(fp)
   3090c:	10001e26 	beq	r2,zero,30988 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   30910:	e0fffe17 	ldw	r3,-8(fp)
   30914:	e0bff617 	ldw	r2,-40(fp)
   30918:	1880022e 	bgeu	r3,r2,30924 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   3091c:	e0bffe17 	ldw	r2,-8(fp)
   30920:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   30924:	e0bffc17 	ldw	r2,-16(fp)
   30928:	10c00e04 	addi	r3,r2,56
   3092c:	e0bff817 	ldw	r2,-32(fp)
   30930:	1885883a 	add	r2,r3,r2
   30934:	e1bff617 	ldw	r6,-40(fp)
   30938:	100b883a 	mov	r5,r2
   3093c:	e13ff517 	ldw	r4,-44(fp)
   30940:	002ab640 	call	2ab64 <memcpy>
      ptr   += n;
   30944:	e0fff517 	ldw	r3,-44(fp)
   30948:	e0bff617 	ldw	r2,-40(fp)
   3094c:	1885883a 	add	r2,r3,r2
   30950:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   30954:	e0fffe17 	ldw	r3,-8(fp)
   30958:	e0bff617 	ldw	r2,-40(fp)
   3095c:	1885c83a 	sub	r2,r3,r2
   30960:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   30964:	e0fff817 	ldw	r3,-32(fp)
   30968:	e0bff617 	ldw	r2,-40(fp)
   3096c:	1885883a 	add	r2,r3,r2
   30970:	10c1ffcc 	andi	r3,r2,2047
   30974:	e0bffc17 	ldw	r2,-16(fp)
   30978:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   3097c:	e0bffe17 	ldw	r2,-8(fp)
   30980:	00bfcf16 	blt	zero,r2,308c0 <__alt_data_end+0xffff14c0>
   30984:	00000106 	br	3098c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   30988:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   3098c:	e0fff517 	ldw	r3,-44(fp)
   30990:	e0bffd17 	ldw	r2,-12(fp)
   30994:	1880141e 	bne	r3,r2,309e8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   30998:	e0bfff17 	ldw	r2,-4(fp)
   3099c:	1090000c 	andi	r2,r2,16384
   309a0:	1000131e 	bne	r2,zero,309f0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   309a4:	0001883a 	nop
   309a8:	e0bffc17 	ldw	r2,-16(fp)
   309ac:	10c00a17 	ldw	r3,40(r2)
   309b0:	e0bff717 	ldw	r2,-36(fp)
   309b4:	1880051e 	bne	r3,r2,309cc <altera_avalon_jtag_uart_read+0x138>
   309b8:	e0bffc17 	ldw	r2,-16(fp)
   309bc:	10c00917 	ldw	r3,36(r2)
   309c0:	e0bffc17 	ldw	r2,-16(fp)
   309c4:	10800117 	ldw	r2,4(r2)
   309c8:	18bff736 	bltu	r3,r2,309a8 <__alt_data_end+0xffff15a8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   309cc:	e0bffc17 	ldw	r2,-16(fp)
   309d0:	10c00a17 	ldw	r3,40(r2)
   309d4:	e0bff717 	ldw	r2,-36(fp)
   309d8:	18800726 	beq	r3,r2,309f8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   309dc:	e0bffe17 	ldw	r2,-8(fp)
   309e0:	00bfb716 	blt	zero,r2,308c0 <__alt_data_end+0xffff14c0>
   309e4:	00000506 	br	309fc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   309e8:	0001883a 	nop
   309ec:	00000306 	br	309fc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   309f0:	0001883a 	nop
   309f4:	00000106 	br	309fc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   309f8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   309fc:	e0fff517 	ldw	r3,-44(fp)
   30a00:	e0bffd17 	ldw	r2,-12(fp)
   30a04:	18801826 	beq	r3,r2,30a68 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30a08:	0005303a 	rdctl	r2,status
   30a0c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30a10:	e0fffb17 	ldw	r3,-20(fp)
   30a14:	00bfff84 	movi	r2,-2
   30a18:	1884703a 	and	r2,r3,r2
   30a1c:	1001703a 	wrctl	status,r2
  
  return context;
   30a20:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   30a24:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   30a28:	e0bffc17 	ldw	r2,-16(fp)
   30a2c:	10800817 	ldw	r2,32(r2)
   30a30:	10c00054 	ori	r3,r2,1
   30a34:	e0bffc17 	ldw	r2,-16(fp)
   30a38:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   30a3c:	e0bffc17 	ldw	r2,-16(fp)
   30a40:	10800017 	ldw	r2,0(r2)
   30a44:	10800104 	addi	r2,r2,4
   30a48:	1007883a 	mov	r3,r2
   30a4c:	e0bffc17 	ldw	r2,-16(fp)
   30a50:	10800817 	ldw	r2,32(r2)
   30a54:	18800035 	stwio	r2,0(r3)
   30a58:	e0bffa17 	ldw	r2,-24(fp)
   30a5c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30a60:	e0bff917 	ldw	r2,-28(fp)
   30a64:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   30a68:	e0fff517 	ldw	r3,-44(fp)
   30a6c:	e0bffd17 	ldw	r2,-12(fp)
   30a70:	18800426 	beq	r3,r2,30a84 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   30a74:	e0fff517 	ldw	r3,-44(fp)
   30a78:	e0bffd17 	ldw	r2,-12(fp)
   30a7c:	1885c83a 	sub	r2,r3,r2
   30a80:	00000606 	br	30a9c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   30a84:	e0bfff17 	ldw	r2,-4(fp)
   30a88:	1090000c 	andi	r2,r2,16384
   30a8c:	10000226 	beq	r2,zero,30a98 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   30a90:	00bffd44 	movi	r2,-11
   30a94:	00000106 	br	30a9c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   30a98:	00bffec4 	movi	r2,-5
}
   30a9c:	e037883a 	mov	sp,fp
   30aa0:	dfc00117 	ldw	ra,4(sp)
   30aa4:	df000017 	ldw	fp,0(sp)
   30aa8:	dec00204 	addi	sp,sp,8
   30aac:	f800283a 	ret

00030ab0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   30ab0:	defff304 	addi	sp,sp,-52
   30ab4:	dfc00c15 	stw	ra,48(sp)
   30ab8:	df000b15 	stw	fp,44(sp)
   30abc:	df000b04 	addi	fp,sp,44
   30ac0:	e13ffc15 	stw	r4,-16(fp)
   30ac4:	e17ffd15 	stw	r5,-12(fp)
   30ac8:	e1bffe15 	stw	r6,-8(fp)
   30acc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   30ad0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   30ad4:	e0bffd17 	ldw	r2,-12(fp)
   30ad8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   30adc:	00003706 	br	30bbc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   30ae0:	e0bffc17 	ldw	r2,-16(fp)
   30ae4:	10800c17 	ldw	r2,48(r2)
   30ae8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   30aec:	e0bffc17 	ldw	r2,-16(fp)
   30af0:	10800d17 	ldw	r2,52(r2)
   30af4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   30af8:	e0fff917 	ldw	r3,-28(fp)
   30afc:	e0bff517 	ldw	r2,-44(fp)
   30b00:	1880062e 	bgeu	r3,r2,30b1c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   30b04:	e0fff517 	ldw	r3,-44(fp)
   30b08:	e0bff917 	ldw	r2,-28(fp)
   30b0c:	1885c83a 	sub	r2,r3,r2
   30b10:	10bfffc4 	addi	r2,r2,-1
   30b14:	e0bff615 	stw	r2,-40(fp)
   30b18:	00000b06 	br	30b48 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   30b1c:	e0bff517 	ldw	r2,-44(fp)
   30b20:	10000526 	beq	r2,zero,30b38 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   30b24:	00c20004 	movi	r3,2048
   30b28:	e0bff917 	ldw	r2,-28(fp)
   30b2c:	1885c83a 	sub	r2,r3,r2
   30b30:	e0bff615 	stw	r2,-40(fp)
   30b34:	00000406 	br	30b48 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   30b38:	00c1ffc4 	movi	r3,2047
   30b3c:	e0bff917 	ldw	r2,-28(fp)
   30b40:	1885c83a 	sub	r2,r3,r2
   30b44:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   30b48:	e0bff617 	ldw	r2,-40(fp)
   30b4c:	10001e26 	beq	r2,zero,30bc8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   30b50:	e0fffe17 	ldw	r3,-8(fp)
   30b54:	e0bff617 	ldw	r2,-40(fp)
   30b58:	1880022e 	bgeu	r3,r2,30b64 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   30b5c:	e0bffe17 	ldw	r2,-8(fp)
   30b60:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   30b64:	e0bffc17 	ldw	r2,-16(fp)
   30b68:	10c20e04 	addi	r3,r2,2104
   30b6c:	e0bff917 	ldw	r2,-28(fp)
   30b70:	1885883a 	add	r2,r3,r2
   30b74:	e1bff617 	ldw	r6,-40(fp)
   30b78:	e17ffd17 	ldw	r5,-12(fp)
   30b7c:	1009883a 	mov	r4,r2
   30b80:	002ab640 	call	2ab64 <memcpy>
      ptr   += n;
   30b84:	e0fffd17 	ldw	r3,-12(fp)
   30b88:	e0bff617 	ldw	r2,-40(fp)
   30b8c:	1885883a 	add	r2,r3,r2
   30b90:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   30b94:	e0fffe17 	ldw	r3,-8(fp)
   30b98:	e0bff617 	ldw	r2,-40(fp)
   30b9c:	1885c83a 	sub	r2,r3,r2
   30ba0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   30ba4:	e0fff917 	ldw	r3,-28(fp)
   30ba8:	e0bff617 	ldw	r2,-40(fp)
   30bac:	1885883a 	add	r2,r3,r2
   30bb0:	10c1ffcc 	andi	r3,r2,2047
   30bb4:	e0bffc17 	ldw	r2,-16(fp)
   30bb8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   30bbc:	e0bffe17 	ldw	r2,-8(fp)
   30bc0:	00bfc716 	blt	zero,r2,30ae0 <__alt_data_end+0xffff16e0>
   30bc4:	00000106 	br	30bcc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   30bc8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30bcc:	0005303a 	rdctl	r2,status
   30bd0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30bd4:	e0fffb17 	ldw	r3,-20(fp)
   30bd8:	00bfff84 	movi	r2,-2
   30bdc:	1884703a 	and	r2,r3,r2
   30be0:	1001703a 	wrctl	status,r2
  
  return context;
   30be4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   30be8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   30bec:	e0bffc17 	ldw	r2,-16(fp)
   30bf0:	10800817 	ldw	r2,32(r2)
   30bf4:	10c00094 	ori	r3,r2,2
   30bf8:	e0bffc17 	ldw	r2,-16(fp)
   30bfc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   30c00:	e0bffc17 	ldw	r2,-16(fp)
   30c04:	10800017 	ldw	r2,0(r2)
   30c08:	10800104 	addi	r2,r2,4
   30c0c:	1007883a 	mov	r3,r2
   30c10:	e0bffc17 	ldw	r2,-16(fp)
   30c14:	10800817 	ldw	r2,32(r2)
   30c18:	18800035 	stwio	r2,0(r3)
   30c1c:	e0bffa17 	ldw	r2,-24(fp)
   30c20:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30c24:	e0bff817 	ldw	r2,-32(fp)
   30c28:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   30c2c:	e0bffe17 	ldw	r2,-8(fp)
   30c30:	0080100e 	bge	zero,r2,30c74 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   30c34:	e0bfff17 	ldw	r2,-4(fp)
   30c38:	1090000c 	andi	r2,r2,16384
   30c3c:	1000101e 	bne	r2,zero,30c80 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   30c40:	0001883a 	nop
   30c44:	e0bffc17 	ldw	r2,-16(fp)
   30c48:	10c00d17 	ldw	r3,52(r2)
   30c4c:	e0bff517 	ldw	r2,-44(fp)
   30c50:	1880051e 	bne	r3,r2,30c68 <altera_avalon_jtag_uart_write+0x1b8>
   30c54:	e0bffc17 	ldw	r2,-16(fp)
   30c58:	10c00917 	ldw	r3,36(r2)
   30c5c:	e0bffc17 	ldw	r2,-16(fp)
   30c60:	10800117 	ldw	r2,4(r2)
   30c64:	18bff736 	bltu	r3,r2,30c44 <__alt_data_end+0xffff1844>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   30c68:	e0bffc17 	ldw	r2,-16(fp)
   30c6c:	10800917 	ldw	r2,36(r2)
   30c70:	1000051e 	bne	r2,zero,30c88 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   30c74:	e0bffe17 	ldw	r2,-8(fp)
   30c78:	00bfd016 	blt	zero,r2,30bbc <__alt_data_end+0xffff17bc>
   30c7c:	00000306 	br	30c8c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   30c80:	0001883a 	nop
   30c84:	00000106 	br	30c8c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   30c88:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   30c8c:	e0fffd17 	ldw	r3,-12(fp)
   30c90:	e0bff717 	ldw	r2,-36(fp)
   30c94:	18800426 	beq	r3,r2,30ca8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   30c98:	e0fffd17 	ldw	r3,-12(fp)
   30c9c:	e0bff717 	ldw	r2,-36(fp)
   30ca0:	1885c83a 	sub	r2,r3,r2
   30ca4:	00000606 	br	30cc0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   30ca8:	e0bfff17 	ldw	r2,-4(fp)
   30cac:	1090000c 	andi	r2,r2,16384
   30cb0:	10000226 	beq	r2,zero,30cbc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   30cb4:	00bffd44 	movi	r2,-11
   30cb8:	00000106 	br	30cc0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   30cbc:	00bffec4 	movi	r2,-5
}
   30cc0:	e037883a 	mov	sp,fp
   30cc4:	dfc00117 	ldw	ra,4(sp)
   30cc8:	df000017 	ldw	fp,0(sp)
   30ccc:	dec00204 	addi	sp,sp,8
   30cd0:	f800283a 	ret

00030cd4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   30cd4:	defffa04 	addi	sp,sp,-24
   30cd8:	dfc00515 	stw	ra,20(sp)
   30cdc:	df000415 	stw	fp,16(sp)
   30ce0:	df000404 	addi	fp,sp,16
   30ce4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   30ce8:	0007883a 	mov	r3,zero
   30cec:	e0bfff17 	ldw	r2,-4(fp)
   30cf0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   30cf4:	e0bfff17 	ldw	r2,-4(fp)
   30cf8:	10800104 	addi	r2,r2,4
   30cfc:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30d00:	0005303a 	rdctl	r2,status
   30d04:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30d08:	e0fffd17 	ldw	r3,-12(fp)
   30d0c:	00bfff84 	movi	r2,-2
   30d10:	1884703a 	and	r2,r3,r2
   30d14:	1001703a 	wrctl	status,r2
  
  return context;
   30d18:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   30d1c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   30d20:	00319380 	call	31938 <alt_tick>
   30d24:	e0bffc17 	ldw	r2,-16(fp)
   30d28:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30d2c:	e0bffe17 	ldw	r2,-8(fp)
   30d30:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   30d34:	0001883a 	nop
   30d38:	e037883a 	mov	sp,fp
   30d3c:	dfc00117 	ldw	ra,4(sp)
   30d40:	df000017 	ldw	fp,0(sp)
   30d44:	dec00204 	addi	sp,sp,8
   30d48:	f800283a 	ret

00030d4c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   30d4c:	defff804 	addi	sp,sp,-32
   30d50:	dfc00715 	stw	ra,28(sp)
   30d54:	df000615 	stw	fp,24(sp)
   30d58:	df000604 	addi	fp,sp,24
   30d5c:	e13ffc15 	stw	r4,-16(fp)
   30d60:	e17ffd15 	stw	r5,-12(fp)
   30d64:	e1bffe15 	stw	r6,-8(fp)
   30d68:	e1ffff15 	stw	r7,-4(fp)
   30d6c:	e0bfff17 	ldw	r2,-4(fp)
   30d70:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   30d74:	d0a6e517 	ldw	r2,-25708(gp)
   30d78:	1000021e 	bne	r2,zero,30d84 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   30d7c:	e0bffb17 	ldw	r2,-20(fp)
   30d80:	d0a6e515 	stw	r2,-25708(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   30d84:	e0bffc17 	ldw	r2,-16(fp)
   30d88:	10800104 	addi	r2,r2,4
   30d8c:	00c001c4 	movi	r3,7
   30d90:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   30d94:	d8000015 	stw	zero,0(sp)
   30d98:	e1fffc17 	ldw	r7,-16(fp)
   30d9c:	018000f4 	movhi	r6,3
   30da0:	31833504 	addi	r6,r6,3284
   30da4:	e17ffe17 	ldw	r5,-8(fp)
   30da8:	e13ffd17 	ldw	r4,-12(fp)
   30dac:	00312680 	call	31268 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   30db0:	0001883a 	nop
   30db4:	e037883a 	mov	sp,fp
   30db8:	dfc00117 	ldw	ra,4(sp)
   30dbc:	df000017 	ldw	fp,0(sp)
   30dc0:	dec00204 	addi	sp,sp,8
   30dc4:	f800283a 	ret

00030dc8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   30dc8:	defff504 	addi	sp,sp,-44
   30dcc:	df000a15 	stw	fp,40(sp)
   30dd0:	df000a04 	addi	fp,sp,40
   30dd4:	e13ffc15 	stw	r4,-16(fp)
   30dd8:	e17ffd15 	stw	r5,-12(fp)
   30ddc:	e1bffe15 	stw	r6,-8(fp)
   30de0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   30de4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   30de8:	d0a6e517 	ldw	r2,-25708(gp)
  
  if (alt_ticks_per_second ())
   30dec:	10003c26 	beq	r2,zero,30ee0 <alt_alarm_start+0x118>
  {
    if (alarm)
   30df0:	e0bffc17 	ldw	r2,-16(fp)
   30df4:	10003826 	beq	r2,zero,30ed8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   30df8:	e0bffc17 	ldw	r2,-16(fp)
   30dfc:	e0fffe17 	ldw	r3,-8(fp)
   30e00:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   30e04:	e0bffc17 	ldw	r2,-16(fp)
   30e08:	e0ffff17 	ldw	r3,-4(fp)
   30e0c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   30e10:	0005303a 	rdctl	r2,status
   30e14:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30e18:	e0fff917 	ldw	r3,-28(fp)
   30e1c:	00bfff84 	movi	r2,-2
   30e20:	1884703a 	and	r2,r3,r2
   30e24:	1001703a 	wrctl	status,r2
  
  return context;
   30e28:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   30e2c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   30e30:	d0a6e617 	ldw	r2,-25704(gp)
      
      current_nticks = alt_nticks();
   30e34:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   30e38:	e0fffd17 	ldw	r3,-12(fp)
   30e3c:	e0bff617 	ldw	r2,-40(fp)
   30e40:	1885883a 	add	r2,r3,r2
   30e44:	10c00044 	addi	r3,r2,1
   30e48:	e0bffc17 	ldw	r2,-16(fp)
   30e4c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   30e50:	e0bffc17 	ldw	r2,-16(fp)
   30e54:	10c00217 	ldw	r3,8(r2)
   30e58:	e0bff617 	ldw	r2,-40(fp)
   30e5c:	1880042e 	bgeu	r3,r2,30e70 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   30e60:	e0bffc17 	ldw	r2,-16(fp)
   30e64:	00c00044 	movi	r3,1
   30e68:	10c00405 	stb	r3,16(r2)
   30e6c:	00000206 	br	30e78 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   30e70:	e0bffc17 	ldw	r2,-16(fp)
   30e74:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   30e78:	e0bffc17 	ldw	r2,-16(fp)
   30e7c:	d0e00f04 	addi	r3,gp,-32708
   30e80:	e0fffa15 	stw	r3,-24(fp)
   30e84:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   30e88:	e0bffb17 	ldw	r2,-20(fp)
   30e8c:	e0fffa17 	ldw	r3,-24(fp)
   30e90:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   30e94:	e0bffa17 	ldw	r2,-24(fp)
   30e98:	10c00017 	ldw	r3,0(r2)
   30e9c:	e0bffb17 	ldw	r2,-20(fp)
   30ea0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   30ea4:	e0bffa17 	ldw	r2,-24(fp)
   30ea8:	10800017 	ldw	r2,0(r2)
   30eac:	e0fffb17 	ldw	r3,-20(fp)
   30eb0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   30eb4:	e0bffa17 	ldw	r2,-24(fp)
   30eb8:	e0fffb17 	ldw	r3,-20(fp)
   30ebc:	10c00015 	stw	r3,0(r2)
   30ec0:	e0bff817 	ldw	r2,-32(fp)
   30ec4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   30ec8:	e0bff717 	ldw	r2,-36(fp)
   30ecc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   30ed0:	0005883a 	mov	r2,zero
   30ed4:	00000306 	br	30ee4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   30ed8:	00bffa84 	movi	r2,-22
   30edc:	00000106 	br	30ee4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   30ee0:	00bfde84 	movi	r2,-134
  }
}
   30ee4:	e037883a 	mov	sp,fp
   30ee8:	df000017 	ldw	fp,0(sp)
   30eec:	dec00104 	addi	sp,sp,4
   30ef0:	f800283a 	ret

00030ef4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   30ef4:	defffa04 	addi	sp,sp,-24
   30ef8:	dfc00515 	stw	ra,20(sp)
   30efc:	df000415 	stw	fp,16(sp)
   30f00:	df000404 	addi	fp,sp,16
   30f04:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   30f08:	008000c4 	movi	r2,3
   30f0c:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   30f10:	e0fffd17 	ldw	r3,-12(fp)
   30f14:	008003f4 	movhi	r2,15
   30f18:	10909004 	addi	r2,r2,16960
   30f1c:	1885383a 	mul	r2,r3,r2
   30f20:	100b883a 	mov	r5,r2
   30f24:	0100bef4 	movhi	r4,763
   30f28:	213c2004 	addi	r4,r4,-3968
   30f2c:	0021abc0 	call	21abc <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   30f30:	100b883a 	mov	r5,r2
   30f34:	01200034 	movhi	r4,32768
   30f38:	213fffc4 	addi	r4,r4,-1
   30f3c:	0021abc0 	call	21abc <__udivsi3>
   30f40:	100b883a 	mov	r5,r2
   30f44:	e13fff17 	ldw	r4,-4(fp)
   30f48:	0021abc0 	call	21abc <__udivsi3>
   30f4c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   30f50:	e0bffe17 	ldw	r2,-8(fp)
   30f54:	10002a26 	beq	r2,zero,31000 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   30f58:	e03ffc15 	stw	zero,-16(fp)
   30f5c:	00001706 	br	30fbc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   30f60:	00a00034 	movhi	r2,32768
   30f64:	10bfffc4 	addi	r2,r2,-1
   30f68:	10bfffc4 	addi	r2,r2,-1
   30f6c:	103ffe1e 	bne	r2,zero,30f68 <__alt_data_end+0xffff1b68>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   30f70:	e0fffd17 	ldw	r3,-12(fp)
   30f74:	008003f4 	movhi	r2,15
   30f78:	10909004 	addi	r2,r2,16960
   30f7c:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   30f80:	100b883a 	mov	r5,r2
   30f84:	0100bef4 	movhi	r4,763
   30f88:	213c2004 	addi	r4,r4,-3968
   30f8c:	0021abc0 	call	21abc <__udivsi3>
   30f90:	100b883a 	mov	r5,r2
   30f94:	01200034 	movhi	r4,32768
   30f98:	213fffc4 	addi	r4,r4,-1
   30f9c:	0021abc0 	call	21abc <__udivsi3>
   30fa0:	1007883a 	mov	r3,r2
   30fa4:	e0bfff17 	ldw	r2,-4(fp)
   30fa8:	10c5c83a 	sub	r2,r2,r3
   30fac:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   30fb0:	e0bffc17 	ldw	r2,-16(fp)
   30fb4:	10800044 	addi	r2,r2,1
   30fb8:	e0bffc15 	stw	r2,-16(fp)
   30fbc:	e0fffc17 	ldw	r3,-16(fp)
   30fc0:	e0bffe17 	ldw	r2,-8(fp)
   30fc4:	18bfe616 	blt	r3,r2,30f60 <__alt_data_end+0xffff1b60>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   30fc8:	e0fffd17 	ldw	r3,-12(fp)
   30fcc:	008003f4 	movhi	r2,15
   30fd0:	10909004 	addi	r2,r2,16960
   30fd4:	1885383a 	mul	r2,r3,r2
   30fd8:	100b883a 	mov	r5,r2
   30fdc:	0100bef4 	movhi	r4,763
   30fe0:	213c2004 	addi	r4,r4,-3968
   30fe4:	0021abc0 	call	21abc <__udivsi3>
   30fe8:	1007883a 	mov	r3,r2
   30fec:	e0bfff17 	ldw	r2,-4(fp)
   30ff0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   30ff4:	10bfffc4 	addi	r2,r2,-1
   30ff8:	103ffe1e 	bne	r2,zero,30ff4 <__alt_data_end+0xffff1bf4>
   30ffc:	00000d06 	br	31034 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   31000:	e0fffd17 	ldw	r3,-12(fp)
   31004:	008003f4 	movhi	r2,15
   31008:	10909004 	addi	r2,r2,16960
   3100c:	1885383a 	mul	r2,r3,r2
   31010:	100b883a 	mov	r5,r2
   31014:	0100bef4 	movhi	r4,763
   31018:	213c2004 	addi	r4,r4,-3968
   3101c:	0021abc0 	call	21abc <__udivsi3>
   31020:	1007883a 	mov	r3,r2
   31024:	e0bfff17 	ldw	r2,-4(fp)
   31028:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   3102c:	10bfffc4 	addi	r2,r2,-1
   31030:	00bffe16 	blt	zero,r2,3102c <__alt_data_end+0xffff1c2c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   31034:	0005883a 	mov	r2,zero
}
   31038:	e037883a 	mov	sp,fp
   3103c:	dfc00117 	ldw	ra,4(sp)
   31040:	df000017 	ldw	fp,0(sp)
   31044:	dec00204 	addi	sp,sp,8
   31048:	f800283a 	ret

0003104c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   3104c:	defffe04 	addi	sp,sp,-8
   31050:	df000115 	stw	fp,4(sp)
   31054:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   31058:	e03fff15 	stw	zero,-4(fp)
   3105c:	00000506 	br	31074 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   31060:	e0bfff17 	ldw	r2,-4(fp)
   31064:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   31068:	e0bfff17 	ldw	r2,-4(fp)
   3106c:	10800804 	addi	r2,r2,32
   31070:	e0bfff15 	stw	r2,-4(fp)
   31074:	e0bfff17 	ldw	r2,-4(fp)
   31078:	10820030 	cmpltui	r2,r2,2048
   3107c:	103ff81e 	bne	r2,zero,31060 <__alt_data_end+0xffff1c60>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   31080:	0001883a 	nop
   31084:	e037883a 	mov	sp,fp
   31088:	df000017 	ldw	fp,0(sp)
   3108c:	dec00104 	addi	sp,sp,4
   31090:	f800283a 	ret

00031094 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31094:	defffe04 	addi	sp,sp,-8
   31098:	dfc00115 	stw	ra,4(sp)
   3109c:	df000015 	stw	fp,0(sp)
   310a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   310a4:	d0a00c17 	ldw	r2,-32720(gp)
   310a8:	10000326 	beq	r2,zero,310b8 <alt_get_errno+0x24>
   310ac:	d0a00c17 	ldw	r2,-32720(gp)
   310b0:	103ee83a 	callr	r2
   310b4:	00000106 	br	310bc <alt_get_errno+0x28>
   310b8:	d0a6e004 	addi	r2,gp,-25728
}
   310bc:	e037883a 	mov	sp,fp
   310c0:	dfc00117 	ldw	ra,4(sp)
   310c4:	df000017 	ldw	fp,0(sp)
   310c8:	dec00204 	addi	sp,sp,8
   310cc:	f800283a 	ret

000310d0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   310d0:	defffa04 	addi	sp,sp,-24
   310d4:	dfc00515 	stw	ra,20(sp)
   310d8:	df000415 	stw	fp,16(sp)
   310dc:	df000404 	addi	fp,sp,16
   310e0:	e13ffe15 	stw	r4,-8(fp)
   310e4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   310e8:	e0bffe17 	ldw	r2,-8(fp)
   310ec:	10000326 	beq	r2,zero,310fc <alt_dev_llist_insert+0x2c>
   310f0:	e0bffe17 	ldw	r2,-8(fp)
   310f4:	10800217 	ldw	r2,8(r2)
   310f8:	1000061e 	bne	r2,zero,31114 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   310fc:	00310940 	call	31094 <alt_get_errno>
   31100:	1007883a 	mov	r3,r2
   31104:	00800584 	movi	r2,22
   31108:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   3110c:	00bffa84 	movi	r2,-22
   31110:	00001306 	br	31160 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   31114:	e0bffe17 	ldw	r2,-8(fp)
   31118:	e0ffff17 	ldw	r3,-4(fp)
   3111c:	e0fffc15 	stw	r3,-16(fp)
   31120:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   31124:	e0bffd17 	ldw	r2,-12(fp)
   31128:	e0fffc17 	ldw	r3,-16(fp)
   3112c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   31130:	e0bffc17 	ldw	r2,-16(fp)
   31134:	10c00017 	ldw	r3,0(r2)
   31138:	e0bffd17 	ldw	r2,-12(fp)
   3113c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   31140:	e0bffc17 	ldw	r2,-16(fp)
   31144:	10800017 	ldw	r2,0(r2)
   31148:	e0fffd17 	ldw	r3,-12(fp)
   3114c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   31150:	e0bffc17 	ldw	r2,-16(fp)
   31154:	e0fffd17 	ldw	r3,-12(fp)
   31158:	10c00015 	stw	r3,0(r2)

  return 0;  
   3115c:	0005883a 	mov	r2,zero
}
   31160:	e037883a 	mov	sp,fp
   31164:	dfc00117 	ldw	ra,4(sp)
   31168:	df000017 	ldw	fp,0(sp)
   3116c:	dec00204 	addi	sp,sp,8
   31170:	f800283a 	ret

00031174 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   31174:	defffd04 	addi	sp,sp,-12
   31178:	dfc00215 	stw	ra,8(sp)
   3117c:	df000115 	stw	fp,4(sp)
   31180:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   31184:	008000f4 	movhi	r2,3
   31188:	10885704 	addi	r2,r2,8540
   3118c:	e0bfff15 	stw	r2,-4(fp)
   31190:	00000606 	br	311ac <_do_ctors+0x38>
        (*ctor) (); 
   31194:	e0bfff17 	ldw	r2,-4(fp)
   31198:	10800017 	ldw	r2,0(r2)
   3119c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   311a0:	e0bfff17 	ldw	r2,-4(fp)
   311a4:	10bfff04 	addi	r2,r2,-4
   311a8:	e0bfff15 	stw	r2,-4(fp)
   311ac:	e0ffff17 	ldw	r3,-4(fp)
   311b0:	008000f4 	movhi	r2,3
   311b4:	10885804 	addi	r2,r2,8544
   311b8:	18bff62e 	bgeu	r3,r2,31194 <__alt_data_end+0xffff1d94>
        (*ctor) (); 
}
   311bc:	0001883a 	nop
   311c0:	e037883a 	mov	sp,fp
   311c4:	dfc00117 	ldw	ra,4(sp)
   311c8:	df000017 	ldw	fp,0(sp)
   311cc:	dec00204 	addi	sp,sp,8
   311d0:	f800283a 	ret

000311d4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   311d4:	defffd04 	addi	sp,sp,-12
   311d8:	dfc00215 	stw	ra,8(sp)
   311dc:	df000115 	stw	fp,4(sp)
   311e0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   311e4:	008000f4 	movhi	r2,3
   311e8:	10885704 	addi	r2,r2,8540
   311ec:	e0bfff15 	stw	r2,-4(fp)
   311f0:	00000606 	br	3120c <_do_dtors+0x38>
        (*dtor) (); 
   311f4:	e0bfff17 	ldw	r2,-4(fp)
   311f8:	10800017 	ldw	r2,0(r2)
   311fc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   31200:	e0bfff17 	ldw	r2,-4(fp)
   31204:	10bfff04 	addi	r2,r2,-4
   31208:	e0bfff15 	stw	r2,-4(fp)
   3120c:	e0ffff17 	ldw	r3,-4(fp)
   31210:	008000f4 	movhi	r2,3
   31214:	10885804 	addi	r2,r2,8544
   31218:	18bff62e 	bgeu	r3,r2,311f4 <__alt_data_end+0xffff1df4>
        (*dtor) (); 
}
   3121c:	0001883a 	nop
   31220:	e037883a 	mov	sp,fp
   31224:	dfc00117 	ldw	ra,4(sp)
   31228:	df000017 	ldw	fp,0(sp)
   3122c:	dec00204 	addi	sp,sp,8
   31230:	f800283a 	ret

00031234 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   31234:	defffe04 	addi	sp,sp,-8
   31238:	dfc00115 	stw	ra,4(sp)
   3123c:	df000015 	stw	fp,0(sp)
   31240:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   31244:	01440004 	movi	r5,4096
   31248:	0009883a 	mov	r4,zero
   3124c:	0031ca00 	call	31ca0 <alt_icache_flush>
#endif
}
   31250:	0001883a 	nop
   31254:	e037883a 	mov	sp,fp
   31258:	dfc00117 	ldw	ra,4(sp)
   3125c:	df000017 	ldw	fp,0(sp)
   31260:	dec00204 	addi	sp,sp,8
   31264:	f800283a 	ret

00031268 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   31268:	defff904 	addi	sp,sp,-28
   3126c:	dfc00615 	stw	ra,24(sp)
   31270:	df000515 	stw	fp,20(sp)
   31274:	df000504 	addi	fp,sp,20
   31278:	e13ffc15 	stw	r4,-16(fp)
   3127c:	e17ffd15 	stw	r5,-12(fp)
   31280:	e1bffe15 	stw	r6,-8(fp)
   31284:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   31288:	e0800217 	ldw	r2,8(fp)
   3128c:	d8800015 	stw	r2,0(sp)
   31290:	e1ffff17 	ldw	r7,-4(fp)
   31294:	e1bffe17 	ldw	r6,-8(fp)
   31298:	e17ffd17 	ldw	r5,-12(fp)
   3129c:	e13ffc17 	ldw	r4,-16(fp)
   312a0:	00314180 	call	31418 <alt_iic_isr_register>
}  
   312a4:	e037883a 	mov	sp,fp
   312a8:	dfc00117 	ldw	ra,4(sp)
   312ac:	df000017 	ldw	fp,0(sp)
   312b0:	dec00204 	addi	sp,sp,8
   312b4:	f800283a 	ret

000312b8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   312b8:	defff904 	addi	sp,sp,-28
   312bc:	df000615 	stw	fp,24(sp)
   312c0:	df000604 	addi	fp,sp,24
   312c4:	e13ffe15 	stw	r4,-8(fp)
   312c8:	e17fff15 	stw	r5,-4(fp)
   312cc:	e0bfff17 	ldw	r2,-4(fp)
   312d0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   312d4:	0005303a 	rdctl	r2,status
   312d8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   312dc:	e0fffb17 	ldw	r3,-20(fp)
   312e0:	00bfff84 	movi	r2,-2
   312e4:	1884703a 	and	r2,r3,r2
   312e8:	1001703a 	wrctl	status,r2
  
  return context;
   312ec:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   312f0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   312f4:	00c00044 	movi	r3,1
   312f8:	e0bffa17 	ldw	r2,-24(fp)
   312fc:	1884983a 	sll	r2,r3,r2
   31300:	1007883a 	mov	r3,r2
   31304:	d0a6e417 	ldw	r2,-25712(gp)
   31308:	1884b03a 	or	r2,r3,r2
   3130c:	d0a6e415 	stw	r2,-25712(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   31310:	d0a6e417 	ldw	r2,-25712(gp)
   31314:	100170fa 	wrctl	ienable,r2
   31318:	e0bffc17 	ldw	r2,-16(fp)
   3131c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31320:	e0bffd17 	ldw	r2,-12(fp)
   31324:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   31328:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   3132c:	0001883a 	nop
}
   31330:	e037883a 	mov	sp,fp
   31334:	df000017 	ldw	fp,0(sp)
   31338:	dec00104 	addi	sp,sp,4
   3133c:	f800283a 	ret

00031340 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   31340:	defff904 	addi	sp,sp,-28
   31344:	df000615 	stw	fp,24(sp)
   31348:	df000604 	addi	fp,sp,24
   3134c:	e13ffe15 	stw	r4,-8(fp)
   31350:	e17fff15 	stw	r5,-4(fp)
   31354:	e0bfff17 	ldw	r2,-4(fp)
   31358:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3135c:	0005303a 	rdctl	r2,status
   31360:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31364:	e0fffb17 	ldw	r3,-20(fp)
   31368:	00bfff84 	movi	r2,-2
   3136c:	1884703a 	and	r2,r3,r2
   31370:	1001703a 	wrctl	status,r2
  
  return context;
   31374:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   31378:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   3137c:	00c00044 	movi	r3,1
   31380:	e0bffa17 	ldw	r2,-24(fp)
   31384:	1884983a 	sll	r2,r3,r2
   31388:	0084303a 	nor	r2,zero,r2
   3138c:	1007883a 	mov	r3,r2
   31390:	d0a6e417 	ldw	r2,-25712(gp)
   31394:	1884703a 	and	r2,r3,r2
   31398:	d0a6e415 	stw	r2,-25712(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3139c:	d0a6e417 	ldw	r2,-25712(gp)
   313a0:	100170fa 	wrctl	ienable,r2
   313a4:	e0bffc17 	ldw	r2,-16(fp)
   313a8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   313ac:	e0bffd17 	ldw	r2,-12(fp)
   313b0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   313b4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   313b8:	0001883a 	nop
}
   313bc:	e037883a 	mov	sp,fp
   313c0:	df000017 	ldw	fp,0(sp)
   313c4:	dec00104 	addi	sp,sp,4
   313c8:	f800283a 	ret

000313cc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   313cc:	defffc04 	addi	sp,sp,-16
   313d0:	df000315 	stw	fp,12(sp)
   313d4:	df000304 	addi	fp,sp,12
   313d8:	e13ffe15 	stw	r4,-8(fp)
   313dc:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   313e0:	000530fa 	rdctl	r2,ienable
   313e4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   313e8:	00c00044 	movi	r3,1
   313ec:	e0bfff17 	ldw	r2,-4(fp)
   313f0:	1884983a 	sll	r2,r3,r2
   313f4:	1007883a 	mov	r3,r2
   313f8:	e0bffd17 	ldw	r2,-12(fp)
   313fc:	1884703a 	and	r2,r3,r2
   31400:	1004c03a 	cmpne	r2,r2,zero
   31404:	10803fcc 	andi	r2,r2,255
}
   31408:	e037883a 	mov	sp,fp
   3140c:	df000017 	ldw	fp,0(sp)
   31410:	dec00104 	addi	sp,sp,4
   31414:	f800283a 	ret

00031418 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   31418:	defff504 	addi	sp,sp,-44
   3141c:	dfc00a15 	stw	ra,40(sp)
   31420:	df000915 	stw	fp,36(sp)
   31424:	df000904 	addi	fp,sp,36
   31428:	e13ffc15 	stw	r4,-16(fp)
   3142c:	e17ffd15 	stw	r5,-12(fp)
   31430:	e1bffe15 	stw	r6,-8(fp)
   31434:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   31438:	00bffa84 	movi	r2,-22
   3143c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   31440:	e0bffd17 	ldw	r2,-12(fp)
   31444:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   31448:	e0bff817 	ldw	r2,-32(fp)
   3144c:	10800808 	cmpgei	r2,r2,32
   31450:	1000271e 	bne	r2,zero,314f0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31454:	0005303a 	rdctl	r2,status
   31458:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3145c:	e0fffb17 	ldw	r3,-20(fp)
   31460:	00bfff84 	movi	r2,-2
   31464:	1884703a 	and	r2,r3,r2
   31468:	1001703a 	wrctl	status,r2
  
  return context;
   3146c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   31470:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   31474:	008000f4 	movhi	r2,3
   31478:	10971d04 	addi	r2,r2,23668
   3147c:	e0fff817 	ldw	r3,-32(fp)
   31480:	180690fa 	slli	r3,r3,3
   31484:	10c5883a 	add	r2,r2,r3
   31488:	e0fffe17 	ldw	r3,-8(fp)
   3148c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   31490:	008000f4 	movhi	r2,3
   31494:	10971d04 	addi	r2,r2,23668
   31498:	e0fff817 	ldw	r3,-32(fp)
   3149c:	180690fa 	slli	r3,r3,3
   314a0:	10c5883a 	add	r2,r2,r3
   314a4:	10800104 	addi	r2,r2,4
   314a8:	e0ffff17 	ldw	r3,-4(fp)
   314ac:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   314b0:	e0bffe17 	ldw	r2,-8(fp)
   314b4:	10000526 	beq	r2,zero,314cc <alt_iic_isr_register+0xb4>
   314b8:	e0bff817 	ldw	r2,-32(fp)
   314bc:	100b883a 	mov	r5,r2
   314c0:	e13ffc17 	ldw	r4,-16(fp)
   314c4:	00312b80 	call	312b8 <alt_ic_irq_enable>
   314c8:	00000406 	br	314dc <alt_iic_isr_register+0xc4>
   314cc:	e0bff817 	ldw	r2,-32(fp)
   314d0:	100b883a 	mov	r5,r2
   314d4:	e13ffc17 	ldw	r4,-16(fp)
   314d8:	00313400 	call	31340 <alt_ic_irq_disable>
   314dc:	e0bff715 	stw	r2,-36(fp)
   314e0:	e0bffa17 	ldw	r2,-24(fp)
   314e4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   314e8:	e0bff917 	ldw	r2,-28(fp)
   314ec:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   314f0:	e0bff717 	ldw	r2,-36(fp)
}
   314f4:	e037883a 	mov	sp,fp
   314f8:	dfc00117 	ldw	ra,4(sp)
   314fc:	df000017 	ldw	fp,0(sp)
   31500:	dec00204 	addi	sp,sp,8
   31504:	f800283a 	ret

00031508 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   31508:	defff904 	addi	sp,sp,-28
   3150c:	dfc00615 	stw	ra,24(sp)
   31510:	df000515 	stw	fp,20(sp)
   31514:	df000504 	addi	fp,sp,20
   31518:	e13ffc15 	stw	r4,-16(fp)
   3151c:	e17ffd15 	stw	r5,-12(fp)
   31520:	e1bffe15 	stw	r6,-8(fp)
   31524:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   31528:	e1bfff17 	ldw	r6,-4(fp)
   3152c:	e17ffe17 	ldw	r5,-8(fp)
   31530:	e13ffd17 	ldw	r4,-12(fp)
   31534:	00317480 	call	31748 <open>
   31538:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   3153c:	e0bffb17 	ldw	r2,-20(fp)
   31540:	10001c16 	blt	r2,zero,315b4 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   31544:	008000f4 	movhi	r2,3
   31548:	108b9904 	addi	r2,r2,11876
   3154c:	e0fffb17 	ldw	r3,-20(fp)
   31550:	18c00324 	muli	r3,r3,12
   31554:	10c5883a 	add	r2,r2,r3
   31558:	10c00017 	ldw	r3,0(r2)
   3155c:	e0bffc17 	ldw	r2,-16(fp)
   31560:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   31564:	008000f4 	movhi	r2,3
   31568:	108b9904 	addi	r2,r2,11876
   3156c:	e0fffb17 	ldw	r3,-20(fp)
   31570:	18c00324 	muli	r3,r3,12
   31574:	10c5883a 	add	r2,r2,r3
   31578:	10800104 	addi	r2,r2,4
   3157c:	10c00017 	ldw	r3,0(r2)
   31580:	e0bffc17 	ldw	r2,-16(fp)
   31584:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   31588:	008000f4 	movhi	r2,3
   3158c:	108b9904 	addi	r2,r2,11876
   31590:	e0fffb17 	ldw	r3,-20(fp)
   31594:	18c00324 	muli	r3,r3,12
   31598:	10c5883a 	add	r2,r2,r3
   3159c:	10800204 	addi	r2,r2,8
   315a0:	10c00017 	ldw	r3,0(r2)
   315a4:	e0bffc17 	ldw	r2,-16(fp)
   315a8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   315ac:	e13ffb17 	ldw	r4,-20(fp)
   315b0:	002ff1c0 	call	2ff1c <alt_release_fd>
  }
} 
   315b4:	0001883a 	nop
   315b8:	e037883a 	mov	sp,fp
   315bc:	dfc00117 	ldw	ra,4(sp)
   315c0:	df000017 	ldw	fp,0(sp)
   315c4:	dec00204 	addi	sp,sp,8
   315c8:	f800283a 	ret

000315cc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   315cc:	defffb04 	addi	sp,sp,-20
   315d0:	dfc00415 	stw	ra,16(sp)
   315d4:	df000315 	stw	fp,12(sp)
   315d8:	df000304 	addi	fp,sp,12
   315dc:	e13ffd15 	stw	r4,-12(fp)
   315e0:	e17ffe15 	stw	r5,-8(fp)
   315e4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   315e8:	01c07fc4 	movi	r7,511
   315ec:	01800044 	movi	r6,1
   315f0:	e17ffd17 	ldw	r5,-12(fp)
   315f4:	010000f4 	movhi	r4,3
   315f8:	210b9c04 	addi	r4,r4,11888
   315fc:	00315080 	call	31508 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   31600:	01c07fc4 	movi	r7,511
   31604:	000d883a 	mov	r6,zero
   31608:	e17ffe17 	ldw	r5,-8(fp)
   3160c:	010000f4 	movhi	r4,3
   31610:	210b9904 	addi	r4,r4,11876
   31614:	00315080 	call	31508 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   31618:	01c07fc4 	movi	r7,511
   3161c:	01800044 	movi	r6,1
   31620:	e17fff17 	ldw	r5,-4(fp)
   31624:	010000f4 	movhi	r4,3
   31628:	210b9f04 	addi	r4,r4,11900
   3162c:	00315080 	call	31508 <alt_open_fd>
}  
   31630:	0001883a 	nop
   31634:	e037883a 	mov	sp,fp
   31638:	dfc00117 	ldw	ra,4(sp)
   3163c:	df000017 	ldw	fp,0(sp)
   31640:	dec00204 	addi	sp,sp,8
   31644:	f800283a 	ret

00031648 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31648:	defffe04 	addi	sp,sp,-8
   3164c:	dfc00115 	stw	ra,4(sp)
   31650:	df000015 	stw	fp,0(sp)
   31654:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31658:	d0a00c17 	ldw	r2,-32720(gp)
   3165c:	10000326 	beq	r2,zero,3166c <alt_get_errno+0x24>
   31660:	d0a00c17 	ldw	r2,-32720(gp)
   31664:	103ee83a 	callr	r2
   31668:	00000106 	br	31670 <alt_get_errno+0x28>
   3166c:	d0a6e004 	addi	r2,gp,-25728
}
   31670:	e037883a 	mov	sp,fp
   31674:	dfc00117 	ldw	ra,4(sp)
   31678:	df000017 	ldw	fp,0(sp)
   3167c:	dec00204 	addi	sp,sp,8
   31680:	f800283a 	ret

00031684 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   31684:	defffd04 	addi	sp,sp,-12
   31688:	df000215 	stw	fp,8(sp)
   3168c:	df000204 	addi	fp,sp,8
   31690:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   31694:	e0bfff17 	ldw	r2,-4(fp)
   31698:	10800217 	ldw	r2,8(r2)
   3169c:	10d00034 	orhi	r3,r2,16384
   316a0:	e0bfff17 	ldw	r2,-4(fp)
   316a4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   316a8:	e03ffe15 	stw	zero,-8(fp)
   316ac:	00001d06 	br	31724 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   316b0:	008000f4 	movhi	r2,3
   316b4:	108b9904 	addi	r2,r2,11876
   316b8:	e0fffe17 	ldw	r3,-8(fp)
   316bc:	18c00324 	muli	r3,r3,12
   316c0:	10c5883a 	add	r2,r2,r3
   316c4:	10c00017 	ldw	r3,0(r2)
   316c8:	e0bfff17 	ldw	r2,-4(fp)
   316cc:	10800017 	ldw	r2,0(r2)
   316d0:	1880111e 	bne	r3,r2,31718 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   316d4:	008000f4 	movhi	r2,3
   316d8:	108b9904 	addi	r2,r2,11876
   316dc:	e0fffe17 	ldw	r3,-8(fp)
   316e0:	18c00324 	muli	r3,r3,12
   316e4:	10c5883a 	add	r2,r2,r3
   316e8:	10800204 	addi	r2,r2,8
   316ec:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   316f0:	1000090e 	bge	r2,zero,31718 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   316f4:	e0bffe17 	ldw	r2,-8(fp)
   316f8:	10c00324 	muli	r3,r2,12
   316fc:	008000f4 	movhi	r2,3
   31700:	108b9904 	addi	r2,r2,11876
   31704:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   31708:	e0bfff17 	ldw	r2,-4(fp)
   3170c:	18800226 	beq	r3,r2,31718 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   31710:	00bffcc4 	movi	r2,-13
   31714:	00000806 	br	31738 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   31718:	e0bffe17 	ldw	r2,-8(fp)
   3171c:	10800044 	addi	r2,r2,1
   31720:	e0bffe15 	stw	r2,-8(fp)
   31724:	d0a00b17 	ldw	r2,-32724(gp)
   31728:	1007883a 	mov	r3,r2
   3172c:	e0bffe17 	ldw	r2,-8(fp)
   31730:	18bfdf2e 	bgeu	r3,r2,316b0 <__alt_data_end+0xffff22b0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   31734:	0005883a 	mov	r2,zero
}
   31738:	e037883a 	mov	sp,fp
   3173c:	df000017 	ldw	fp,0(sp)
   31740:	dec00104 	addi	sp,sp,4
   31744:	f800283a 	ret

00031748 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   31748:	defff604 	addi	sp,sp,-40
   3174c:	dfc00915 	stw	ra,36(sp)
   31750:	df000815 	stw	fp,32(sp)
   31754:	df000804 	addi	fp,sp,32
   31758:	e13ffd15 	stw	r4,-12(fp)
   3175c:	e17ffe15 	stw	r5,-8(fp)
   31760:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   31764:	00bfffc4 	movi	r2,-1
   31768:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   3176c:	00bffb44 	movi	r2,-19
   31770:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   31774:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   31778:	d1600904 	addi	r5,gp,-32732
   3177c:	e13ffd17 	ldw	r4,-12(fp)
   31780:	0031a640 	call	31a64 <alt_find_dev>
   31784:	e0bff815 	stw	r2,-32(fp)
   31788:	e0bff817 	ldw	r2,-32(fp)
   3178c:	1000051e 	bne	r2,zero,317a4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   31790:	e13ffd17 	ldw	r4,-12(fp)
   31794:	0031af40 	call	31af4 <alt_find_file>
   31798:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   3179c:	00800044 	movi	r2,1
   317a0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   317a4:	e0bff817 	ldw	r2,-32(fp)
   317a8:	10002926 	beq	r2,zero,31850 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   317ac:	e13ff817 	ldw	r4,-32(fp)
   317b0:	0031bfc0 	call	31bfc <alt_get_fd>
   317b4:	e0bff915 	stw	r2,-28(fp)
   317b8:	e0bff917 	ldw	r2,-28(fp)
   317bc:	1000030e 	bge	r2,zero,317cc <open+0x84>
    {
      status = index;
   317c0:	e0bff917 	ldw	r2,-28(fp)
   317c4:	e0bffa15 	stw	r2,-24(fp)
   317c8:	00002306 	br	31858 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   317cc:	e0bff917 	ldw	r2,-28(fp)
   317d0:	10c00324 	muli	r3,r2,12
   317d4:	008000f4 	movhi	r2,3
   317d8:	108b9904 	addi	r2,r2,11876
   317dc:	1885883a 	add	r2,r3,r2
   317e0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   317e4:	e0fffe17 	ldw	r3,-8(fp)
   317e8:	00900034 	movhi	r2,16384
   317ec:	10bfffc4 	addi	r2,r2,-1
   317f0:	1886703a 	and	r3,r3,r2
   317f4:	e0bffc17 	ldw	r2,-16(fp)
   317f8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   317fc:	e0bffb17 	ldw	r2,-20(fp)
   31800:	1000051e 	bne	r2,zero,31818 <open+0xd0>
   31804:	e13ffc17 	ldw	r4,-16(fp)
   31808:	00316840 	call	31684 <alt_file_locked>
   3180c:	e0bffa15 	stw	r2,-24(fp)
   31810:	e0bffa17 	ldw	r2,-24(fp)
   31814:	10001016 	blt	r2,zero,31858 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   31818:	e0bff817 	ldw	r2,-32(fp)
   3181c:	10800317 	ldw	r2,12(r2)
   31820:	10000826 	beq	r2,zero,31844 <open+0xfc>
   31824:	e0bff817 	ldw	r2,-32(fp)
   31828:	10800317 	ldw	r2,12(r2)
   3182c:	e1ffff17 	ldw	r7,-4(fp)
   31830:	e1bffe17 	ldw	r6,-8(fp)
   31834:	e17ffd17 	ldw	r5,-12(fp)
   31838:	e13ffc17 	ldw	r4,-16(fp)
   3183c:	103ee83a 	callr	r2
   31840:	00000106 	br	31848 <open+0x100>
   31844:	0005883a 	mov	r2,zero
   31848:	e0bffa15 	stw	r2,-24(fp)
   3184c:	00000206 	br	31858 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   31850:	00bffb44 	movi	r2,-19
   31854:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   31858:	e0bffa17 	ldw	r2,-24(fp)
   3185c:	1000090e 	bge	r2,zero,31884 <open+0x13c>
  {
    alt_release_fd (index);  
   31860:	e13ff917 	ldw	r4,-28(fp)
   31864:	002ff1c0 	call	2ff1c <alt_release_fd>
    ALT_ERRNO = -status;
   31868:	00316480 	call	31648 <alt_get_errno>
   3186c:	1007883a 	mov	r3,r2
   31870:	e0bffa17 	ldw	r2,-24(fp)
   31874:	0085c83a 	sub	r2,zero,r2
   31878:	18800015 	stw	r2,0(r3)
    return -1;
   3187c:	00bfffc4 	movi	r2,-1
   31880:	00000106 	br	31888 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   31884:	e0bff917 	ldw	r2,-28(fp)
}
   31888:	e037883a 	mov	sp,fp
   3188c:	dfc00117 	ldw	ra,4(sp)
   31890:	df000017 	ldw	fp,0(sp)
   31894:	dec00204 	addi	sp,sp,8
   31898:	f800283a 	ret

0003189c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   3189c:	defffa04 	addi	sp,sp,-24
   318a0:	df000515 	stw	fp,20(sp)
   318a4:	df000504 	addi	fp,sp,20
   318a8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   318ac:	0005303a 	rdctl	r2,status
   318b0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   318b4:	e0fffc17 	ldw	r3,-16(fp)
   318b8:	00bfff84 	movi	r2,-2
   318bc:	1884703a 	and	r2,r3,r2
   318c0:	1001703a 	wrctl	status,r2
  
  return context;
   318c4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   318c8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   318cc:	e0bfff17 	ldw	r2,-4(fp)
   318d0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   318d4:	e0bffd17 	ldw	r2,-12(fp)
   318d8:	10800017 	ldw	r2,0(r2)
   318dc:	e0fffd17 	ldw	r3,-12(fp)
   318e0:	18c00117 	ldw	r3,4(r3)
   318e4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   318e8:	e0bffd17 	ldw	r2,-12(fp)
   318ec:	10800117 	ldw	r2,4(r2)
   318f0:	e0fffd17 	ldw	r3,-12(fp)
   318f4:	18c00017 	ldw	r3,0(r3)
   318f8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   318fc:	e0bffd17 	ldw	r2,-12(fp)
   31900:	e0fffd17 	ldw	r3,-12(fp)
   31904:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   31908:	e0bffd17 	ldw	r2,-12(fp)
   3190c:	e0fffd17 	ldw	r3,-12(fp)
   31910:	10c00015 	stw	r3,0(r2)
   31914:	e0bffb17 	ldw	r2,-20(fp)
   31918:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3191c:	e0bffe17 	ldw	r2,-8(fp)
   31920:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   31924:	0001883a 	nop
   31928:	e037883a 	mov	sp,fp
   3192c:	df000017 	ldw	fp,0(sp)
   31930:	dec00104 	addi	sp,sp,4
   31934:	f800283a 	ret

00031938 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   31938:	defffb04 	addi	sp,sp,-20
   3193c:	dfc00415 	stw	ra,16(sp)
   31940:	df000315 	stw	fp,12(sp)
   31944:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   31948:	d0a00f17 	ldw	r2,-32708(gp)
   3194c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   31950:	d0a6e617 	ldw	r2,-25704(gp)
   31954:	10800044 	addi	r2,r2,1
   31958:	d0a6e615 	stw	r2,-25704(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   3195c:	00002e06 	br	31a18 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   31960:	e0bffd17 	ldw	r2,-12(fp)
   31964:	10800017 	ldw	r2,0(r2)
   31968:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   3196c:	e0bffd17 	ldw	r2,-12(fp)
   31970:	10800403 	ldbu	r2,16(r2)
   31974:	10803fcc 	andi	r2,r2,255
   31978:	10000426 	beq	r2,zero,3198c <alt_tick+0x54>
   3197c:	d0a6e617 	ldw	r2,-25704(gp)
   31980:	1000021e 	bne	r2,zero,3198c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   31984:	e0bffd17 	ldw	r2,-12(fp)
   31988:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   3198c:	e0bffd17 	ldw	r2,-12(fp)
   31990:	10800217 	ldw	r2,8(r2)
   31994:	d0e6e617 	ldw	r3,-25704(gp)
   31998:	18801d36 	bltu	r3,r2,31a10 <alt_tick+0xd8>
   3199c:	e0bffd17 	ldw	r2,-12(fp)
   319a0:	10800403 	ldbu	r2,16(r2)
   319a4:	10803fcc 	andi	r2,r2,255
   319a8:	1000191e 	bne	r2,zero,31a10 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   319ac:	e0bffd17 	ldw	r2,-12(fp)
   319b0:	10800317 	ldw	r2,12(r2)
   319b4:	e0fffd17 	ldw	r3,-12(fp)
   319b8:	18c00517 	ldw	r3,20(r3)
   319bc:	1809883a 	mov	r4,r3
   319c0:	103ee83a 	callr	r2
   319c4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   319c8:	e0bfff17 	ldw	r2,-4(fp)
   319cc:	1000031e 	bne	r2,zero,319dc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   319d0:	e13ffd17 	ldw	r4,-12(fp)
   319d4:	003189c0 	call	3189c <alt_alarm_stop>
   319d8:	00000d06 	br	31a10 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   319dc:	e0bffd17 	ldw	r2,-12(fp)
   319e0:	10c00217 	ldw	r3,8(r2)
   319e4:	e0bfff17 	ldw	r2,-4(fp)
   319e8:	1887883a 	add	r3,r3,r2
   319ec:	e0bffd17 	ldw	r2,-12(fp)
   319f0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   319f4:	e0bffd17 	ldw	r2,-12(fp)
   319f8:	10c00217 	ldw	r3,8(r2)
   319fc:	d0a6e617 	ldw	r2,-25704(gp)
   31a00:	1880032e 	bgeu	r3,r2,31a10 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   31a04:	e0bffd17 	ldw	r2,-12(fp)
   31a08:	00c00044 	movi	r3,1
   31a0c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   31a10:	e0bffe17 	ldw	r2,-8(fp)
   31a14:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   31a18:	e0fffd17 	ldw	r3,-12(fp)
   31a1c:	d0a00f04 	addi	r2,gp,-32708
   31a20:	18bfcf1e 	bne	r3,r2,31960 <__alt_data_end+0xffff2560>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   31a24:	0001883a 	nop
}
   31a28:	0001883a 	nop
   31a2c:	e037883a 	mov	sp,fp
   31a30:	dfc00117 	ldw	ra,4(sp)
   31a34:	df000017 	ldw	fp,0(sp)
   31a38:	dec00204 	addi	sp,sp,8
   31a3c:	f800283a 	ret

00031a40 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   31a40:	deffff04 	addi	sp,sp,-4
   31a44:	df000015 	stw	fp,0(sp)
   31a48:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   31a4c:	000170fa 	wrctl	ienable,zero
}
   31a50:	0001883a 	nop
   31a54:	e037883a 	mov	sp,fp
   31a58:	df000017 	ldw	fp,0(sp)
   31a5c:	dec00104 	addi	sp,sp,4
   31a60:	f800283a 	ret

00031a64 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   31a64:	defffa04 	addi	sp,sp,-24
   31a68:	dfc00515 	stw	ra,20(sp)
   31a6c:	df000415 	stw	fp,16(sp)
   31a70:	df000404 	addi	fp,sp,16
   31a74:	e13ffe15 	stw	r4,-8(fp)
   31a78:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   31a7c:	e0bfff17 	ldw	r2,-4(fp)
   31a80:	10800017 	ldw	r2,0(r2)
   31a84:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   31a88:	e13ffe17 	ldw	r4,-8(fp)
   31a8c:	002c0b00 	call	2c0b0 <strlen>
   31a90:	10800044 	addi	r2,r2,1
   31a94:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   31a98:	00000d06 	br	31ad0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   31a9c:	e0bffc17 	ldw	r2,-16(fp)
   31aa0:	10800217 	ldw	r2,8(r2)
   31aa4:	e0fffd17 	ldw	r3,-12(fp)
   31aa8:	180d883a 	mov	r6,r3
   31aac:	e17ffe17 	ldw	r5,-8(fp)
   31ab0:	1009883a 	mov	r4,r2
   31ab4:	0031e180 	call	31e18 <memcmp>
   31ab8:	1000021e 	bne	r2,zero,31ac4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   31abc:	e0bffc17 	ldw	r2,-16(fp)
   31ac0:	00000706 	br	31ae0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   31ac4:	e0bffc17 	ldw	r2,-16(fp)
   31ac8:	10800017 	ldw	r2,0(r2)
   31acc:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   31ad0:	e0fffc17 	ldw	r3,-16(fp)
   31ad4:	e0bfff17 	ldw	r2,-4(fp)
   31ad8:	18bff01e 	bne	r3,r2,31a9c <__alt_data_end+0xffff269c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   31adc:	0005883a 	mov	r2,zero
}
   31ae0:	e037883a 	mov	sp,fp
   31ae4:	dfc00117 	ldw	ra,4(sp)
   31ae8:	df000017 	ldw	fp,0(sp)
   31aec:	dec00204 	addi	sp,sp,8
   31af0:	f800283a 	ret

00031af4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   31af4:	defffb04 	addi	sp,sp,-20
   31af8:	dfc00415 	stw	ra,16(sp)
   31afc:	df000315 	stw	fp,12(sp)
   31b00:	df000304 	addi	fp,sp,12
   31b04:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   31b08:	d0a00717 	ldw	r2,-32740(gp)
   31b0c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   31b10:	00003106 	br	31bd8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   31b14:	e0bffd17 	ldw	r2,-12(fp)
   31b18:	10800217 	ldw	r2,8(r2)
   31b1c:	1009883a 	mov	r4,r2
   31b20:	002c0b00 	call	2c0b0 <strlen>
   31b24:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   31b28:	e0bffd17 	ldw	r2,-12(fp)
   31b2c:	10c00217 	ldw	r3,8(r2)
   31b30:	e0bffe17 	ldw	r2,-8(fp)
   31b34:	10bfffc4 	addi	r2,r2,-1
   31b38:	1885883a 	add	r2,r3,r2
   31b3c:	10800003 	ldbu	r2,0(r2)
   31b40:	10803fcc 	andi	r2,r2,255
   31b44:	1080201c 	xori	r2,r2,128
   31b48:	10bfe004 	addi	r2,r2,-128
   31b4c:	10800bd8 	cmpnei	r2,r2,47
   31b50:	1000031e 	bne	r2,zero,31b60 <alt_find_file+0x6c>
    {
      len -= 1;
   31b54:	e0bffe17 	ldw	r2,-8(fp)
   31b58:	10bfffc4 	addi	r2,r2,-1
   31b5c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   31b60:	e0bffe17 	ldw	r2,-8(fp)
   31b64:	e0ffff17 	ldw	r3,-4(fp)
   31b68:	1885883a 	add	r2,r3,r2
   31b6c:	10800003 	ldbu	r2,0(r2)
   31b70:	10803fcc 	andi	r2,r2,255
   31b74:	1080201c 	xori	r2,r2,128
   31b78:	10bfe004 	addi	r2,r2,-128
   31b7c:	10800be0 	cmpeqi	r2,r2,47
   31b80:	1000081e 	bne	r2,zero,31ba4 <alt_find_file+0xb0>
   31b84:	e0bffe17 	ldw	r2,-8(fp)
   31b88:	e0ffff17 	ldw	r3,-4(fp)
   31b8c:	1885883a 	add	r2,r3,r2
   31b90:	10800003 	ldbu	r2,0(r2)
   31b94:	10803fcc 	andi	r2,r2,255
   31b98:	1080201c 	xori	r2,r2,128
   31b9c:	10bfe004 	addi	r2,r2,-128
   31ba0:	10000a1e 	bne	r2,zero,31bcc <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   31ba4:	e0bffd17 	ldw	r2,-12(fp)
   31ba8:	10800217 	ldw	r2,8(r2)
   31bac:	e0fffe17 	ldw	r3,-8(fp)
   31bb0:	180d883a 	mov	r6,r3
   31bb4:	e17fff17 	ldw	r5,-4(fp)
   31bb8:	1009883a 	mov	r4,r2
   31bbc:	0031e180 	call	31e18 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   31bc0:	1000021e 	bne	r2,zero,31bcc <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   31bc4:	e0bffd17 	ldw	r2,-12(fp)
   31bc8:	00000706 	br	31be8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   31bcc:	e0bffd17 	ldw	r2,-12(fp)
   31bd0:	10800017 	ldw	r2,0(r2)
   31bd4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   31bd8:	e0fffd17 	ldw	r3,-12(fp)
   31bdc:	d0a00704 	addi	r2,gp,-32740
   31be0:	18bfcc1e 	bne	r3,r2,31b14 <__alt_data_end+0xffff2714>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   31be4:	0005883a 	mov	r2,zero
}
   31be8:	e037883a 	mov	sp,fp
   31bec:	dfc00117 	ldw	ra,4(sp)
   31bf0:	df000017 	ldw	fp,0(sp)
   31bf4:	dec00204 	addi	sp,sp,8
   31bf8:	f800283a 	ret

00031bfc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   31bfc:	defffc04 	addi	sp,sp,-16
   31c00:	df000315 	stw	fp,12(sp)
   31c04:	df000304 	addi	fp,sp,12
   31c08:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   31c0c:	00bffa04 	movi	r2,-24
   31c10:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   31c14:	e03ffd15 	stw	zero,-12(fp)
   31c18:	00001906 	br	31c80 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   31c1c:	008000f4 	movhi	r2,3
   31c20:	108b9904 	addi	r2,r2,11876
   31c24:	e0fffd17 	ldw	r3,-12(fp)
   31c28:	18c00324 	muli	r3,r3,12
   31c2c:	10c5883a 	add	r2,r2,r3
   31c30:	10800017 	ldw	r2,0(r2)
   31c34:	10000f1e 	bne	r2,zero,31c74 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   31c38:	008000f4 	movhi	r2,3
   31c3c:	108b9904 	addi	r2,r2,11876
   31c40:	e0fffd17 	ldw	r3,-12(fp)
   31c44:	18c00324 	muli	r3,r3,12
   31c48:	10c5883a 	add	r2,r2,r3
   31c4c:	e0ffff17 	ldw	r3,-4(fp)
   31c50:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   31c54:	d0e00b17 	ldw	r3,-32724(gp)
   31c58:	e0bffd17 	ldw	r2,-12(fp)
   31c5c:	1880020e 	bge	r3,r2,31c68 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   31c60:	e0bffd17 	ldw	r2,-12(fp)
   31c64:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   31c68:	e0bffd17 	ldw	r2,-12(fp)
   31c6c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   31c70:	00000606 	br	31c8c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   31c74:	e0bffd17 	ldw	r2,-12(fp)
   31c78:	10800044 	addi	r2,r2,1
   31c7c:	e0bffd15 	stw	r2,-12(fp)
   31c80:	e0bffd17 	ldw	r2,-12(fp)
   31c84:	10800810 	cmplti	r2,r2,32
   31c88:	103fe41e 	bne	r2,zero,31c1c <__alt_data_end+0xffff281c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   31c8c:	e0bffe17 	ldw	r2,-8(fp)
}
   31c90:	e037883a 	mov	sp,fp
   31c94:	df000017 	ldw	fp,0(sp)
   31c98:	dec00104 	addi	sp,sp,4
   31c9c:	f800283a 	ret

00031ca0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   31ca0:	defffb04 	addi	sp,sp,-20
   31ca4:	df000415 	stw	fp,16(sp)
   31ca8:	df000404 	addi	fp,sp,16
   31cac:	e13ffe15 	stw	r4,-8(fp)
   31cb0:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   31cb4:	e0bfff17 	ldw	r2,-4(fp)
   31cb8:	10840070 	cmpltui	r2,r2,4097
   31cbc:	1000021e 	bne	r2,zero,31cc8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   31cc0:	00840004 	movi	r2,4096
   31cc4:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   31cc8:	e0fffe17 	ldw	r3,-8(fp)
   31ccc:	e0bfff17 	ldw	r2,-4(fp)
   31cd0:	1885883a 	add	r2,r3,r2
   31cd4:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   31cd8:	e0bffe17 	ldw	r2,-8(fp)
   31cdc:	e0bffc15 	stw	r2,-16(fp)
   31ce0:	00000506 	br	31cf8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   31ce4:	e0bffc17 	ldw	r2,-16(fp)
   31ce8:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   31cec:	e0bffc17 	ldw	r2,-16(fp)
   31cf0:	10800804 	addi	r2,r2,32
   31cf4:	e0bffc15 	stw	r2,-16(fp)
   31cf8:	e0fffc17 	ldw	r3,-16(fp)
   31cfc:	e0bffd17 	ldw	r2,-12(fp)
   31d00:	18bff836 	bltu	r3,r2,31ce4 <__alt_data_end+0xffff28e4>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   31d04:	e0bffe17 	ldw	r2,-8(fp)
   31d08:	108007cc 	andi	r2,r2,31
   31d0c:	10000226 	beq	r2,zero,31d18 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   31d10:	e0bffc17 	ldw	r2,-16(fp)
   31d14:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   31d18:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   31d1c:	0001883a 	nop
   31d20:	e037883a 	mov	sp,fp
   31d24:	df000017 	ldw	fp,0(sp)
   31d28:	dec00104 	addi	sp,sp,4
   31d2c:	f800283a 	ret

00031d30 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   31d30:	defffe04 	addi	sp,sp,-8
   31d34:	df000115 	stw	fp,4(sp)
   31d38:	df000104 	addi	fp,sp,4
   31d3c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   31d40:	e0bfff17 	ldw	r2,-4(fp)
   31d44:	10bffe84 	addi	r2,r2,-6
   31d48:	10c00428 	cmpgeui	r3,r2,16
   31d4c:	18001a1e 	bne	r3,zero,31db8 <alt_exception_cause_generated_bad_addr+0x88>
   31d50:	100690ba 	slli	r3,r2,2
   31d54:	008000f4 	movhi	r2,3
   31d58:	10875a04 	addi	r2,r2,7528
   31d5c:	1885883a 	add	r2,r3,r2
   31d60:	10800017 	ldw	r2,0(r2)
   31d64:	1000683a 	jmp	r2
   31d68:	00031da8 	cmpgeui	zero,zero,3190
   31d6c:	00031da8 	cmpgeui	zero,zero,3190
   31d70:	00031db8 	rdprs	zero,zero,3190
   31d74:	00031db8 	rdprs	zero,zero,3190
   31d78:	00031db8 	rdprs	zero,zero,3190
   31d7c:	00031da8 	cmpgeui	zero,zero,3190
   31d80:	00031db0 	cmpltui	zero,zero,3190
   31d84:	00031db8 	rdprs	zero,zero,3190
   31d88:	00031da8 	cmpgeui	zero,zero,3190
   31d8c:	00031da8 	cmpgeui	zero,zero,3190
   31d90:	00031db8 	rdprs	zero,zero,3190
   31d94:	00031da8 	cmpgeui	zero,zero,3190
   31d98:	00031db0 	cmpltui	zero,zero,3190
   31d9c:	00031db8 	rdprs	zero,zero,3190
   31da0:	00031db8 	rdprs	zero,zero,3190
   31da4:	00031da8 	cmpgeui	zero,zero,3190
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   31da8:	00800044 	movi	r2,1
   31dac:	00000306 	br	31dbc <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   31db0:	0005883a 	mov	r2,zero
   31db4:	00000106 	br	31dbc <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   31db8:	0005883a 	mov	r2,zero
  }
}
   31dbc:	e037883a 	mov	sp,fp
   31dc0:	df000017 	ldw	fp,0(sp)
   31dc4:	dec00104 	addi	sp,sp,4
   31dc8:	f800283a 	ret

00031dcc <atexit>:
   31dcc:	200b883a 	mov	r5,r4
   31dd0:	000f883a 	mov	r7,zero
   31dd4:	000d883a 	mov	r6,zero
   31dd8:	0009883a 	mov	r4,zero
   31ddc:	0031e941 	jmpi	31e94 <__register_exitproc>

00031de0 <exit>:
   31de0:	defffe04 	addi	sp,sp,-8
   31de4:	000b883a 	mov	r5,zero
   31de8:	dc000015 	stw	r16,0(sp)
   31dec:	dfc00115 	stw	ra,4(sp)
   31df0:	2021883a 	mov	r16,r4
   31df4:	0031fac0 	call	31fac <__call_exitprocs>
   31df8:	008000f4 	movhi	r2,3
   31dfc:	10901d04 	addi	r2,r2,16500
   31e00:	11000017 	ldw	r4,0(r2)
   31e04:	20800f17 	ldw	r2,60(r4)
   31e08:	10000126 	beq	r2,zero,31e10 <exit+0x30>
   31e0c:	103ee83a 	callr	r2
   31e10:	8009883a 	mov	r4,r16
   31e14:	003212c0 	call	3212c <_exit>

00031e18 <memcmp>:
   31e18:	01c000c4 	movi	r7,3
   31e1c:	3980192e 	bgeu	r7,r6,31e84 <memcmp+0x6c>
   31e20:	2144b03a 	or	r2,r4,r5
   31e24:	11c4703a 	and	r2,r2,r7
   31e28:	10000f26 	beq	r2,zero,31e68 <memcmp+0x50>
   31e2c:	20800003 	ldbu	r2,0(r4)
   31e30:	28c00003 	ldbu	r3,0(r5)
   31e34:	10c0151e 	bne	r2,r3,31e8c <memcmp+0x74>
   31e38:	31bfff84 	addi	r6,r6,-2
   31e3c:	01ffffc4 	movi	r7,-1
   31e40:	00000406 	br	31e54 <memcmp+0x3c>
   31e44:	20800003 	ldbu	r2,0(r4)
   31e48:	28c00003 	ldbu	r3,0(r5)
   31e4c:	31bfffc4 	addi	r6,r6,-1
   31e50:	10c00e1e 	bne	r2,r3,31e8c <memcmp+0x74>
   31e54:	21000044 	addi	r4,r4,1
   31e58:	29400044 	addi	r5,r5,1
   31e5c:	31fff91e 	bne	r6,r7,31e44 <__alt_data_end+0xffff2a44>
   31e60:	0005883a 	mov	r2,zero
   31e64:	f800283a 	ret
   31e68:	20c00017 	ldw	r3,0(r4)
   31e6c:	28800017 	ldw	r2,0(r5)
   31e70:	18bfee1e 	bne	r3,r2,31e2c <__alt_data_end+0xffff2a2c>
   31e74:	31bfff04 	addi	r6,r6,-4
   31e78:	21000104 	addi	r4,r4,4
   31e7c:	29400104 	addi	r5,r5,4
   31e80:	39bff936 	bltu	r7,r6,31e68 <__alt_data_end+0xffff2a68>
   31e84:	303fe91e 	bne	r6,zero,31e2c <__alt_data_end+0xffff2a2c>
   31e88:	003ff506 	br	31e60 <__alt_data_end+0xffff2a60>
   31e8c:	10c5c83a 	sub	r2,r2,r3
   31e90:	f800283a 	ret

00031e94 <__register_exitproc>:
   31e94:	defffa04 	addi	sp,sp,-24
   31e98:	dc000315 	stw	r16,12(sp)
   31e9c:	040000f4 	movhi	r16,3
   31ea0:	84101d04 	addi	r16,r16,16500
   31ea4:	80c00017 	ldw	r3,0(r16)
   31ea8:	dc400415 	stw	r17,16(sp)
   31eac:	dfc00515 	stw	ra,20(sp)
   31eb0:	18805217 	ldw	r2,328(r3)
   31eb4:	2023883a 	mov	r17,r4
   31eb8:	10003726 	beq	r2,zero,31f98 <__register_exitproc+0x104>
   31ebc:	10c00117 	ldw	r3,4(r2)
   31ec0:	010007c4 	movi	r4,31
   31ec4:	20c00e16 	blt	r4,r3,31f00 <__register_exitproc+0x6c>
   31ec8:	1a000044 	addi	r8,r3,1
   31ecc:	8800221e 	bne	r17,zero,31f58 <__register_exitproc+0xc4>
   31ed0:	18c00084 	addi	r3,r3,2
   31ed4:	18c7883a 	add	r3,r3,r3
   31ed8:	18c7883a 	add	r3,r3,r3
   31edc:	12000115 	stw	r8,4(r2)
   31ee0:	10c7883a 	add	r3,r2,r3
   31ee4:	19400015 	stw	r5,0(r3)
   31ee8:	0005883a 	mov	r2,zero
   31eec:	dfc00517 	ldw	ra,20(sp)
   31ef0:	dc400417 	ldw	r17,16(sp)
   31ef4:	dc000317 	ldw	r16,12(sp)
   31ef8:	dec00604 	addi	sp,sp,24
   31efc:	f800283a 	ret
   31f00:	00800034 	movhi	r2,0
   31f04:	10800004 	addi	r2,r2,0
   31f08:	10002626 	beq	r2,zero,31fa4 <__register_exitproc+0x110>
   31f0c:	01006404 	movi	r4,400
   31f10:	d9400015 	stw	r5,0(sp)
   31f14:	d9800115 	stw	r6,4(sp)
   31f18:	d9c00215 	stw	r7,8(sp)
   31f1c:	00000000 	call	0 <__alt_mem_SRAM1-0x20000>
   31f20:	d9400017 	ldw	r5,0(sp)
   31f24:	d9800117 	ldw	r6,4(sp)
   31f28:	d9c00217 	ldw	r7,8(sp)
   31f2c:	10001d26 	beq	r2,zero,31fa4 <__register_exitproc+0x110>
   31f30:	81000017 	ldw	r4,0(r16)
   31f34:	10000115 	stw	zero,4(r2)
   31f38:	02000044 	movi	r8,1
   31f3c:	22405217 	ldw	r9,328(r4)
   31f40:	0007883a 	mov	r3,zero
   31f44:	12400015 	stw	r9,0(r2)
   31f48:	20805215 	stw	r2,328(r4)
   31f4c:	10006215 	stw	zero,392(r2)
   31f50:	10006315 	stw	zero,396(r2)
   31f54:	883fde26 	beq	r17,zero,31ed0 <__alt_data_end+0xffff2ad0>
   31f58:	18c9883a 	add	r4,r3,r3
   31f5c:	2109883a 	add	r4,r4,r4
   31f60:	1109883a 	add	r4,r2,r4
   31f64:	21802215 	stw	r6,136(r4)
   31f68:	01800044 	movi	r6,1
   31f6c:	12406217 	ldw	r9,392(r2)
   31f70:	30cc983a 	sll	r6,r6,r3
   31f74:	4992b03a 	or	r9,r9,r6
   31f78:	12406215 	stw	r9,392(r2)
   31f7c:	21c04215 	stw	r7,264(r4)
   31f80:	01000084 	movi	r4,2
   31f84:	893fd21e 	bne	r17,r4,31ed0 <__alt_data_end+0xffff2ad0>
   31f88:	11006317 	ldw	r4,396(r2)
   31f8c:	218cb03a 	or	r6,r4,r6
   31f90:	11806315 	stw	r6,396(r2)
   31f94:	003fce06 	br	31ed0 <__alt_data_end+0xffff2ad0>
   31f98:	18805304 	addi	r2,r3,332
   31f9c:	18805215 	stw	r2,328(r3)
   31fa0:	003fc606 	br	31ebc <__alt_data_end+0xffff2abc>
   31fa4:	00bfffc4 	movi	r2,-1
   31fa8:	003fd006 	br	31eec <__alt_data_end+0xffff2aec>

00031fac <__call_exitprocs>:
   31fac:	defff504 	addi	sp,sp,-44
   31fb0:	df000915 	stw	fp,36(sp)
   31fb4:	dd400615 	stw	r21,24(sp)
   31fb8:	dc800315 	stw	r18,12(sp)
   31fbc:	dfc00a15 	stw	ra,40(sp)
   31fc0:	ddc00815 	stw	r23,32(sp)
   31fc4:	dd800715 	stw	r22,28(sp)
   31fc8:	dd000515 	stw	r20,20(sp)
   31fcc:	dcc00415 	stw	r19,16(sp)
   31fd0:	dc400215 	stw	r17,8(sp)
   31fd4:	dc000115 	stw	r16,4(sp)
   31fd8:	d9000015 	stw	r4,0(sp)
   31fdc:	2839883a 	mov	fp,r5
   31fe0:	04800044 	movi	r18,1
   31fe4:	057fffc4 	movi	r21,-1
   31fe8:	008000f4 	movhi	r2,3
   31fec:	10901d04 	addi	r2,r2,16500
   31ff0:	12000017 	ldw	r8,0(r2)
   31ff4:	45005217 	ldw	r20,328(r8)
   31ff8:	44c05204 	addi	r19,r8,328
   31ffc:	a0001c26 	beq	r20,zero,32070 <__call_exitprocs+0xc4>
   32000:	a0800117 	ldw	r2,4(r20)
   32004:	15ffffc4 	addi	r23,r2,-1
   32008:	b8000d16 	blt	r23,zero,32040 <__call_exitprocs+0x94>
   3200c:	14000044 	addi	r16,r2,1
   32010:	8421883a 	add	r16,r16,r16
   32014:	8421883a 	add	r16,r16,r16
   32018:	84402004 	addi	r17,r16,128
   3201c:	a463883a 	add	r17,r20,r17
   32020:	a421883a 	add	r16,r20,r16
   32024:	e0001e26 	beq	fp,zero,320a0 <__call_exitprocs+0xf4>
   32028:	80804017 	ldw	r2,256(r16)
   3202c:	e0801c26 	beq	fp,r2,320a0 <__call_exitprocs+0xf4>
   32030:	bdffffc4 	addi	r23,r23,-1
   32034:	843fff04 	addi	r16,r16,-4
   32038:	8c7fff04 	addi	r17,r17,-4
   3203c:	bd7ff91e 	bne	r23,r21,32024 <__alt_data_end+0xffff2c24>
   32040:	00800034 	movhi	r2,0
   32044:	10800004 	addi	r2,r2,0
   32048:	10000926 	beq	r2,zero,32070 <__call_exitprocs+0xc4>
   3204c:	a0800117 	ldw	r2,4(r20)
   32050:	1000301e 	bne	r2,zero,32114 <__call_exitprocs+0x168>
   32054:	a0800017 	ldw	r2,0(r20)
   32058:	10003226 	beq	r2,zero,32124 <__call_exitprocs+0x178>
   3205c:	a009883a 	mov	r4,r20
   32060:	98800015 	stw	r2,0(r19)
   32064:	00000000 	call	0 <__alt_mem_SRAM1-0x20000>
   32068:	9d000017 	ldw	r20,0(r19)
   3206c:	a03fe41e 	bne	r20,zero,32000 <__alt_data_end+0xffff2c00>
   32070:	dfc00a17 	ldw	ra,40(sp)
   32074:	df000917 	ldw	fp,36(sp)
   32078:	ddc00817 	ldw	r23,32(sp)
   3207c:	dd800717 	ldw	r22,28(sp)
   32080:	dd400617 	ldw	r21,24(sp)
   32084:	dd000517 	ldw	r20,20(sp)
   32088:	dcc00417 	ldw	r19,16(sp)
   3208c:	dc800317 	ldw	r18,12(sp)
   32090:	dc400217 	ldw	r17,8(sp)
   32094:	dc000117 	ldw	r16,4(sp)
   32098:	dec00b04 	addi	sp,sp,44
   3209c:	f800283a 	ret
   320a0:	a0800117 	ldw	r2,4(r20)
   320a4:	80c00017 	ldw	r3,0(r16)
   320a8:	10bfffc4 	addi	r2,r2,-1
   320ac:	15c01426 	beq	r2,r23,32100 <__call_exitprocs+0x154>
   320b0:	80000015 	stw	zero,0(r16)
   320b4:	183fde26 	beq	r3,zero,32030 <__alt_data_end+0xffff2c30>
   320b8:	95c8983a 	sll	r4,r18,r23
   320bc:	a0806217 	ldw	r2,392(r20)
   320c0:	a5800117 	ldw	r22,4(r20)
   320c4:	2084703a 	and	r2,r4,r2
   320c8:	10000b26 	beq	r2,zero,320f8 <__call_exitprocs+0x14c>
   320cc:	a0806317 	ldw	r2,396(r20)
   320d0:	2088703a 	and	r4,r4,r2
   320d4:	20000c1e 	bne	r4,zero,32108 <__call_exitprocs+0x15c>
   320d8:	89400017 	ldw	r5,0(r17)
   320dc:	d9000017 	ldw	r4,0(sp)
   320e0:	183ee83a 	callr	r3
   320e4:	a0800117 	ldw	r2,4(r20)
   320e8:	15bfbf1e 	bne	r2,r22,31fe8 <__alt_data_end+0xffff2be8>
   320ec:	98800017 	ldw	r2,0(r19)
   320f0:	153fcf26 	beq	r2,r20,32030 <__alt_data_end+0xffff2c30>
   320f4:	003fbc06 	br	31fe8 <__alt_data_end+0xffff2be8>
   320f8:	183ee83a 	callr	r3
   320fc:	003ff906 	br	320e4 <__alt_data_end+0xffff2ce4>
   32100:	a5c00115 	stw	r23,4(r20)
   32104:	003feb06 	br	320b4 <__alt_data_end+0xffff2cb4>
   32108:	89000017 	ldw	r4,0(r17)
   3210c:	183ee83a 	callr	r3
   32110:	003ff406 	br	320e4 <__alt_data_end+0xffff2ce4>
   32114:	a0800017 	ldw	r2,0(r20)
   32118:	a027883a 	mov	r19,r20
   3211c:	1029883a 	mov	r20,r2
   32120:	003fb606 	br	31ffc <__alt_data_end+0xffff2bfc>
   32124:	0005883a 	mov	r2,zero
   32128:	003ffb06 	br	32118 <__alt_data_end+0xffff2d18>

0003212c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   3212c:	defffd04 	addi	sp,sp,-12
   32130:	df000215 	stw	fp,8(sp)
   32134:	df000204 	addi	fp,sp,8
   32138:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   3213c:	0001883a 	nop
   32140:	e0bfff17 	ldw	r2,-4(fp)
   32144:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   32148:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   3214c:	10000226 	beq	r2,zero,32158 <_exit+0x2c>
    ALT_SIM_FAIL();
   32150:	002af070 	cmpltui	zero,zero,43969
   32154:	00000106 	br	3215c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   32158:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   3215c:	003fff06 	br	3215c <__alt_data_end+0xffff2d5c>
